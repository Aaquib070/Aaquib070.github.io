{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","redux/actions/data-list/index.js","views/Nominee/DataListSidebar.js","components/@vuexy/chips/ChipComponent.js","views/Nominee/NomineeListConfig.js","views/Nominee/NomineeList.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","axios","defaults","baseURL","getData","params","dispatch","a","userData","localStorage","getItem","JSON","parse","get","_id","then","response","console","log","data","totalPages","length","getInitialData","filterData","deleteData","obj","post","updateData","getState","addData","dataList","DataListSidebar","state","isLoading","relation","relation1","email","address","contact1","contact2","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","usage","Object","keys","dataParams","prevProps","prevState","setState","primaryContact","secondaryContact","show","handleSidebar","classnames","options","wheelPropagation","thumbView","FormGroup","src","alt","htmlFor","hidden","e","URL","createObjectURL","target","files","Button","Label","for","Input","placeholder","Spinner","outline","Chip","closeChip","closest","remove","avatarImg","avatarText","avatarIcon","avatarColor","height","width","text","closable","closableIcon","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","deleteRow","CustomHeader","UncontrolledDropdown","DropdownToggle","DropdownMenu","tag","right","DropdownItem","index","total","handleRowsPerPage","handleFilter","DataListConfig","currentPage","columns","selector","sortable","minWidth","cell","title","parsedFilter","handleCurrentData","handleDelete","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","page","undefined","history","push","perPage","boolean","urlPrefix","parseInt","toast","error","nominee","userId","res","success","catch","handlePagination","Progress","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","filteredData","connect","NomineeList","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","NomineeListConfig","queryString","location","search"],"mappings":"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","file":"static/js/13.fb1cd246.chunk.js","sourcesContent":["import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import axios from \"axios\"\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\nexport const getData = params => {\n  return async dispatch => {\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n    await axios.get(\"/backendapi/nominee/list/\"+userData._id, params).then(response => {\n      console.log('aaquib  123', response.data);\n      console.log('aaquib  123',params);\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data,\n        totalPages: response.length,\n        params\n      })\n    })\n  }\n}\n\nexport const getInitialData = () => {\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n  return async dispatch => {\n    await axios.get(\"/backendapi/nominee/list/\"+userData._id).then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const filterData = value => {\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\n}\n\nexport const deleteData = obj => {\n  return dispatch => {\n    axios\n      .post(\"/api/datalist/delete-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"DELETE_DATA\", obj })\n      })\n  }\n}\n\nexport const updateData = obj => {\n  console.log('Aaquib 123', obj);\n  return (dispatch, getState) => {\n    axios\n      .post(\"/api/datalist/update-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"UPDATE_DATA\", obj })\n      })\n  }\n}\n\nexport const addData = obj => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post(\"/api/datalist/add-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"ADD_DATA\", obj })\n        dispatch(getData(params))\n      })\n  }\n}\n","import React, { Component } from \"react\"\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\nimport { X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport {Spinner} from \"reactstrap\"\nimport classnames from \"classnames\"\n\nclass DataListSidebar extends Component {\n  state = {\n    //isLoading: props.isLoading,\n    isLoading: this.props.isLoading,\n    relation: 'Son',\n    relation1: 'Son',\n    email: '',\n    address: '',\n    contact1: '',\n    contact2: '',\n    id: \"\",\n    name: \"\",\n    category: \"Audio\",\n    order_status: \"pending\",\n    price: \"\",\n    img: \"\",\n    popularity: {\n      popValue: \"\"\n    }\n  }\n\n  addNew = false\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('aaaaaaaaaaaaaaaaa', this.props.isLoading)\n    if (this.props.data !== null && prevProps.data === null) {\n      if (this.props.data.id !== prevState.id) {\n        this.setState({ id: this.props.data.id })\n      }\n      if (this.props.data.name !== prevState.name) {\n        this.setState({ name: this.props.data.name })\n      }\n      if (this.props.data.relation !== prevState.relation) {\n        this.setState({ relation: this.props.data.relation })\n      }\n      if (this.props.data.relation !== prevState.relation1) {\n        this.setState({ relation1: this.props.data.relation })\n      }\n      if (this.props.data.address !== prevState.address) {\n        this.setState({ address: this.props.data.address })\n      }\n      if (this.props.data.email !== prevState.email) {\n        this.setState({ email: this.props.data.email })\n      }\n      console.log('hhhhhhhhhhhhhhhhhhhhh', this.props.data,prevState )\n      if (this.props.data.primaryContact !== prevState.contact1) {\n        this.setState({ contact1: this.props.data.primaryContact })\n      }\n      if (this.props.data.secondaryContact !== prevState.contact2) {\n        this.setState({ contact2: this.props.data.secondaryContact })\n      }\n     \n      if (this.props.data.order_status !== prevState.order_status) {\n        this.setState({ order_status: this.props.data.order_status })\n      }\n      if (this.props.data.price !== prevState.price) {\n        this.setState({ price: this.props.data.price })\n      }\n      if (this.props.data.img !== prevState.img) {\n        this.setState({ img: this.props.data.img })\n      }\n    }\n    if (this.props.data === null && prevProps.data !== null) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        \n        category: \"Son\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    if (this.addNew) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        category: \"Son\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    this.addNew = false\n  }\n\n  handleSubmit = obj => {\n    if (this.props.data !== null) {\n      obj._id = this.props.data._id\n      obj.usage = this.props.data.usage\n\n      this.props.updateData(obj)\n    } else {\n      this.addNew = true\n      this.props.addData(obj)\n    }\n    let params = Object.keys(this.props.dataParams).length\n      ? this.props.dataParams\n      : { page: 1, perPage: 4 }\n    //this.props.handleSidebar(false, true)\n    //this.props.getData(params)\n  }\n\n  render() {\n    let { show, handleSidebar, data } = this.props\n    \n    let { name, relation,category, order_status, price, popularity, img } = this.state\n    return (\n      <div\n        className={classnames(\"data-list-sidebar\", {\n          show: show\n        })}>\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\n          <h4>{data !== null ? \"UPDATE NOMINEE DETAILS\" : \"ADD NEW NOMINEE\"}</h4>\n          <X size={20} onClick={() => handleSidebar(false, true)} />\n        </div>\n        {/* {this.props.isLoading && <Spinner color=\"primary\" />}\n        {!this.props.isLoading && */}\n        <PerfectScrollbar\n          className=\"data-list-fields px-2 mt-3\"\n          options={{ wheelPropagation: false }}>\n          {this.props.thumbView && img.length ? (\n            <FormGroup className=\"text-center\">\n              <img className=\"img-fluid\" src={img} alt={name} />\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\n                <label\n                  className=\"btn btn-flat-primary\"\n                  htmlFor=\"update-image\"\n                  color=\"primary\">\n                  Upload Image\n                  <input\n                    type=\"file\"\n                    id=\"update-image\"\n                    hidden\n                    onChange={e =>\n                      this.setState({\n                        img: URL.createObjectURL(e.target.files[0])\n                      })\n                    }\n                  />\n                </label>\n                <Button\n                  color=\"flat-danger\"\n                  onClick={() => this.setState({ img: \"\" })}>\n                  Remove Image\n                </Button>\n              </div>\n            </FormGroup>\n          ) : null}\n          <FormGroup>\n            <Label for=\"data-name\">Name *</Label>\n            <Input\n              type=\"text\"\n              value={name}\n              placeholder=\"Nominee Name\"\n              onChange={e => this.setState({ name: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-category\">Relation *</Label>\n            <Input\n              type=\"select\"\n              id=\"data-category\"\n              value={relation}\n              onChange={e => this.setState({ relation: e.target.value, relation1: e.target.value })}>\n              <option>Son</option>\n              <option>Daughter</option>\n              <option>Husband</option>\n              <option>Wide</option>\n              <option>Son-in-law</option>\n              <option>Daughter-in-law</option>\n              <option>Cousin</option>\n              <option>Friend</option>\n              <option>Colluege</option>\n              <option>others</option>\n            </Input>\n          </FormGroup>\n          {relation === \"others\" && <FormGroup>\n            {/* <Label for=\"data-name\">Relation </Label> */}\n            <Input\n              type=\"text\"\n              value={this.state.relation1}\n              placeholder=\"Relation Name\"\n              onChange={e => this.setState({ relation1: e.target.value })}\n              id=\"data-name\"\n            />\n            </FormGroup>}\n            <FormGroup>\n            <Label for=\"data-name\">Email *</Label>\n            <Input\n              type=\"text\"\n              value={this.state.email}\n              placeholder=\"Enter nominee email\"\n              onChange={e => this.setState({ email: e.target.value })}\n              id=\"data-name\"\n            />\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"data-price\">Contact No *</Label>\n            <Input\n              type=\"number\"\n              value={this.state.contact1}\n              onChange={e => this.setState({ contact1: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"Enter primary contact No\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-price\">Secondary Contact No</Label>\n            <Input\n              type=\"number\"\n              value={this.state.contact2}\n              onChange={e => this.setState({ contact2: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"Enter secondry contact No\"\n            />\n          </FormGroup>\n            <FormGroup>\n            <Label for=\"data-name\">Address *</Label>\n            <Input\n              type=\"textarea\"\n              value={this.state.address}\n              placeholder=\"Adress\"\n              onChange={e => this.setState({ address: e.target.value })}\n              id=\"data-name\"\n            />\n            </FormGroup>\n          {/* <FormGroup>\n            <Label for=\"data-popularity\">Popularity</Label>\n            <Input\n              type=\"number\"\n              value={popularity.popValue}\n              id=\"data-popularity\"\n              placeholder=\"0 - 100%\"\n              onChange={e =>\n                this.setState({\n                  popularity: { popularity, popValue: e.target.value }\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-status\">Order Status</Label>\n            <Input\n              type=\"select\"\n              id=\"data-status\"\n              value={order_status}\n              onChange={e => this.setState({ order_status: e.target.value })}>\n              <option>pending</option>\n              <option>canceled</option>\n              <option>delivered</option>\n              <option>on hold</option>\n            </Input>\n          </FormGroup> */}\n          \n          {this.props.thumbView && img.length <= 0 ? (\n            <label\n              className=\"btn btn-primary\"\n              htmlFor=\"upload-image\"\n              color=\"primary\">\n              Upload Image\n              <input\n                type=\"file\"\n                id=\"upload-image\"\n                hidden\n                onChange={e =>\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\n                }\n              />\n            </label>\n          ) : null}\n        </PerfectScrollbar>\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\n          {this.props.isLoading && <Spinner color=\"danger\" size=\"sm\"/>} {data !== null ? (this.props.isLoading ? \"Updating...\" : \"Update\") : (this.props.isLoading ? \"Adding...\" : \"Add\")} \n          </Button>\n          <Button\n            className=\"ml-1\"\n            color=\"danger\"\n            outline\n            onClick={() => handleSidebar(false, true)}>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\nexport default DataListSidebar\n","import React from \"react\"\nimport { X } from \"react-feather\"\nclass Chip extends React.Component {\n  closeChip = e => {\n    e.target.closest(\".chip\").remove()\n  }\n\n  render() {\n    return (\n      <div\n        className={`chip ${this.props.className} ${\n          this.props.color ? `chip-${this.props.color}` : null\n        }`}\n      >\n        <div className=\"chip-body\">\n          {(!this.props.avatarImg && this.props.avatarText) ||\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\n            <div\n              className={`avatar ${\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\n              }`}\n            >\n              <div className=\"avatar-content\">\n                {this.props.avatarText ? this.props.avatarText : null}\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\n              </div>\n            </div>\n          ) : this.props.avatarImg ? (\n            <div className=\"avatar\">\n              <img\n                src={this.props.avatarImg}\n                alt=\"chipImg\"\n                height=\"20\"\n                width=\"20\"\n              />\n            </div>\n          ) : null}\n          <div className=\"chip-text\">{this.props.text}</div>\n          {this.props.closable ? (\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Chip\n","import React, { Component } from \"react\"\nimport {\n  Button,\n  Progress,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input\n} from \"reactstrap\"\nimport { toast } from \"react-toastify\"\nimport DataTable from \"react-data-table-component\"\nimport classnames from \"classnames\"\nimport ReactPaginate from \"react-paginate\"\nimport { history } from \"../../history\"\nimport { ToastContainer } from \"react-toastify\"\nimport {\n  Edit,\n  Trash,\n  ChevronDown,\n  Plus,\n  Check,\n  ChevronLeft,\n  ChevronRight\n} from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport {\n  getData,\n  getInitialData,\n  deleteData,\n  updateData,\n  addData,\n  filterData\n} from \"../../redux/actions/data-list/\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"../../assets/scss/plugins/extensions/toastr.scss\"\nimport Sidebar from \"./DataListSidebar\"\nimport axios from \"axios\";\nimport Chip from \"../../components/@vuexy/chips/ChipComponent\"\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\n\nimport \"../../assets/scss/plugins/extensions/react-paginate.scss\"\nimport \"../../assets/scss/pages/data-list.scss\"\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\n\nconst chipColors = {\n  \"on hold\": \"warning\",\n  delivered: \"success\",\n  pending: \"primary\",\n  canceled: \"danger\"\n}\n\nconst selectedStyle = {\n  rows: {\n    selectedHighlighStyle: {\n      backgroundColor: \"rgba(115,103,240,.05)\",\n      color: \"#7367F0 !important\",\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\n      \"&:hover\": {\n        transform: \"translateY(0px) !important\"\n      }\n    }\n  }\n}\n\nconst ActionsComponent = props => {\n  return (\n    <div className=\"data-list-action\">\n      <Edit\n        className=\"cursor-pointer mr-1\"\n        size={20}\n        onClick={() => {\n          return props.currentData(props.row)\n        }}\n      />\n      <Trash\n        className=\"cursor-pointer\"\n        size={20}\n        onClick={() => {\n          props.deleteRow(props.row)\n        }}\n      />\n    </div>\n  )\n}\n\nconst CustomHeader = props => {\n  return (\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\n      <div className=\"actions-left d-flex flex-wrap\">\n        <UncontrolledDropdown className=\"data-list-dropdown mr-1\">\n          <DropdownToggle className=\"p-1\" color=\"primary\">\n            <span className=\"align-middle mr-1\">Actions</span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\n            <DropdownItem tag=\"a\">Print</DropdownItem>\n            <DropdownItem tag=\"a\">Export</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <Button\n          className=\"add-new-btn\"\n          color=\"primary\"\n          onClick={() => props.handleSidebar(true, true)}\n          outline>\n          <Plus size={15} />\n          <span className=\"align-middle\">Add New Nominee</span>\n        </Button>\n      </div>\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\n            <span className=\"align-middle mx-50\">\n              {`${props.index[0]} - ${props.index[1]} of ${props.total}`}\n            </span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\n              4\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\n              10\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\n              15\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\n              20\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <div className=\"filter-section\">\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass DataListConfig extends Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.dataList.data.length !== state.data.length ||\n      state.currentPage !== props.parsedFilter.page\n    ) {\n      return {\n        data: props.dataList.data,\n        allData: props.dataList.filteredData,\n        //totalPages: props.dataList.totalPages,\n        totalPages: props.dataList.data.length/5,\n        currentPage: parseInt(props.parsedFilter.page) - 1,\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\n        totalRecords: props.dataList.totalRecords,\n        sortIndex: props.dataList.sortIndex\n      }\n    }\n\n    // Return null if the state hasn't changed\n    return null\n  }\n\n  state = {\n    data: [],\n    totalPages: 0,\n    currentPage: 0,\n    columns: [\n      {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n        minWidth: \"200px\",\n        cell: row => (\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n            {row.name}\n          </p>\n        )\n      },\n      {\n        name: \"Relation\",\n        selector: \"relation\",\n        sortable: true\n      },\n      {\n        name: \"Email\",\n        minWidth: \"200px\",\n        selector: \"email\",\n        sortable: true,\n        // cell: row => (\n        //   <Progress\n        //     className=\"w-100 mb-0\"\n        //     color={row.popularity.color}\n        //     value={row.popularity.popValue}\n        //   />\n        //)\n      },\n      {\n        name: \"Contact\",\n        selector: \"primaryContact\",\n        minWidth: \"150px\",\n        sortable: true,\n        //cell: row => `$${row.price}`\n      },\n      {\n        name: \" \",\n        selector: \"usage\",\n        sortable: true,\n        cell: row => (\n          <Chip\n            className=\"m-0\"\n            color={row.usage === \"Unused\" ||  !row.usage ?  \"primary\" : \"success\"}\n            text={row.usage ? row.usage : \"Unused\"}\n          />\n        )\n      },\n      \n      {\n        name: \"Actions\",\n        sortable: true,\n        cell: row => (\n          <ActionsComponent\n            row={row}\n            getData={this.props.getData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        )\n      }\n    ],\n    allData: [],\n    value: \"\",\n    rowsPerPage: 4,\n    sidebar: false,\n    currentData: null,\n    selected: [],\n    totalRecords: 0,\n    sortIndex: [],\n    addNew: \"\",\n    isLoading: false\n  }\n\n  thumbView = this.props.thumbView\n\n  componentDidMount() {\n    this.props.getData(this.props.parsedFilter)\n    this.props.getInitialData()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.thumbView) {\n      this.thumbView = false\n      let columns = [\n        {\n          name: \"Image\",\n          selector: \"img\",\n          minWidth: \"220px\",\n          cell: row => <img src={row.img} height=\"100\" alt={row.name} />\n        },\n        {\n          name: \"Name\",\n          selector: \"name\",\n          sortable: true,\n          minWidth: \"250px\",\n          cell: row => (\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n              {row.name}\n            </p>\n          )\n        },\n        {\n          name: \"Category\",\n          selector: \"category\",\n          sortable: true\n        },\n        {\n          name: \"Popularity\",\n          selector: \"popularity\",\n          sortable: true,\n          cell: row => (\n            <Progress\n              className=\"w-100 mb-0\"\n              color={row.popularity.color}\n              value={row.popularity.popValue}\n            />\n          )\n        },\n        {\n          name: \"Order Status\",\n          selector: \"order_status\",\n          sortable: true,\n          cell: row => (\n            <Chip\n              className=\"m-0\"\n              color={chipColors[row.order_status]}\n              text={row.order_status}\n            />\n          )\n        },\n        {\n          name: \"Price\",\n          selector: \"price\",\n          sortable: true,\n          cell: row => `$${row.price}`\n        },\n        {\n          name: \"Actions\",\n          sortable: true,\n          cell: row => (\n            <ActionsComponent\n              row={row}\n              getData={this.props.getData}\n              parsedFilter={this.props.parsedFilter}\n              currentData={this.handleCurrentData}\n              deleteRow={this.handleDelete}\n            />\n          )\n        }\n      ]\n      this.setState({ columns })\n    }\n  }\n\n  handleFilter = e => {\n    this.setState({ value: e.target.value })\n    this.props.filterData(e.target.value)\n  }\n\n  handleRowsPerPage = value => {\n    let { parsedFilter, getData } = this.props\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\n    history.push(`/nominee/list?page=${page}&perPage=${value}`)\n    this.setState({ rowsPerPage: value })\n    getData({ page: parsedFilter.page, perPage: value })\n  }\n\n  handleSidebar = (boolean, addNew = false) => {\n    this.setState({ sidebar: boolean })\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\n  }\n\n  handleDelete = row => {\n    this.props.deleteData(row)\n    this.props.getData(this.props.parsedFilter)\n    if (this.state.data.length - 1 === 0) {\n      let urlPrefix = this.props.thumbView\n        ? \"/data-list/thumb-view/\"\n        : \"/#/nominee/list/\"\n      history.push(\n        `${urlPrefix}list-view?page=${parseInt(\n          this.props.parsedFilter.page - 1\n        )}&perPage=${this.props.parsedFilter.perPage}`\n      )\n      this.props.getData({\n        page: this.props.parsedFilter.page - 1,\n        perPage: this.props.parsedFilter.perPage\n      })\n    }\n  }\n//  addData = async (obj) => {\n  addData = (obj) => {\n    if(obj.name === \"\" || obj.relation1 === \"\" ||obj.email === \"\" ||obj.contact1 === \"\" || obj.address === \"\" ) {\n      toast.error(\"Please Fill All Mandatory Details\");\n    } else {\n    this.setState({isLoading: true})\n    console.log('aaquib', obj)\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {}    \n    const nominee = {\n    userId: userData._id,\n    name: obj.name,\n    relation: obj.relation1,\n    email: obj.email,\n    primaryContact: obj.contact1,\n    secondaryContact: obj.contact2,\n    address: obj.address,\n    usage: \"Unused\"\n    }\n    axios\n      .post(\"/backendapi/nominee/add\",nominee)\n      .then(res => {\n        this.setState({isLoading: false});\n        toast.success(\"Nominee Added Successfully\");\n        this.handleSidebar(false,true);\n        \n        this.props.getData(this.props.parsedFilter)\n        \n      }).catch(e=>{\n        this.setState({isLoading: false});\n        toast.error(\"Add Nominee Failed! Please contact admin\");\n      })\n\n    console.log('aaquib', nominee);}\n\n  }\n  updateData = obj => {\n    if(obj.name === \"\" || obj.relation1 === \"\" ||obj.email === \"\" ||obj.contact1 === \"\" || obj.address === \"\" ) {\n      toast.error(\"Please Fill All Mandatory Details\");\n    } else {\n    this.setState({isLoading: true})\n    console.log('aaquib', obj)\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {}    \n    const nominee = {\n    _id: obj._id,\n    usage: obj.usage ? obj.usage : \"Unused\",\n    userId: userData._id,\n    name: obj.name,\n    relation: obj.relation1,\n    email: obj.email,\n    primaryContact: obj.contact1,\n    secondaryContact: obj.contact2,\n    address: obj.address,\n    }\n    axios\n      .post(\"/backendapi/nominee/update\",nominee)\n      .then(res => {\n        this.setState({isLoading: false});\n        toast.success(\"Nominee Updated Successfully\");\n        this.handleSidebar(false,true);\n        \n        this.props.getData(this.props.parsedFilter)\n        \n      }).catch(e=>{\n        this.setState({isLoading: false});\n        toast.error(\"Add Nominee Failed! Please contact admin\");\n      })\n\n    console.log('aaquib', nominee);}\n  }\n  handleCurrentData = obj => {\n    this.setState({ currentData: obj })\n    this.handleSidebar(true)\n  }\n\n  handlePagination = page => {\n    let { parsedFilter, getData } = this.props\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\n    let urlPrefix = this.props.thumbView\n      ? \"/#/nominee/list/\"\n      : \"/#/nominee/list/\"\n    history.push(\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\n    )\n    getData({ page: page.selected + 1, perPage: perPage })\n    this.setState({ currentPage: page.selected })\n  }\n\n  render() {\n    let {\n      columns,\n      data,\n      allData,\n      totalPages,\n      value,\n      rowsPerPage,\n      currentData,\n      sidebar,\n      totalRecords,\n      sortIndex\n    } = this.state\n    return (\n      <div\n        className={`data-list ${\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\n        }`}>\n        <DataTable\n          columns={columns}\n          data={value.length ? allData : data}\n          pagination\n          paginationServer\n          paginationComponent={() => (\n            <ReactPaginate\n              previousLabel={<ChevronLeft size={15} />}\n              nextLabel={<ChevronRight size={15} />}\n              breakLabel=\"...\"\n              breakClassName=\"break-me\"\n              pageCount={totalPages}\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\n              activeClassName=\"active\"\n              forcePage={\n                this.props.parsedFilter.page\n                  ? parseInt(this.props.parsedFilter.page - 1)\n                  : 0\n              }\n              onPageChange={page => this.handlePagination(page)}\n            />\n          )}\n          noHeader\n          subHeader\n          selectableRows\n          responsive\n          pointerOnHover\n          selectableRowsHighlight\n          onSelectedRowsChange={data =>\n            this.setState({ selected: data.selectedRows })\n          }\n          customStyles={selectedStyle}\n          subHeaderComponent={\n            <CustomHeader\n              handleSidebar={this.handleSidebar}\n              handleFilter={this.handleFilter}\n              handleRowsPerPage={this.handleRowsPerPage}\n              rowsPerPage={rowsPerPage}\n              total={totalRecords}\n              index={sortIndex}\n            />\n          }\n          sortIcon={<ChevronDown />}\n          selectableRowsComponent={Checkbox}\n          selectableRowsComponentProps={{\n            color: \"primary\",\n            icon: <Check className=\"vx-icon\" size={12} />,\n            label: \"\",\n            size: \"sm\"\n          }}\n        />\n        <Sidebar\n          show={sidebar}\n          data={currentData}\n          updateData={this.updateData}\n          addData={this.addData}\n          isLoading={this.state.isLoading}\n          handleSidebar={this.handleSidebar}\n          thumbView={this.props.thumbView}\n          getData={this.props.getData}\n          dataParams={this.props.parsedFilter}\n          addNew={this.state.addNew}\n        />\n        <div\n          className={classnames(\"data-list-overlay\", {\n            show: sidebar\n          })}\n          onClick={() => this.handleSidebar(false, true)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state.dataList\n  }\n}\n\nexport default connect(mapStateToProps, {\n  getData,\n  deleteData,\n  updateData,\n  addData,\n  getInitialData,\n  filterData\n})(DataListConfig)\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport NomineeListConfig from \"./NomineeListConfig\"\nimport queryString from \"query-string\"\nimport { ToastContainer } from \"react-toastify\"\nclass NomineeList extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Manage Nominees\"\n          breadCrumbParent=\"Nominee\"\n          breadCrumbActive=\"List\"\n        />\n        <Row>\n          \n        <ToastContainer />\n          <Col sm=\"12\">\n            <NomineeListConfig parsedFilter={queryString.parse(this.props.location.search)}/>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default NomineeList\n"],"sourceRoot":""}