{"version":3,"sources":["redux/actions/diary/index.js","views/Diary/DiarySidebar.js","views/Diary/DiaryList.js","views/Diary/TaskSidebar.js","views/Diary/Diary.js"],"names":["axios","defaults","baseURL","getTodos","routeParams","JSON","parse","localStorage","getItem","userData","dispatch","a","get","_id","params","headers","Authorization","then","response","type","todos","data","catch","err","console","log","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","DiarySidebar","Fragment","className","onClick","props","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","this","routerProps","location","pathname","React","Component","connect","filter","history","push","DiaryList","state","open","handleUpdateTask","currentLocation","getdiaryLIst","setState","app","handleOnChange","e","target","searchTask","prevState","clearPrevState","routerFilter","match","todosArr","length","filteredTodos","undefined","renderTodos","map","i","today","Date","createdAt","style","border","padding","key","Modal","isOpen","backdrop","ModalBody","ModalFooter","trashTask","Alert","title","tags","tag","stopPropagation","fontSize","toLocaleDateString","weekday","year","month","day","desc","wordBreak","whiteSpace","FormGroup","display","margin","justifyContent","borderRadius","Input","width","placeholder","onChange","routeParam","todoApp","getState","post","val","colourOptions1","label","isFixed","TaskSidebar","audioDetails","url","blob","chunks","duration","h","m","s","ptype","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleAudioStop","handleAudioUpload","file","handleRest","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","addTaskState","icon","checked","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","updateLabel","labelColor","classNamePrefix","ref","selectAssetRef","name","isClearable","onRecordingComplete","videoBlob","record","audioURL","showUIAudio","rows","textAlign","outline","handleUndoChanges","updateTask","addNewTask","disabled","ans","request","task","user","toast","success","mql","window","matchMedia","Diary","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","mediaQueryChanged","handleAddTask","status","Consumer","context","sidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction"],"mappings":"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","file":"static/js/27.63699a86.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { history } from '../../../history'\r\nimport { toast } from 'react-toastify'\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nexport const getTodos = (routeParams) => {\r\n  const logInUserData = JSON.parse(localStorage.getItem('logInUserData'))\r\n  if (!logInUserData) return\r\n  let userData = localStorage.getItem('logInUserData')\r\n    ? JSON.parse(localStorage.getItem('logInUserData'))\r\n    : {}\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get(`backendapi/diary/list?user=${userData._id}`, {\r\n        params: routeParams,\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // for (let data of response?.data) {\r\n        //   data.nomineeId = data?.nomineeId && decryptdata(data.nomineeId, true)\r\n        //   // data._id = data?._id && decryptdata(data._id,true)\r\n        //   // data.userId = data?.userId && decryptdata(data.userId,true)\r\n        //   data.name = data?.name && decryptdata(data.name, true)\r\n        //   data.relation = data?.relation && decryptdata(data.relation, true)\r\n        //   data.email = data?.email && decryptdata(data.email, true)\r\n        //   data.primaryContact =\r\n        //     data?.primaryContact && decryptdata(data.primaryContact, true)\r\n        //   data.secondaryContact =\r\n        //     data?.secondaryContact && decryptdata(data.secondaryContact, true)\r\n        //   data.address = data?.address && decryptdata(data.address, true)\r\n        // }\r\n        dispatch({\r\n          type: 'GET_TODOS',\r\n          todos: response.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = (todo) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'COMPLETE_TASK', id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'STAR_TASK', id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'IMPORTANT_TASK', id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = (id) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post('/api/app/todo/trash-todo', id, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => dispatch({ type: 'TRASH_TASK', id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = (todo) => {\r\n  console.log('updateTodo todo')\r\n  const request = axios.post('/api/apps/todo/update-todo', todo, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n    }\r\n  })\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then((response) => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: 'UPDATE_TODO',\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (\r\n  id,\r\n  title,\r\n  desc,\r\n  taskToUpdate,\r\n  isCompleted,\r\n  isImportant,\r\n  isStarred,\r\n  tags\r\n) => {\r\n  const ans = {\r\n    _id: id,\r\n    title,\r\n    desc,\r\n    taskToUpdate,\r\n    isCompleted,\r\n    isImportant,\r\n    isStarred,\r\n    tags\r\n  }\r\n  const request = axios.post('/backendapi/diary/update', ans, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n    }\r\n  })\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then((response) => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: 'UPDATE_TASK',\r\n          ans\r\n          // todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: 'UPDATE_LABEL', label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = (task) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    const user = JSON.parse(localStorage.getItem('logInUserData'))._id\r\n    task.user = user\r\n    axios\r\n      .post('/backendapi/diary/add', task, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        dispatch({ type: 'ADD_TASK', task })\r\n        dispatch(getTodos(params))\r\n        toast.success('Note Added Successfully!!')\r\n      })\r\n  }\r\n}\r\n\r\nexport const searchTask = (val) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'SEARCH_TASK',\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = (filter) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'CHANGE_FILTER', filter })\r\n    history.push(`/#/diary/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Layers, Star, Bookmark, Check, Trash } from 'react-feather'\r\nimport { connect } from 'react-redux'\r\nimport { changeFilter } from '../../redux/actions/diary/index'\r\nclass DiarySidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"todo-app-menu\">\r\n          <div className=\"add-task\">\r\n            <Button.Ripple\r\n              block\r\n              className=\"btn-block\"\r\n              color=\"warning\"\r\n              onClick={() => {\r\n                this.props.addTask('open')\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              Add Notes\r\n            </Button.Ripple>\r\n          </div>\r\n          <PerfectScrollbar\r\n            className=\"sidebar-menu-list\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0 pt-0\"\r\n                action\r\n                onClick={() => {\r\n                  this.props.changeFilter('all')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Layers size={22} />\r\n                <span className=\"align-middle ml-1\">All</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('important')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/important'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Star size={22} />\r\n                <span className=\"align-middle ml-1\">Important</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('starred')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/starred'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Bookmark size={22} />\r\n                <span className=\"align-middle ml-1\">Bookmark</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('completed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/completed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Check size={22} />\r\n                <span className=\"align-middle ml-1\">Completed</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('trashed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/trashed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Trash size={22} />\r\n                <span className=\"align-middle ml-1\">Trashed</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('personal')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/personal'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-primary align-middle\" />\r\n                <span className=\"align-middle ml-1\">Personal</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('professional')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/professional'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-warning align-middle\" />\r\n                <span className=\"align-middle ml-1\">Professional</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('others')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/others'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-success align-middle\" />\r\n                <span className=\"align-middle ml-1\">Others</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('todo')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/todo'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-danger align-middle\" />\r\n                <span className=\"align-middle ml-1\">TO DO List</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { changeFilter })(DiarySidebar)\r\n","import React from 'react'\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  Alert,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Modal\r\n} from 'reactstrap'\r\nimport { Menu, Search, Bookmark, Star, Trash } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n} from '../../redux/actions/diary/index'\r\nclass DiaryList extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.app.todo.routeParam !== state.currentLocation) {\r\n      return {\r\n        todos: props.app.todo.todos\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  state = {\r\n    open: false,\r\n    id: null,\r\n    todos: [],\r\n    handleUpdateTask: null,\r\n    currentLocation: this.props?.routerProps?.location?.pathname,\r\n    value: ''\r\n  }\r\n  getdiaryLIst = async () => {\r\n    if (!this.state.currentLocation) return\r\n    await this.props.getTodos(this.state.currentLocation)\r\n    this.setState({\r\n      todos: this.props?.app?.todo?.todos,\r\n      handleUpdateTask: this.props.handleUpdateTask\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    if (this.props.prevState) {\r\n      this.setState({ todos: props.app.todo.todos })\r\n      this.props.clearPrevState()\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getdiaryLIst()\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchTask(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { todos, handleUpdateTask, value } = this.state\r\n    let routerFilter = this.props.routerProps.match.params.filter\r\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\r\n\r\n    if (todosArr === undefined) {\r\n      return (\r\n        <div className=\"fallback-spinner vh-100\">\r\n          <div className=\"loading\">\r\n            <div className=\"effect-1 effects\"></div>\r\n            <div className=\"effect-2 effects\"></div>\r\n            <div className=\"effect-3 effects\"></div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    let renderTodos =\r\n      todosArr.length > 0 ? (\r\n        todosArr.map((todo, i) => {\r\n          var options = {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n          }\r\n          var today = new Date(todo.createdAt)\r\n          return (\r\n            <li\r\n              style={{ border: 'none', padding: '0 1.6rem' }}\r\n              className={`todo-item ${todo.isCompleted ? 'completed' : ''}`}\r\n              key={i}\r\n              onClick={() => {\r\n                handleUpdateTask(todo)\r\n              }}\r\n            >\r\n              <Modal\r\n                isOpen={this.state.open}\r\n                className=\"modal-dialog-centered\"\r\n                backdrop=\"static\"\r\n              >\r\n                <ModalBody>\r\n                  Are you sure you want to delete this record?\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className=\"button-label\"\r\n                    onClick={() => {\r\n                      this.setState({ open: false })\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    color=\"danger\"\r\n                    onClick={() => {\r\n                      this.setState({ open: false })\r\n                      this.props.trashTask(this.state.id)\r\n                    }}\r\n                    className=\"button-label\"\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n              <Alert\r\n                className=\"mt-1\"\r\n                color={todo.isImportant ? 'danger' : 'primary'}\r\n              >\r\n                <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\r\n                  <div className=\"todo-title-area d-flex align-items-center\">\r\n                    <div className=\"title-wrapper d-flex\">\r\n                      <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\r\n                    </div>\r\n\r\n                    {todo.tags.length > 0 ? (\r\n                      <div className=\"chip-wrapper\">\r\n                        {todo.tags.map((tag, i) => (\r\n                          <div className=\"chip mb-0\" key={i}>\r\n                            <div className=\"chip-body\">\r\n                              <span className=\"chip-text\">\r\n                                <span\r\n                                  className={`bullet bullet-${\r\n                                    tag === 'backend'\r\n                                      ? 'warning'\r\n                                      : tag === 'doc'\r\n                                      ? 'success'\r\n                                      : tag === 'bug'\r\n                                      ? 'danger'\r\n                                      : 'primary'\r\n                                  } bullet-xs`}\r\n                                />\r\n                                <span className=\"text-capitalize ml-25\">\r\n                                  {tag}\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`todo-item-action d-flex ${\r\n                      routerFilter === 'trashed' ? 'justify-content-end' : ''\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className={`todo-item-info d-inline-block ${\r\n                        routerFilter === 'trashed' ? 'mr-1' : 'mr-1 mr-sm-0'\r\n                      }`}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.importantTask(todo)\r\n                      }}\r\n                    >\r\n                      <Star\r\n                        size={17}\r\n                        className={`${todo.isImportant ? 'text-danger' : ''}`}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.starTask(todo)\r\n                      }}\r\n                    >\r\n                      <Bookmark\r\n                        size={17}\r\n                        className={`${todo.isStarred ? 'text-warning' : ''}`}\r\n                      />\r\n                    </div>\r\n                    {routerFilter !== 'trashed' ? (\r\n                      <div\r\n                        className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\r\n                        // onClick={(e) => {\r\n                        //   //e.stopPropagation()\r\n                        //   this.openModal(todo.id)\r\n                        // }}\r\n                      >\r\n                        <Trash\r\n                          size={17}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            this.setState({ id: todo.id, open: true })\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <p style={{ fontSize: '8px' }}>\r\n                  {today.toLocaleDateString('en-US', options)}\r\n                </p>\r\n                {todo.desc.length > 0 ? (\r\n                  <p\r\n                    className=\"todo-desc mb-0\"\r\n                    style={{ wordBreak: 'break-all', whiteSpace: 'normal' }}\r\n                  >\r\n                    {todo.desc}\r\n                  </p>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Alert>\r\n            </li>\r\n          )\r\n        })\r\n      ) : (\r\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\r\n          No tasks at this time\r\n        </p>\r\n      )\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"todo-app-area\">\r\n          <div className=\"todo-app-list-wrapper\">\r\n            <div className=\"todo-app-list\">\r\n              <div className=\"app-fixed-search\">\r\n                <div\r\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\r\n                  onClick={() => this.props.mainSidebar(true)}\r\n                >\r\n                  <Menu size={24} />\r\n                </div>\r\n                <FormGroup\r\n                  style={{\r\n                    display: 'flex',\r\n                    margin: 'auto',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                  className=\"position-relative has-icon-left\"\r\n                >\r\n                  <div style={{ borderRadius: '1.428rem' }}>\r\n                    <div className=\"form-control-position\">\r\n                      <Search size={15} />\r\n                    </div>\r\n                    <Input\r\n                      style={{\r\n                        width: '100%'\r\n                      }}\r\n                      type=\"text\"\r\n                      placeholder=\"Search...\"\r\n                      onChange={(e) => this.handleOnChange(e)}\r\n                      value={value}\r\n                    />\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <PerfectScrollbar\r\n                className=\"todo-task-list\"\r\n                options={{\r\n                  wheelPropagation: false\r\n                }}\r\n              >\r\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n})(DiaryList)\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { X, Bookmark, Star, Tag, Check } from 'react-feather'\r\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport VideoRecorder from 'react-video-recorder'\r\nimport { Recorder } from 'react-voice-recorder'\r\nimport 'react-voice-recorder/dist/index.css'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  starTask,\r\n  completeTask,\r\n  importantTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n} from '../../redux/actions/diary/index'\r\nconst colourOptions1 = [\r\n  {\r\n    value: 'Attachment',\r\n    label: 'Attachment',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Scribble',\r\n    label: 'Scribble',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Text',\r\n    label: 'Text',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Video',\r\n    label: 'Video',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Voice',\r\n    label: 'Voice',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  }\r\n]\r\nclass TaskSidebar extends React.Component {\r\n  state = {\r\n    audioDetails: {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n      }\r\n    },\r\n    ptype: '',\r\n    taskToUpdate: null,\r\n    taskTitle: '',\r\n    taskDesc: '',\r\n    taskStatus: false,\r\n    taskStarred: false,\r\n    taskImportant: false,\r\n    newTask: {\r\n      title: '',\r\n      desc: '',\r\n      tags: [],\r\n      isCompleted: false,\r\n      isImportant: false,\r\n      isStarred: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskToUpdate !== this.props.taskToUpdate) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskImportant !== this.props.taskToUpdate.isImportant)\r\n    ) {\r\n      this.setState({\r\n        taskToUpdate: this.props.taskToUpdate,\r\n        taskTitle: this.props.taskToUpdate.title,\r\n        taskDesc: this.props.taskToUpdate.desc,\r\n        taskStatus: this.props.taskToUpdate.isCompleted,\r\n        taskStarred: this.props.taskToUpdate.isStarred,\r\n        taskImportant: this.props.taskToUpdate.isImportant\r\n      })\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  handleAudioStop = (data) => {\r\n    console.log(data)\r\n    this.setState({ audioDetails: data })\r\n  }\r\n  handleAudioUpload = (file) => {\r\n    console.log(file)\r\n  }\r\n  handleRest = () => {\r\n    const reset = {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n      }\r\n    }\r\n    this.setState({ audioDetails: reset })\r\n  }\r\n\r\n  handleNewTaskTags = (tag) => {\r\n    let tagsArr = this.state.newTask.tags\r\n    if (tagsArr.includes(tag)) {\r\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\r\n    } else {\r\n      tagsArr.push(tag)\r\n    }\r\n    this.setState({\r\n      ...this.state.newTask,\r\n      tags: tag\r\n    })\r\n  }\r\n\r\n  renderTags = (taskArr) => {\r\n    return taskArr.map((tag, i) => (\r\n      <div className=\"chip mb-0 mr-50\" key={i}>\r\n        <div className=\"chip-body\">\r\n          <span className=\"chip-text\">\r\n            <span\r\n              className={`bullet bullet-${\r\n                tag === 'professional'\r\n                  ? 'warning'\r\n                  : tag === 'others'\r\n                  ? 'success'\r\n                  : tag === 'todo'\r\n                  ? 'danger'\r\n                  : 'primary'\r\n              } bullet-xs`}\r\n            />\r\n            <span className=\"text-capitalize ml-25\">{tag}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } =\r\n      this.state\r\n\r\n    return (\r\n      <div\r\n        className={`task-sidebar ${\r\n          this.props.addTaskState === true ? 'show' : ''\r\n        }`}\r\n      >\r\n        <div className=\"task-header\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"task-type-title text-bold-600\">\r\n              <h3 style={{ color: 'var(--warning)' }}>\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\r\n                  ? 'Update Details'\r\n                  : 'Enter Details'}\r\n              </h3>\r\n            </div>\r\n            <div className=\"close-icon\">\r\n              <X\r\n                className=\"cursor-pointer\"\r\n                size={20}\r\n                onClick={() => {\r\n                  this.props.addTask('close')\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <PerfectScrollbar>\r\n          <div className=\"task-body\">\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n              <div className=\"mark-complete\">\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && (\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    className=\"user-checkbox\"\r\n                    icon={<Check className=\"vx-icon\" size={15} />}\r\n                    label={''}\r\n                    checked={taskStatus}\r\n                    onChange={(e) => {\r\n                      this.props.completeTask(this.props.taskToUpdate)\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <Star\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskImportant) ||\r\n                    newTask.isImportant\r\n                      ? 'text-success'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.importantTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isImportant: !this.state.newTask.isImportant\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <Bookmark\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskStarred) ||\r\n                    newTask.isStarred\r\n                      ? 'text-warning'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.starTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isStarred: !this.state.newTask.isStarred\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle tag=\"span\">\r\n                    <Tag className=\"mr-50\" size={20} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu tag=\"ul\" right>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Personal'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\r\n                              'personal'\r\n                            )) ||\r\n                          newTask.tags.includes('personal')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'personal')\r\n                          else this.handleNewTaskTags('personal')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        labelColor=\"#ff9f43\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Professional'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\r\n                              'professional'\r\n                            )) ||\r\n                          newTask.tags.includes('professional')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(\r\n                              taskToUpdate.id,\r\n                              'professional'\r\n                            )\r\n                          else this.handleNewTaskTags('professional')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Others'}\r\n                        labelColor=\"#25af63\"\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('others')) ||\r\n                          newTask.tags.includes('others')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'others')\r\n                          else this.handleNewTaskTags('others')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        labelColor=\"#ea5455\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'TO DO List'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('todo')) ||\r\n                          newTask.tags.includes('todo')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'todo')\r\n                          else this.handleNewTaskTags('todo')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </div>\r\n\r\n            <FormGroup className=\"form-label-group\">\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"\r\n                // defaultValue={colourOptions1[0]}\r\n\r\n                ref={this.state.selectAssetRef}\r\n                name=\"color\"\r\n                options={colourOptions1}\r\n                isClearable={true}\r\n                placeholder=\"Select Message Type...\"\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    ptype: e ? e.value : ''\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskTitle: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        title: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {this.state.ptype === 'Video' && (\r\n                <VideoRecorder\r\n                  onRecordingComplete={(videoBlob) => {\r\n                    // Do something with the video...\r\n                    console.log('videoBlob', videoBlob)\r\n                  }}\r\n                />\r\n              )}\r\n              {this.state.ptype === 'Voice' && (\r\n                <Recorder\r\n                  record={true}\r\n                  title={'New recording'}\r\n                  audioURL={this.state.audioDetails.url}\r\n                  showUIAudio\r\n                  handleAudioStop={(data) => this.handleAudioStop(data)}\r\n                  handleAudioUpload={(data) => this.handleAudioUpload(data)}\r\n                  handleRest={() => this.handleRest()}\r\n                />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                placeholder=\"Description\"\r\n                rows=\"5\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskDesc: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        desc: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n              {this.props.taskToUpdate !== null &&\r\n              this.props.taskToUpdate.tags &&\r\n              this.props.taskToUpdate.tags.length > 0\r\n                ? this.renderTags(this.props.taskToUpdate.tags)\r\n                : null}\r\n            </div>\r\n            <div\r\n              className=\"d-flex justify-content-end\"\r\n              style={{ textAlign: 'right' }}\r\n            >\r\n              <Button.Ripple\r\n                outline\r\n                className=\"mr-1 mb-1 button-label\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  this.props.addTask('close')\r\n                  this.props.handleUndoChanges()\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button.Ripple>{' '}\r\n              <Button.Ripple\r\n                className=\"mb-1 button-label\"\r\n                color=\"warning\"\r\n                onClick={() => {\r\n                  console.log('taskToUpdate', taskToUpdate)\r\n                  // toast.success('Note Added Successfully!!')\r\n\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    const { isCompleted, isImportant, isStarred, tags } =\r\n                      taskToUpdate\r\n                    this.props.updateTask(\r\n                      taskToUpdate._id,\r\n                      taskTitle,\r\n                      taskDesc,\r\n                      taskToUpdate,\r\n                      isCompleted,\r\n                      isImportant,\r\n                      isStarred,\r\n                      tags\r\n                    )\r\n                  } else {\r\n                    this.props.addNewTask(this.state.newTask)\r\n                  }\r\n                  this.props.addTask('close')\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n                disabled={\r\n                  taskTitle.length > 0 || newTask.title.length > 0\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                {taskToUpdate &&\r\n                taskToUpdate.id &&\r\n                this.props.taskToUpdate !== null\r\n                  ? 'Update'\r\n                  : 'Add'}\r\n              </Button.Ripple>\r\n            </div>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  completeTask,\r\n  importantTask,\r\n  starTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n})(TaskSidebar)\r\n","import React from 'react'\r\nimport Sidebar from 'react-sidebar'\r\nimport { ContextLayout } from '../../utility/context/Layout'\r\nimport DiarySidebar from './DiarySidebar'\r\nimport DiaryList from './DiaryList'\r\nimport TaskSidebar from './TaskSidebar'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport '../../assets/scss/plugins/extensions/toastr.scss'\r\nimport '../../assets/scss/pages/app-todo.scss'\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass Diary extends React.Component {\r\n  state = {\r\n    addTask: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    taskToUpdate: null,\r\n    prevState: null\r\n  }\r\n\r\n  onSetSidebarOpen = (open) => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleAddTask = (status) => {\r\n    status === 'open'\r\n      ? this.setState({ addTask: true })\r\n      : this.setState({ addTask: false, taskToUpdate: null })\r\n  }\r\n  handleUpdateTask = (todo) => {\r\n    if (todo !== undefined) {\r\n      this.setState({ addTask: true, taskToUpdate: todo })\r\n    } else {\r\n      this.setState({ taskToUpdate: null })\r\n    }\r\n  }\r\n\r\n  handleUndoChanges = () => {\r\n    console.log('arrrrrrrrrrrrr')\r\n    this.setState({\r\n      prevState: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <h2 className=\"warning spacing nodisplay\">Secret Diary</h2>\r\n        <div className=\"todo-application position-relative\">\r\n          <div\r\n            className={`app-content-overlay ${\r\n              this.state.addTask || this.state.sidebarOpen ? 'show' : ''\r\n            }`}\r\n            onClick={() => {\r\n              this.handleAddTask('close')\r\n              this.onSetSidebarOpen(false)\r\n            }}\r\n          />\r\n          <ContextLayout.Consumer>\r\n            {(context) => (\r\n              <Sidebar\r\n                sidebar={\r\n                  <DiarySidebar\r\n                    routerProps={this.props}\r\n                    addTask={this.handleAddTask}\r\n                    mainSidebar={this.onSetSidebarOpen}\r\n                  />\r\n                }\r\n                docked={this.state.sidebarDocked}\r\n                open={this.state.sidebarOpen}\r\n                sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n                touch={false}\r\n                contentClassName=\"sidebar-children d-none\"\r\n                pullRight={context.state.direction === 'rtl'}\r\n              >\r\n                \"\"\r\n              </Sidebar>\r\n            )}\r\n          </ContextLayout.Consumer>\r\n          <DiaryList\r\n            routerProps={this.props}\r\n            handleUpdateTask={this.handleUpdateTask}\r\n            mainSidebar={this.onSetSidebarOpen}\r\n            prevState={this.state.prevState}\r\n            clearPrevState={() => {\r\n              this.setState({ prevState: false })\r\n            }}\r\n          />\r\n          <TaskSidebar\r\n            addTask={this.handleAddTask}\r\n            addTaskState={this.state.addTask}\r\n            taskToUpdate={this.state.taskToUpdate}\r\n            newTask={this.state.newTask}\r\n            mainSidebar={this.onSetSidebarOpen}\r\n            handleUndoChanges={this.handleUndoChanges}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Diary\r\n"],"sourceRoot":""}