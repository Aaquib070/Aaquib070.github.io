{"version":3,"sources":["assets/img/slider/banner-31.jpg","assets/img/slider/banner-25.jpg","assets/img/slider/banner-22.jpg","assets/img/slider/banner-23.jpg","assets/img/slider/banner-24.jpg","views/ContactUs/ContactUs.js"],"names":["module","exports","params","effect","grabCursor","autoplay","delay","disableOnInteraction","cubeEffect","shadow","slideShadows","shadowOffset","shadowScale","pagination","el","colourOptions1","value","label","color","isFixed","ConatactUs","state","addTask","taskStatus","isCompleted","taskImportant","importantTask","taskStarred","starTask","newTask","title","desc","tags","isImportant","isStarred","updateLabel","selectAssetRef","ptype","audioDetails","url","blob","chunks","duration","h","m","s","taskToUpdate","completeTask","setState","handleAudioStop","data","console","log","handleAudioUpload","file","handleRest","this","taskTitle","taskDesc","Fragment","className","lg","md","sm","classNamePrefix","ref","name","options","isClearable","placeholder","onChange","e","type","target","onRecordingComplete","videoBlob","record","audioURL","showUIAudio","handleReset","rows","length","renderTags","style","textAlign","Ripple","outline","onClick","updateTask","_id","addNewTask","disabled","id","backgroundImage","img1","backgroundSize","img2","img3","img4","img5","React","Component"],"mappings":"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","file":"static/js/35.2fb6d496.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-31.d54fc4be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-25.a47593fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-22.702fed4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-23.b74d240c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-24.d3fb51a8.jpg\";","import React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport 'swiper/css/swiper.css'\nimport '../../assets/scss/plugins/extensions/swiper.scss'\nimport img1 from '../../assets/img/slider/banner-31.jpg'\nimport img2 from '../../assets/img/slider/banner-22.jpg'\nimport img3 from '../../assets/img/slider/banner-23.jpg'\nimport img4 from '../../assets/img/slider/banner-24.jpg'\nimport img5 from '../../assets/img/slider/banner-25.jpg'\nimport Swiper from 'react-id-swiper'\nimport 'swiper/css/swiper.css'\nimport Select from 'react-select'\nimport VideoRecorder from 'react-video-recorder'\nimport { Recorder } from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\nimport { Input, Button, FormGroup } from 'reactstrap'\nconst params = {\n  effect: 'cube',\n  grabCursor: true,\n  autoplay: {\n    delay: 2000,\n    disableOnInteraction: true\n  },\n  cubeEffect: {\n    shadow: true,\n    slideShadows: true,\n    shadowOffset: 20,\n    shadowScale: 0.94\n  },\n  pagination: {\n    el: '.swiper-pagination'\n  }\n}\nconst colourOptions1 = [\n  {\n    value: 'Text',\n    label: 'Text',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Attachment',\n    label: 'Attachment',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Voice',\n    label: 'Voice',\n    color: '#0052CC',\n    isFixed: true\n  },\n  {\n    value: 'Video',\n    label: 'Video',\n    color: '#0052CC',\n    isFixed: true\n  }\n]\n\nclass ConatactUs extends React.Component {\n  state = {\n    addTask: '',\n    taskStatus: '',\n    isCompleted: '',\n    taskImportant: '',\n    importantTask: '',\n    taskStarred: '',\n    starTask: '',\n    newTask: {\n      title: '',\n      desc: '',\n      tags: [],\n      isCompleted: false,\n      isImportant: false,\n      isStarred: false\n    },\n    updateLabel: '',\n    selectAssetRef: '',\n    ptype: '',\n    audioDetails: {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    },\n    taskToUpdate: ''\n  }\n  completeTask = (value) => {\n    this.setState({ isCompleted: value })\n  }\n  handleAudioStop = (data) => {\n    console.log(data)\n    this.setState({ audioDetails: data })\n  }\n  handleAudioUpload = (file) => {\n    console.log(file)\n  }\n  handleRest = () => {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    }\n    this.setState({ audioDetails: reset })\n  }\n  render() {\n    const { newTask, taskTitle, taskDesc, taskToUpdate } = this.state\n    return (\n      <React.Fragment>\n        <h2 className=\"warning spacing\">Sender</h2>\n        <Row>\n          <Col lg=\"8\" md=\"6\" sm=\"12\">\n            <Row className=\"match-height\">\n              {/* <PerfectScrollbar>\n              </PerfectScrollbar> */}\n              <Col md=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Select\n                    className=\"React\"\n                    classNamePrefix=\"select\"\n                    // defaultValue={colourOptions1[0]}\n\n                    ref={this.state.selectAssetRef}\n                    name=\"color\"\n                    options={colourOptions1}\n                    isClearable={true}\n                    placeholder=\"Select Message Type...\"\n                    onChange={(e) => {\n                      this.setState({\n                        ptype: e ? e.value : ''\n                      })\n                    }}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={\n                      this.state.taskToUpdate !== null\n                        ? taskTitle\n                        : newTask.title\n                    }\n                    onChange={(e) => {\n                      if (this.state.taskToUpdate !== null) {\n                        this.setState({\n                          taskTitle: e.target.value\n                        })\n                      } else {\n                        this.setState({\n                          newTask: {\n                            ...this.state.newTask,\n                            title: e.target.value\n                          }\n                        })\n                      }\n                    }}\n                  />\n                </FormGroup>\n                {this.state.ptype === 'Video' && (\n                  <div className=\"video-recorder\">\n                    <VideoRecorder\n                      onRecordingComplete={(videoBlob) => {\n                        // Do something with the video...\n                        console.log('videoBlob', videoBlob)\n                      }}\n                    />\n                  </div>\n                )}\n                {this.state.ptype === 'Voice' && (\n                  <div className=\"voice-recorder\">\n                    <Recorder\n                      record={true}\n                      title={'New recording'}\n                      audioURL={this.state.audioDetails.url}\n                      showUIAudio\n                      handleAudioStop={(data) => this.handleAudioStop(data)}\n                      handleAudioUpload={(data) => this.handleAudioUpload(data)}\n                      handleReset={() => this.handleRest()}\n                    />\n                  </div>\n                )}\n                <FormGroup>\n                  <Input\n                    type=\"textarea\"\n                    placeholder=\"Description\"\n                    rows=\"5\"\n                    value={\n                      this.state.taskToUpdate !== null ? taskDesc : newTask.desc\n                    }\n                    onChange={(e) => {\n                      if (this.state.taskToUpdate !== null) {\n                        this.setState({\n                          taskDesc: e.target.value\n                        })\n                      } else {\n                        this.setState({\n                          newTask: {\n                            ...this.state.newTask,\n                            desc: e.target.value\n                          }\n                        })\n                      }\n                    }}\n                  />\n                </FormGroup>\n                <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\n                  {this.state.taskToUpdate !== null &&\n                  this.state.taskToUpdate?.tags &&\n                  this.state.taskToUpdate?.tags.length > 0\n                    ? this.renderTags(this.state.taskToUpdate?.tags)\n                    : null}\n                </div>\n                <div\n                  className=\"d-flex justify-content-end\"\n                  style={{ textAlign: 'right' }}\n                >\n                  <Button.Ripple\n                    outline\n                    className=\"mr-1 mb-1 button-label\"\n                    color=\"secondary\"\n                    onClick={() => {\n                      this.state.addTask('close')\n                      this.setState({\n                        newTask: {\n                          title: '',\n                          desc: '',\n                          tags: [],\n                          isCompleted: false,\n                          isImportant: false,\n                          isStarred: false\n                        }\n                      })\n                    }}\n                  >\n                    Cancel\n                  </Button.Ripple>{' '}\n                  <Button.Ripple\n                    className=\"mb-1 button-label\"\n                    color=\"warning\"\n                    onClick={() => {\n                      console.log('taskToUpdate', taskToUpdate)\n                      //toast.success('Note Added Successfully!!')\n                      const { isCompleted, isImportant, isStarred, tags } =\n                        taskToUpdate\n                      if (this.state.taskToUpdate !== null) {\n                        this.state.updateTask(\n                          taskToUpdate?._id,\n                          taskTitle,\n                          taskDesc,\n                          taskToUpdate,\n                          isCompleted,\n                          isImportant,\n                          isStarred,\n                          tags\n                        )\n                      } else {\n                        this.state.addNewTask(this.state.newTask)\n                      }\n                      this.state.addTask('close')\n                      this.setState({\n                        newTask: {\n                          title: '',\n                          desc: '',\n                          tags: [],\n                          isCompleted: false,\n                          isImportant: false,\n                          isStarred: false\n                        }\n                      })\n                    }}\n                    disabled={\n                      taskTitle?.length > 0 || newTask?.title?.length > 0\n                        ? false\n                        : true\n                    }\n                  >\n                    {taskToUpdate &&\n                    taskToUpdate?.id &&\n                    this.state.taskToUpdate !== null\n                      ? 'Update'\n                      : 'Add'}\n                  </Button.Ripple>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col lg=\"4\" md=\"6\" sm=\"12\">\n            <div className=\"swipermobile\">\n              <Swiper {...params}>\n                <div\n                  style={{\n                    backgroundImage: `url(${img1})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n                <div\n                  style={{\n                    backgroundImage: `url(${img2})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n                <div\n                  style={{\n                    backgroundImage: `url(${img3})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n                <div\n                  style={{\n                    backgroundImage: `url(${img4})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n                <div\n                  style={{\n                    backgroundImage: `url(${img5})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n              </Swiper>\n            </div>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ConatactUs\n"],"sourceRoot":""}