{"version":3,"sources":["../node_modules/prismjs/prism.js","../node_modules/prismjs/components/prism-jsx.min.js"],"names":["Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","language","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","rematch","patterns","j","length","cause","patternObj","lookbehind","greedy","pattern","global","flags","RegExp","source","currentNode","next","pos","tail","reach","str","removeCount","matchPattern","from","index","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","list","array","node","push","toArray","all","add","name","callbacks","matchedStr","lastIndex","lookbehindLength","newNode","count","s","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","hasAttribute","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","markup","tagName","includedCdataInside","def","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","clike","javascript","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","SELECTOR","pre","setAttribute","appendChild","createElement","getAttribute","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","arguments","trim","t","jsx","spread","punctuation","n","a","pop","openedBraces","g","splice"],"mappings":";sIACA,YAMA,IAgBIA,EAAS,SAAUC,GAGvB,IAAIC,EAAO,8BACPC,EAAW,EAGXC,EAAI,CAsBPC,OAAQJ,EAAMD,OAASC,EAAMD,MAAMK,OACnCC,4BAA6BL,EAAMD,OAASC,EAAMD,MAAMM,4BAWxDC,KAAM,CACLC,OAAQ,SAASA,EAAOC,GACvB,OAAIA,aAAkBC,EACd,IAAIA,EAAMD,EAAOE,KAAMH,EAAOC,EAAOG,SAAUH,EAAOI,OACnDC,MAAMC,QAAQN,GACjBA,EAAOO,IAAIR,GAEXC,EAAOQ,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,UAAW,MAoBhFN,KAAM,SAAUO,GACf,OAAOC,OAAOC,UAAUC,SAASC,KAAKJ,GAAGK,MAAM,GAAI,IASpDC,MAAO,SAAUC,GAIhB,OAHKA,EAAG,MACPN,OAAOO,eAAeD,EAAK,OAAQ,CAAEE,QAASxB,IAExCsB,EAAG,MAaXG,MAAO,SAASC,EAAUX,EAAGY,GAG5B,IAAIF,EAAOG,EACX,OAHAD,EAAUA,GAAW,GAGb1B,EAAEG,KAAKI,KAAKO,IACnB,IAAK,SAEJ,GADAa,EAAK3B,EAAEG,KAAKiB,MAAMN,GACdY,EAAQC,GACX,OAAOD,EAAQC,GAKhB,IAAK,IAAIC,KAHTJ,EAA4C,GAC5CE,EAAQC,GAAMH,EAEEV,EACXA,EAAEe,eAAeD,KACpBJ,EAAMI,GAAOH,EAAUX,EAAEc,GAAMF,IAIjC,SAED,IAAK,QAEJ,OADAC,EAAK3B,EAAEG,KAAKiB,MAAMN,GACdY,EAAQC,GACJD,EAAQC,IAEhBH,EAAQ,GACRE,EAAQC,GAAMH,EAE2BV,EAAKgB,SAAQ,SAAUC,EAAGC,GAClER,EAAMQ,GAAKP,EAAUM,EAAGL,MAGzB,GAED,QACC,OAAOZ,IAYVmB,YAAa,SAAUC,GACtB,KAAOA,IAAYpC,EAAKqC,KAAKD,EAAQE,YACpCF,EAAUA,EAAQG,cAEnB,OAAIH,GACKA,EAAQE,UAAUE,MAAMxC,IAAS,CAAC,CAAE,SAAS,GAAGyC,cAElD,QAURC,cAAe,WACd,GAAwB,qBAAbC,SACV,OAAO,KAER,GAAI,kBAAmBA,SACtB,OAA2BA,SAA3B,cAOD,IACC,MAAM,IAAIC,MACT,MAAOC,GAQR,IAAIC,GAAO,+BAA+BC,KAAKF,EAAIG,QAAU,IAAI,GACjE,GAAIF,EAAK,CACR,IAAIG,EAAUN,SAASO,qBAAqB,UAC5C,IAAK,IAAIhB,KAAKe,EACb,GAAIA,EAAQf,GAAGY,KAAOA,EACrB,OAAOG,EAAQf,GAIlB,OAAO,OAuBTiB,SAAU,SAAUf,EAASE,EAAWc,GAGvC,IAFA,IAAIC,EAAK,MAAQf,EAEVF,GAAS,CACf,IAAIkB,EAAYlB,EAAQkB,UACxB,GAAIA,EAAUC,SAASjB,GACtB,OAAO,EAER,GAAIgB,EAAUC,SAASF,GACtB,OAAO,EAERjB,EAAUA,EAAQG,cAEnB,QAASa,IAWXI,UAAW,CA6BVC,OAAQ,SAAU5B,EAAI6B,GACrB,IAAI1D,EAAOE,EAAEG,KAAKqB,MAAMxB,EAAEsD,UAAU3B,IAEpC,IAAK,IAAIC,KAAO4B,EACf1D,EAAK8B,GAAO4B,EAAM5B,GAGnB,OAAO9B,GA8ER2D,aAAc,SAAUC,EAAQC,EAAQC,EAAQC,GAE/C,IAAIC,GADJD,EAAOA,GAA4B7D,EAAEsD,WAClBI,GAEfK,EAAM,GAEV,IAAK,IAAIC,KAASF,EACjB,GAAIA,EAAQjC,eAAemC,GAAQ,CAElC,GAAIA,GAASL,EACZ,IAAK,IAAIM,KAAYL,EAChBA,EAAO/B,eAAeoC,KACzBF,EAAIE,GAAYL,EAAOK,IAMrBL,EAAO/B,eAAemC,KAC1BD,EAAIC,GAASF,EAAQE,IAKxB,IAAIE,EAAML,EAAKH,GAUf,OATAG,EAAKH,GAAUK,EAGf/D,EAAEsD,UAAUa,IAAInE,EAAEsD,WAAW,SAAS1B,EAAKL,GACtCA,IAAU2C,GAAOtC,GAAO8B,IAC3BU,KAAKxC,GAAOmC,MAIPA,GAIRI,IAAK,SAASA,EAAIrD,EAAGuD,EAAU9D,EAAMmB,GACpCA,EAAUA,GAAW,GAErB,IAAIN,EAAQpB,EAAEG,KAAKiB,MAEnB,IAAK,IAAIY,KAAKlB,EACb,GAAIA,EAAEe,eAAeG,GAAI,CACxBqC,EAASnD,KAAKJ,EAAGkB,EAAGlB,EAAEkB,GAAIzB,GAAQyB,GAElC,IAAIsC,EAAWxD,EAAEkB,GACbuC,EAAevE,EAAEG,KAAKI,KAAK+D,GAEV,WAAjBC,GAA8B7C,EAAQN,EAAMkD,IAItB,UAAjBC,GAA6B7C,EAAQN,EAAMkD,MACnD5C,EAAQN,EAAMkD,KAAa,EAC3BH,EAAIG,EAAUD,EAAUrC,EAAGN,KAL3BA,EAAQN,EAAMkD,KAAa,EAC3BH,EAAIG,EAAUD,EAAU,KAAM3C,OAWnC8C,QAAS,GAcTC,aAAc,SAASC,EAAOL,GAC7BrE,EAAE2E,kBAAkBlC,SAAUiC,EAAOL,IAkBtCM,kBAAmB,SAASC,EAAWF,EAAOL,GAC7C,IAAIQ,EAAM,CACTR,SAAUA,EACVO,UAAWA,EACXE,SAAU,oGAGX9E,EAAE+E,MAAMC,IAAI,sBAAuBH,GAEnCA,EAAII,SAAWvE,MAAMM,UAAUG,MAAM+D,MAAML,EAAID,UAAUO,iBAAiBN,EAAIC,WAE9E9E,EAAE+E,MAAMC,IAAI,gCAAiCH,GAE7C,IAAK,IAAW3C,EAAPF,EAAI,EAAYE,EAAU2C,EAAII,SAASjD,MAC/ChC,EAAEoF,iBAAiBlD,GAAmB,IAAVwC,EAAgBG,EAAIR,WAgClDe,iBAAkB,SAASlD,EAASwC,EAAOL,GAE1C,IAAIgB,EAAWrF,EAAEG,KAAK8B,YAAYC,GAC9B4B,EAAU9D,EAAEsD,UAAU+B,GAG1BnD,EAAQE,UAAYF,EAAQE,UAAUvB,QAAQf,EAAM,IAAIe,QAAQ,OAAQ,KAAO,aAAewE,EAG9F,IAAIC,EAASpD,EAAQG,cACjBiD,GAA4C,QAAlCA,EAAOC,SAAShD,gBAC7B+C,EAAOlD,UAAYkD,EAAOlD,UAAUvB,QAAQf,EAAM,IAAIe,QAAQ,OAAQ,KAAO,aAAewE,GAG7F,IAEIR,EAAM,CACT3C,QAASA,EACTmD,SAAUA,EACVvB,QAASA,EACT0B,KANUtD,EAAQuD,aASnB,SAASC,EAAsBC,GAC9Bd,EAAIc,gBAAkBA,EAEtB3F,EAAE+E,MAAMC,IAAI,gBAAiBH,GAE7BA,EAAI3C,QAAQ0D,UAAYf,EAAIc,gBAE5B3F,EAAE+E,MAAMC,IAAI,kBAAmBH,GAC/B7E,EAAE+E,MAAMC,IAAI,WAAYH,GACxBR,GAAYA,EAASnD,KAAK2D,EAAI3C,SAK/B,GAFAlC,EAAE+E,MAAMC,IAAI,sBAAuBH,IAE9BA,EAAIW,KAGR,OAFAxF,EAAE+E,MAAMC,IAAI,WAAYH,QACxBR,GAAYA,EAASnD,KAAK2D,EAAI3C,UAM/B,GAFAlC,EAAE+E,MAAMC,IAAI,mBAAoBH,GAE3BA,EAAIf,QAKT,GAAIY,GAAS7E,EAAMgG,OAAQ,CAC1B,IAAIC,EAAS,IAAID,OAAO7F,EAAE+F,UAE1BD,EAAOE,UAAY,SAASC,GAC3BP,EAAsBO,EAAIC,OAG3BJ,EAAOK,YAAYC,KAAKC,UAAU,CACjChB,SAAUR,EAAIQ,SACdG,KAAMX,EAAIW,KACVc,gBAAgB,UAIjBZ,EAAsB1F,EAAEuG,UAAU1B,EAAIW,KAAMX,EAAIf,QAASe,EAAIQ,gBAlB7DK,EAAsB1F,EAAEG,KAAKC,OAAOyE,EAAIW,QA0C1Ce,UAAW,SAAUC,EAAM1C,EAASuB,GACnC,IAAIR,EAAM,CACTW,KAAMgB,EACN1C,QAASA,EACTuB,SAAUA,GAKX,OAHArF,EAAE+E,MAAMC,IAAI,kBAAmBH,GAC/BA,EAAIxE,OAASL,EAAEyG,SAAS5B,EAAIW,KAAMX,EAAIf,SACtC9D,EAAE+E,MAAMC,IAAI,iBAAkBH,GACvBvE,EAAM+F,UAAUrG,EAAEG,KAAKC,OAAOyE,EAAIxE,QAASwE,EAAIQ,WA2BvDoB,SAAU,SAASD,EAAM1C,GACxB,IAAI4C,EAAO5C,EAAQ4C,KACnB,GAAIA,EAAM,CACT,IAAK,IAAI1C,KAAS0C,EACjB5C,EAAQE,GAAS0C,EAAK1C,UAGhBF,EAAQ4C,KAGhB,IAAIC,EAAY,IAAIC,EAKpB,OAJAC,EAASF,EAAWA,EAAUG,KAAMN,GAmNtC,SAASO,EAAaP,EAAMG,EAAW7C,EAASkD,EAAWC,EAAUC,GACpE,IAAK,IAAIlD,KAASF,EACjB,GAAKA,EAAQjC,eAAemC,IAAWF,EAAQE,GAA/C,CAIA,IAAImD,EAAWrD,EAAQE,GACvBmD,EAAWzG,MAAMC,QAAQwG,GAAYA,EAAW,CAACA,GAEjD,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAASE,SAAUD,EAAG,CACzC,GAAIF,GAAWA,EAAQI,OAAStD,EAAQ,IAAMoD,EAC7C,OAGD,IAAIG,EAAaJ,EAASC,GACzB1D,EAAS6D,EAAW7D,OACpB8D,IAAeD,EAAWC,WAC1BC,IAAWF,EAAWE,OACtBhH,EAAQ8G,EAAW9G,MAEpB,GAAIgH,IAAWF,EAAWG,QAAQC,OAAQ,CAEzC,IAAIC,EAAQL,EAAWG,QAAQzG,WAAWqB,MAAM,aAAa,GAC7DiF,EAAWG,QAAUG,OAAON,EAAWG,QAAQI,OAAQF,EAAQ,KAMhE,IAFA,IAAIF,EAAUH,EAAWG,SAAWH,EAG/BQ,EAAcf,EAAUgB,KAAMC,EAAMhB,EACxCc,IAAgBpB,EAAUuB,QAItBhB,GAAWe,GAAOf,EAAQiB,OAH9BF,GAAOF,EAAYxG,MAAM8F,OAAQU,EAAcA,EAAYC,KAC1D,CAMD,IAAII,EAAML,EAAYxG,MAEtB,GAAIoF,EAAUU,OAASb,EAAKa,OAE3B,OAGD,KAAIe,aAAe9H,GAAnB,CAIA,IACIgC,EADA+F,EAAc,EAGlB,GAAIZ,EAAQ,CAEX,KADAnF,EAAQgG,EAAaZ,EAASO,EAAKzB,EAAMgB,IAExC,MAGD,IAAIe,EAAOjG,EAAMkG,MACbC,EAAKnG,EAAMkG,MAAQlG,EAAM,GAAG+E,OAC5BqB,EAAIT,EAIR,IADAS,GAAKX,EAAYxG,MAAM8F,OAChBkB,GAAQG,GACdX,EAAcA,EAAYC,KAC1BU,GAAKX,EAAYxG,MAAM8F,OAOxB,GAJAqB,GAAKX,EAAYxG,MAAM8F,OACvBY,EAAMS,EAGFX,EAAYxG,iBAAiBjB,EAChC,SAID,IACC,IAAIqI,EAAIZ,EACRY,IAAMhC,EAAUuB,OAASQ,EAAID,GAAyB,kBAAZE,EAAEpH,OAC5CoH,EAAIA,EAAEX,KAENK,IACAK,GAAKC,EAAEpH,MAAM8F,OAEdgB,IAGAD,EAAM5B,EAAKrF,MAAM8G,EAAKS,GACtBpG,EAAMkG,OAASP,OAGf,KADA3F,EAAQgG,EAAaZ,EAAS,EAAGU,EAAKZ,IAErC,SAIEe,EAAOjG,EAAMkG,MAAjB,IACCI,EAAWtG,EAAM,GACjBqB,EAASyE,EAAIjH,MAAM,EAAGoH,GACtBM,EAAQT,EAAIjH,MAAMoH,EAAOK,EAASvB,QAE/Bc,EAAQF,EAAMG,EAAIf,OAClBH,GAAWiB,EAAQjB,EAAQiB,QAC9BjB,EAAQiB,MAAQA,GAGjB,IAAIW,EAAaf,EAAYgB,KAEzBpF,IACHmF,EAAajC,EAASF,EAAWmC,EAAYnF,GAC7CsE,GAAOtE,EAAO0D,QAGf2B,EAAYrC,EAAWmC,EAAYT,GAEnC,IAAIY,EAAU,IAAI3I,EAAM0D,EAAON,EAAS1D,EAAEyG,SAASmC,EAAUlF,GAAUkF,EAAUnI,EAAOmI,GACxFb,EAAclB,EAASF,EAAWmC,EAAYG,GAE1CJ,GACHhC,EAASF,EAAWoB,EAAac,GAG9BR,EAAc,GAGjBtB,EAAaP,EAAMG,EAAW7C,EAASiE,EAAYgB,KAAMd,EAAK,CAC7DX,MAAOtD,EAAQ,IAAMoD,EACrBe,MAAOA,QAnVXpB,CAAaP,EAAMG,EAAW7C,EAAS6C,EAAUG,KAAM,GA8ZzD,SAAiBoC,GAChB,IAAIC,EAAQ,GACRC,EAAOF,EAAKpC,KAAKkB,KACrB,KAAOoB,IAASF,EAAKhB,MACpBiB,EAAME,KAAKD,EAAK7H,OAChB6H,EAAOA,EAAKpB,KAEb,OAAOmB,EAnaCG,CAAQ3C,IAQhB5B,MAAO,CACNwE,IAAK,GAcLC,IAAK,SAAUC,EAAMpF,GACpB,IAAIU,EAAQ/E,EAAE+E,MAAMwE,IAEpBxE,EAAM0E,GAAQ1E,EAAM0E,IAAS,GAE7B1E,EAAM0E,GAAMJ,KAAKhF,IAYlBW,IAAK,SAAUyE,EAAM5E,GACpB,IAAI6E,EAAY1J,EAAE+E,MAAMwE,IAAIE,GAE5B,GAAKC,GAAcA,EAAUrC,OAI7B,IAAK,IAAShD,EAALrC,EAAE,EAAaqC,EAAWqF,EAAU1H,MAC5CqC,EAASQ,KAKZvE,MAAOA,GAqBR,SAASA,EAAMC,EAAMC,EAASC,EAAOkJ,GAUpCvF,KAAK7D,KAAOA,EASZ6D,KAAK5D,QAAUA,EAQf4D,KAAK3D,MAAQA,EAEb2D,KAAKiD,OAAqC,GAA3BsC,GAAc,IAAItC,OA8ElC,SAASiB,EAAaZ,EAASO,EAAKzB,EAAMgB,GACzCE,EAAQkC,UAAY3B,EACpB,IAAI3F,EAAQoF,EAAQ7E,KAAK2D,GACzB,GAAIlE,GAASkF,GAAclF,EAAM,GAAI,CAEpC,IAAIuH,EAAmBvH,EAAM,GAAG+E,OAChC/E,EAAMkG,OAASqB,EACfvH,EAAM,GAAKA,EAAM,GAAGnB,MAAM0I,GAE3B,OAAOvH,EAwKR,SAASsE,IAER,IAAIE,EAAO,CAAEvF,MAAO,KAAMwH,KAAM,KAAMf,KAAM,MAExCE,EAAO,CAAE3G,MAAO,KAAMwH,KAAMjC,EAAMkB,KAAM,MAC5ClB,EAAKkB,KAAOE,EAGZ9D,KAAK0C,KAAOA,EAEZ1C,KAAK8D,KAAOA,EACZ9D,KAAKiD,OAAS,EAWf,SAASR,EAASqC,EAAME,EAAM7H,GAE7B,IAAIyG,EAAOoB,EAAKpB,KAEZ8B,EAAU,CAAEvI,MAAOA,EAAOwH,KAAMK,EAAMpB,KAAMA,GAKhD,OAJAoB,EAAKpB,KAAO8B,EACZ9B,EAAKe,KAAOe,EACZZ,EAAK7B,SAEEyC,EASR,SAASd,EAAYE,EAAME,EAAMW,GAEhC,IADA,IAAI/B,EAAOoB,EAAKpB,KACPhG,EAAI,EAAGA,EAAI+H,GAAS/B,IAASkB,EAAKhB,KAAMlG,IAChDgG,EAAOA,EAAKA,KAEboB,EAAKpB,KAAOA,EACZA,EAAKe,KAAOK,EACZF,EAAK7B,QAAUrF,EAkBhB,GAhXAnC,EAAMD,MAAQI,EA+EdM,EAAM+F,UAAY,SAASA,EAAUvF,EAAGuE,GACvC,GAAgB,iBAALvE,EACV,OAAOA,EAER,GAAIJ,MAAMC,QAAQG,GAAI,CACrB,IAAIkJ,EAAI,GAIR,OAHAlJ,EAAEgB,SAAQ,SAAUmI,GACnBD,GAAK3D,EAAU4D,EAAG5E,MAEZ2E,EAGR,IAAInF,EAAM,CACTtE,KAAMO,EAAEP,KACRC,QAAS6F,EAAUvF,EAAEN,QAAS6E,GAC9B6E,IAAK,OACLC,QAAS,CAAC,QAASrJ,EAAEP,MACrB6J,WAAY,GACZ/E,SAAUA,GAGPgF,EAAUvJ,EAAEL,MACZ4J,IACC3J,MAAMC,QAAQ0J,GACjB3J,MAAMM,UAAUqI,KAAKnE,MAAML,EAAIsF,QAASE,GAExCxF,EAAIsF,QAAQd,KAAKgB,IAInBrK,EAAE+E,MAAMC,IAAI,OAAQH,GAEpB,IAAIuF,EAAa,GACjB,IAAK,IAAIX,KAAQ5E,EAAIuF,WACpBA,GAAc,IAAMX,EAAO,MAAQ5E,EAAIuF,WAAWX,IAAS,IAAI5I,QAAQ,KAAM,UAAY,IAG1F,MAAO,IAAMgE,EAAIqF,IAAM,WAAarF,EAAIsF,QAAQG,KAAK,KAAO,IAAMF,EAAa,IAAMvF,EAAIrE,QAAU,KAAOqE,EAAIqF,IAAM,MA4PhHrK,EAAM4C,SACV,OAAK5C,EAAM0K,kBAKNvK,EAAEE,6BAENL,EAAM0K,iBAAiB,WAAW,SAAUtE,GAC3C,IAAIuE,EAAUpE,KAAKqE,MAAMxE,EAAIC,MAC5BpG,EAAO0K,EAAQnF,SACfG,EAAOgF,EAAQhF,KACfc,EAAiBkE,EAAQlE,eAE1BzG,EAAMsG,YAAYnG,EAAEuG,UAAUf,EAAMxF,EAAEsD,UAAUxD,GAAOA,IACnDwG,GACHzG,EAAM6K,WAEL,GAGG1K,GAlBCA,EAsBT,IAAI2K,EAAS3K,EAAEG,KAAKqC,gBAUpB,SAASoI,IACH5K,EAAEC,QACND,EAAEyE,eAIJ,GAdIkG,IACH3K,EAAE+F,SAAW4E,EAAO/H,IAEhB+H,EAAOE,aAAa,iBACvB7K,EAAEC,QAAS,KAURD,EAAEC,OAAQ,CAOd,IAAI6K,EAAarI,SAASqI,WACP,YAAfA,GAA2C,gBAAfA,GAAgCH,GAAUA,EAAOI,MAChFtI,SAAS8H,iBAAiB,mBAAoBK,GAE1CI,OAAOC,sBACVD,OAAOC,sBAAsBL,GAE7BI,OAAOE,WAAWN,EAAgC,IAKrD,OAAO5K,EA5lCM,CAhBkB,qBAAXgL,OACjBA,OAE6B,qBAAtBG,mBAAqCC,gBAAgBD,kBAC3DC,KACA,IA2mCiCC,EAAOC,UAC3CD,EAAOC,QAAU1L,GAII,qBAAX+H,IACVA,EAAO/H,MAAQA,GAyDhBA,EAAM0D,UAAUiI,OAAS,CACxB,QAAW,kBACX,OAAU,iBACV,QAAW,CAEV7D,QAAS,uHACTD,QAAQ,EACR/D,OAAQ,CACP,kBAAmB,CAClBgE,QAAS,sBACTF,YAAY,EACZC,QAAQ,EACR/D,OAAQ,MAET,OAAU,CACTgE,QAAS,kBACTD,QAAQ,GAET,YAAe,eACf,cAAe,WACf,KAAQ,eAGV,MAAS,0BACT,IAAO,CACNC,QAAS,uHACTD,QAAQ,EACR/D,OAAQ,CACP,IAAO,CACNgE,QAAS,iBACThE,OAAQ,CACP,YAAe,QACf,UAAa,iBAGf,aAAc,CACbgE,QAAS,qCACThE,OAAQ,CACP,YAAe,CACd,CACCgE,QAAS,KACTjH,MAAO,eAER,SAIH,YAAe,OACf,YAAa,CACZiH,QAAS,YACThE,OAAQ,CACP,UAAa,mBAMjB,OAAU,CACT,CACCgE,QAAS,kBACTjH,MAAO,gBAER,uBAIFb,EAAM0D,UAAUiI,OAAhB,IAA8B7H,OAAO,cAAcA,OAAnD,OACC9D,EAAM0D,UAAUiI,OAAhB,OACD3L,EAAM0D,UAAUiI,OAAhB,QAAkC7H,OAAO,mBAAmBA,OAAS9D,EAAM0D,UAAUiI,OAGrF3L,EAAMmF,MAAMyE,IAAI,QAAQ,SAAU3E,GAEhB,WAAbA,EAAItE,OACPsE,EAAIuF,WAAJ,MAA0BvF,EAAIrE,QAAQK,QAAQ,QAAS,SAIzDE,OAAOO,eAAe1B,EAAM0D,UAAUiI,OAAOrB,IAAK,aAAc,CAY/D3I,MAAO,SAAoBiK,EAAS1L,GACnC,IAAI2L,EAAsB,GAC1BA,EAAoB,YAAc3L,GAAQ,CACzC4H,QAAS,oCACTF,YAAY,EACZ9D,OAAQ9D,EAAM0D,UAAUxD,IAEzB2L,EAAmB,MAAY,uBAE/B,IAAI/H,EAAS,CACZ,iBAAkB,CACjBgE,QAAS,4BACThE,OAAQ+H,IAGV/H,EAAO,YAAc5D,GAAQ,CAC5B4H,QAAS,UACThE,OAAQ9D,EAAM0D,UAAUxD,IAGzB,IAAI4L,EAAM,GACVA,EAAIF,GAAW,CACd9D,QAASG,OAAO,wFAAwFC,OAAOjH,QAAQ,OAAO,WAAc,OAAO2K,KAAa,KAChKhE,YAAY,EACZC,QAAQ,EACR/D,OAAQA,GAGT9D,EAAM0D,UAAUG,aAAa,SAAU,QAASiI,MAIlD9L,EAAM0D,UAAUqI,KAAO/L,EAAM0D,UAAUiI,OACvC3L,EAAM0D,UAAUsI,OAAShM,EAAM0D,UAAUiI,OACzC3L,EAAM0D,UAAUuI,IAAMjM,EAAM0D,UAAUiI,OAEtC3L,EAAM0D,UAAUwI,IAAMlM,EAAM0D,UAAUC,OAAO,SAAU,IACvD3D,EAAM0D,UAAUyI,KAAOnM,EAAM0D,UAAUwI,IACvClM,EAAM0D,UAAU0I,KAAOpM,EAAM0D,UAAUwI,IACvClM,EAAM0D,UAAU2I,IAAMrM,EAAM0D,UAAUwI,IAOrC,SAAUlM,GAEV,IAAIsM,EAAS,gDAEbtM,EAAM0D,UAAU6I,IAAM,CACrB,QAAW,mBACX,OAAU,CACTzE,QAAS,iDACThE,OAAQ,CACP,KAAQ,WACR,6BAA8B,CAC7BgE,QAAS,4FACTF,YAAY,EACZ/G,MAAO,YAER,QAAW,CACViH,QAAS,yCACTF,YAAY,KAKf,IAAO,CAENE,QAASG,OAAO,eAAiBqE,EAAOpE,OAAS,IAAM,8BAA8BA,OAAS,OAAQ,KACtGL,QAAQ,EACR/D,OAAQ,CACP,SAAY,QACZ,YAAe,UACf,OAAU,CACTgE,QAASG,OAAO,IAAMqE,EAAOpE,OAAS,KACtCrH,MAAO,SAIV,SAAYoH,OAAO,0CAA4CqE,EAAOpE,OAAS,iBAC/E,OAAU,CACTJ,QAASwE,EACTzE,QAAQ,GAET,SAAY,+DACZ,UAAa,gBACb,SAAY,oBACZ,YAAe,aAGhB7H,EAAM0D,UAAU6I,IAAhB,OAA8BzI,OAAOgD,KAAO9G,EAAM0D,UAAU6I,IAE5D,IAAIZ,EAAS3L,EAAM0D,UAAUiI,OACzBA,IACHA,EAAOrB,IAAIkC,WAAW,QAAS,OAE/BxM,EAAM0D,UAAUG,aAAa,SAAU,aAAc,CACpD,aAAc,CACbiE,QAAS,6CACTF,YAAY,EACZ9D,OAAQ,CACP,aAAc,CACbgE,QAAS,qCACThE,OAAQ,CACP,MAAS,CACRgE,QAAS,yBACTF,YAAY,EACZ/G,MAAO,eACPiD,OAAQ9D,EAAM0D,UAAU6I,KAEzB,YAAe,CACd,CACCzE,QAAS,KACTjH,MAAO,eAER,SAIH,YAAa,aAGb8K,EAAOrB,MA9EX,CAiFCtK,GAOFA,EAAM0D,UAAU+I,MAAQ,CACvB,QAAW,CACV,CACC3E,QAAS,kCACTF,YAAY,EACZC,QAAQ,GAET,CACCC,QAAS,mBACTF,YAAY,EACZC,QAAQ,IAGV,OAAU,CACTC,QAAS,iDACTD,QAAQ,GAET,aAAc,CACbC,QAAS,2FACTF,YAAY,EACZ9D,OAAQ,CACP,YAAe,UAGjB,QAAW,6GACX,QAAW,qBACX,SAAY,YACZ,OAAU,4DACV,SAAY,+CACZ,YAAe,iBAQhB9D,EAAM0D,UAAUgJ,WAAa1M,EAAM0D,UAAUC,OAAO,QAAS,CAC5D,aAAc,CACb3D,EAAM0D,UAAU+I,MAAM,cACtB,CACC3E,QAAS,0GACTF,YAAY,IAGd,QAAW,CACV,CACCE,QAAS,kCACTF,YAAY,GAEb,CACCE,QAAS,oZACTF,YAAY,IAId,SAAY,oGACZ,OAAU,gOACV,SAAY,8FAGb5H,EAAM0D,UAAUgJ,WAAW,cAAc,GAAG5E,QAAU,uEAEtD9H,EAAM0D,UAAUG,aAAa,aAAc,UAAW,CACrD,MAAS,CACRiE,QAAS,uLACTF,YAAY,EACZC,QAAQ,EACR/D,OAAQ,CACP,eAAgB,CACfgE,QAAS,4BACTF,YAAY,EACZ/G,MAAO,iBACPiD,OAAQ9D,EAAM0D,UAAUiJ,OAEzB,cAAe,UACf,kBAAmB,YAIrB,oBAAqB,CACpB7E,QAAS,gMACTjH,MAAO,YAER,UAAa,CACZ,CACCiH,QAAS,sIACTF,YAAY,EACZ9D,OAAQ9D,EAAM0D,UAAUgJ,YAEzB,CACC5E,QAAS,mEACThE,OAAQ9D,EAAM0D,UAAUgJ,YAEzB,CACC5E,QAAS,kEACTF,YAAY,EACZ9D,OAAQ9D,EAAM0D,UAAUgJ,YAEzB,CACC5E,QAAS,8eACTF,YAAY,EACZ9D,OAAQ9D,EAAM0D,UAAUgJ,aAG1B,SAAY,8BAGb1M,EAAM0D,UAAUG,aAAa,aAAc,SAAU,CACpD,kBAAmB,CAClBiE,QAAS,oEACTD,QAAQ,EACR/D,OAAQ,CACP,uBAAwB,CACvBgE,QAAS,QACTjH,MAAO,UAER,cAAiB,CAChBiH,QAAS,6DACTF,YAAY,EACZ9D,OAAQ,CACP,4BAA6B,CAC5BgE,QAAS,UACTjH,MAAO,eAERiG,KAAM9G,EAAM0D,UAAUgJ,aAGxB,OAAU,cAKT1M,EAAM0D,UAAUiI,QACnB3L,EAAM0D,UAAUiI,OAAOrB,IAAIkC,WAAW,SAAU,cAGjDxM,EAAM0D,UAAUkJ,GAAK5M,EAAM0D,UAAUgJ,WAOrC,WACC,GAAoB,qBAATlB,MAAyBA,KAAKxL,OAAUwL,KAAK3I,SAAxD,CAKKgK,QAAQzL,UAAU0L,UACtBD,QAAQzL,UAAU0L,QAAUD,QAAQzL,UAAU2L,mBAAqBF,QAAQzL,UAAU4L,uBAGtF,IAAIhN,EAAQoL,OAAOpL,MAQfiN,EAAa,CAChB,GAAM,aACN,GAAM,SACN,GAAM,OACN,IAAO,aACP,KAAQ,aACR,GAAM,OACN,IAAO,QACP,EAAK,IACL,IAAO,SAQJC,EAAW,iFAGXhN,EAAO,8BAgBXF,EAAMmF,MAAMyE,IAAI,uBAAuB,SAAU3E,GAChDA,EAAIC,UAAY,KAAOgI,KAGxBlN,EAAMmF,MAAMyE,IAAI,uBAAuB,SAAU3E,GAChD,IAAIkI,EAAqClI,EAAI3C,QAC7C,GAAI6K,EAAIL,QAAQI,GAAW,CAC1BjI,EAAIW,KAAO,GAEXuH,EAAIC,aAjCY,kBACG,WAmCnB,IAAIxH,EAAOuH,EAAIE,YAAYxK,SAASyK,cAAc,SAClD1H,EAAKC,YAvDe,gBAyDpB,IAAI7C,EAAMmK,EAAII,aAAa,YAEvB9H,EAAWR,EAAIQ,SACnB,GAAiB,SAAbA,EAAqB,CAGxB,IAAI+H,GAAa,WAAWvK,KAAKD,IAAQ,CAAC,CAAE,SAAS,GACrDyC,EAAWwH,EAAWO,IAAcA,EAIrCC,EAAiB7H,EAAMH,GACvBgI,EAAiBN,EAAK1H,GAGtB,IAAIiI,EAAa1N,EAAM4E,QAAQ8I,WAC3BA,GACHA,EAAWC,cAAclI,GAI1B,IAAImI,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO9K,GAAK,GACrB4K,EAAIG,mBAAqB,WA/EL,IAAUC,EAAQpD,EAgFf,GAAlBgD,EAAI1C,aACH0C,EAAII,OAAS,KAAOJ,EAAIK,cAE3Bd,EAAIC,aAlES,kBAEE,UAmEfxH,EAAKC,YAAc+H,EAAIK,aACvBjO,EAAMwF,iBAAiBI,KAIvBuH,EAAIC,aA1ES,kBAGE,UAyEXQ,EAAII,QAAU,IACjBpI,EAAKC,aA9FqBmI,EA8FSJ,EAAII,OA9FLpD,EA8FagD,EAAIM,WA7FjD,gBAAaF,EAAS,yBAA2BpD,GA+FnDhF,EAAKC,YA7FiB,mDAkG1B+H,EAAIO,KAAK,UAIXnO,EAAM4E,QAAQwJ,cAAgB,CAQ7BzH,UAAW,SAAmB3B,GAG7B,IAFA,IAEgB1C,EAFZ+C,GAAYL,GAAanC,UAAU0C,iBAAiB2H,GAE/C9K,EAAI,EAAYE,EAAU+C,EAASjD,MAC3CpC,EAAMwF,iBAAiBlD,KAK1B,IAAI+L,GAAS,EAEbrO,EAAMoO,cAAgB,WAChBC,IACJC,QAAQC,KAAK,2FACbF,GAAS,GAEVrO,EAAM4E,QAAQwJ,cAAczH,UAAUrB,MAAMd,KAAMgK,YA/FnD,SAASf,EAAiBnL,EAASmD,GAClC,IAAIjD,EAAYF,EAAQE,UACxBA,EAAYA,EAAUvB,QAAQf,EAAM,KAAO,aAAeuF,EAC1DnD,EAAQE,UAAYA,EAAUvB,QAAQ,OAAQ,KAAKwN,QAlDrD,K,qCCtiDC,SAASrM,GAAG,IAAIsM,EAAEtM,EAAE7B,KAAKqB,MAAMQ,EAAEsB,UAAUgJ,YAAYtK,EAAEsB,UAAUiL,IAAIvM,EAAEsB,UAAUC,OAAO,SAAS+K,GAAGtM,EAAEsB,UAAUiL,IAAIrE,IAAIxC,QAAQ,2MAA2M1F,EAAEsB,UAAUiL,IAAIrE,IAAIxG,OAAOwG,IAAIxC,QAAQ,kBAAkB1F,EAAEsB,UAAUiL,IAAIrE,IAAIxG,OAAO,cAAcgE,QAAQ,gEAAgE1F,EAAEsB,UAAUiL,IAAIrE,IAAIxG,OAAOwG,IAAIxG,OAAO,cAAc,4BAA4B1B,EAAEsB,UAAUG,aAAa,SAAS,YAAY,CAAC+K,OAAO,CAAC9G,QAAQ,sDAAsDhE,OAAO,CAAC+K,YAAY,cAAc,aAAa,SAASzM,EAAEsB,UAAUiL,IAAIrE,KAAKlI,EAAEsB,UAAUG,aAAa,SAAS,aAAa,CAACkH,OAAO,CAACjD,QAAQ,iDAAiDhE,OAAO,CAAC,qBAAqB,CAACgE,QAAQ,UAAUjH,MAAM,eAAeiG,KAAK1E,EAAEsB,UAAUiL,KAAK9N,MAAM,wBAAwBuB,EAAEsB,UAAUiL,IAAIrE,KAAK,IAAIpJ,EAAE,SAAFA,EAAWwN,GAAG,OAAOA,EAAE,iBAAiBA,EAAEA,EAAE,iBAAiBA,EAAE9N,QAAQ8N,EAAE9N,QAAQ8N,EAAE9N,QAAQI,IAAIE,GAAGwJ,KAAK,IAAI,IAAo6BtI,EAAE+C,MAAMyE,IAAI,kBAAiB,SAAS8E,GAAG,QAAQA,EAAEjJ,UAAU,QAAQiJ,EAAEjJ,UAAr+B,SAAFqD,EAAW4F,GAAG,IAAI,IAAII,EAAE,GAAGzE,EAAE,EAAEA,EAAEqE,EAAEjH,OAAO4C,IAAI,CAAC,IAAI0E,EAAEL,EAAErE,GAAGD,GAAE,EAAG,GAAG,iBAAiB2E,IAAI,QAAQA,EAAEpO,MAAMoO,EAAEnO,QAAQ,IAAI,QAAQmO,EAAEnO,QAAQ,GAAGD,KAAK,OAAOoO,EAAEnO,QAAQ,GAAGA,QAAQ,GAAGA,QAAQ,EAAEkO,EAAErH,QAAQqH,EAAEA,EAAErH,OAAO,GAAGmE,UAAU1K,EAAE6N,EAAEnO,QAAQ,GAAGA,QAAQ,KAAKkO,EAAEE,MAAM,OAAOD,EAAEnO,QAAQmO,EAAEnO,QAAQ6G,OAAO,GAAG7G,SAASkO,EAAErF,KAAK,CAACmC,QAAQ1K,EAAE6N,EAAEnO,QAAQ,GAAGA,QAAQ,IAAIqO,aAAa,IAAI,EAAEH,EAAErH,QAAQ,gBAAgBsH,EAAEpO,MAAM,MAAMoO,EAAEnO,QAAQkO,EAAEA,EAAErH,OAAO,GAAGwH,eAAe,EAAEH,EAAErH,QAAQ,EAAEqH,EAAEA,EAAErH,OAAO,GAAGwH,cAAc,gBAAgBF,EAAEpO,MAAM,MAAMoO,EAAEnO,QAAQkO,EAAEA,EAAErH,OAAO,GAAGwH,eAAe7E,GAAE,IAAKA,GAAG,iBAAiB2E,IAAI,EAAED,EAAErH,QAAQ,IAAIqH,EAAEA,EAAErH,OAAO,GAAGwH,aAAa,CAAC,IAAIC,EAAEhO,EAAE6N,GAAG1E,EAAEqE,EAAEjH,OAAO,IAAI,iBAAiBiH,EAAErE,EAAE,IAAI,eAAeqE,EAAErE,EAAE,GAAG1J,QAAQuO,GAAGhO,EAAEwN,EAAErE,EAAE,IAAIqE,EAAES,OAAO9E,EAAE,EAAE,IAAI,EAAEA,IAAI,iBAAiBqE,EAAErE,EAAE,IAAI,eAAeqE,EAAErE,EAAE,GAAG1J,QAAQuO,EAAEhO,EAAEwN,EAAErE,EAAE,IAAI6E,EAAER,EAAES,OAAO9E,EAAE,EAAE,GAAGA,KAAKqE,EAAErE,GAAG,IAAIjI,EAAE1B,MAAM,aAAawO,EAAE,KAAKA,GAAGH,EAAEnO,SAAS,iBAAiBmO,EAAEnO,SAASkI,EAAEiG,EAAEnO,UAA4FkI,CAAE4F,EAAEjO,WAAhnE,CAA2nET","file":"static/js/9.21d01c10.chunk.js","sourcesContent":["\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prism’s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. `before-all-elements-highlight`\n\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t * the element's language.\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n\tpattern.lastIndex = pos;\n\tvar match = pattern.exec(text);\n\tif (match && lookbehind && match[1]) {\n\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\tvar lookbehindLength = match[1].length;\n\t\tmatch.index += lookbehindLength;\n\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t}\n\treturn match;\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\tvar match;\n\n\t\t\t\tif (greedy) {\n\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index,\n\t\t\t\t\tmatchStr = match[0],\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(from + matchStr.length);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'style': {\n\t\t\t\t\t\t\t\tpattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\talias: 'language-css',\n\t\t\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'attr-name': /^style/i\n\t\t\t\t}\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-flags': /[a-z]+$/,\n\t\t\t'regex-delimiter': /^\\/|\\/$/\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar Prism = window.Prism;\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t}\n\n})();\n","!function(i){var t=i.util.clone(i.languages.javascript);i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=/<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i,i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,inside:{punctuation:/\\.{3}|[{}.]/,\"attr-value\":/\\w+/}}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,inside:{\"script-punctuation\":{pattern:/^=(?={)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},p=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&p(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||p(t.tokens)})}(Prism);"],"sourceRoot":""}