{"version":3,"sources":["components/@vuexy/spinner/Loading-spinner.js","Router.js","components/@vuexy/rippleButton/RippleButton.js","App.js"],"names":["ComponentSpinner","className","React","Component","Dashboard","lazy","LoginNew","Register","NomineeList","Spends","AddAssets","Vault","PasswordVault","Diary","MailConfirm","Portfolio","ContactUs","Admin","PrivacyTerms","AddLiability","UpdateProfile","Subscription","todo","reactfeather","Modals","Popovers","profile","home","swiper","userEdit","register","AppRoute","connect","state","user","auth","login","userRole","component","fullLayout","rest","render","props","console","log","Consumer","context","LayoutTag","activeLayout","horizontalLayout","VerticalLayout","permission","fallback","AppRouter","basename","exact","path","to","Button","Ripple","rippleColor","during","block","color","App","Router"],"mappings":"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","file":"static/js/46.7113bebf.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../../../assets/scss/components/app-loader.scss'\r\nclass ComponentSpinner extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fallback-spinner\">\r\n        <div className=\"loading component-loader\">\r\n          <div className=\"effect-1 effects\"></div>\r\n          <div className=\"effect-2 effects\"></div>\r\n          <div className=\"effect-3 effects\"></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComponentSpinner\r\n","import React, { Suspense, lazy } from 'react'\r\nimport { Router, Switch, Route, HashRouter } from 'react-router-dom'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/messaging'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Spinner from './components/@vuexy/spinner/Loading-spinner'\r\nimport { ContextLayout } from './utility/context/Layout'\r\n\r\n// Route-based code splitting\r\n\r\nconst Dashboard = lazy(() => import('./views/mydashboard/Dashboard'))\r\nconst LoginNew = lazy(() => import('./views/Login/Login'))\r\nconst Register = lazy(() => import('./views/Register/Register'))\r\nconst LandingPage = lazy(() => import('./views/Login/Landing'))\r\nconst NomineeList = lazy(() => import('./views/Nominee/NomineeList'))\r\nconst Spends = lazy(() => import('./views/Spends/SpendsList'))\r\nconst AddAssets = lazy(() => import('./views/UserAssets/Assets'))\r\nconst Vault = lazy(() => import('./views/DocumentVault/DocumentVault'))\r\nconst PasswordVault = lazy(() => import('./views/PasswordVault/PasswordVault'))\r\nconst Diary = lazy(() => import('./views/Diary/Diary'))\r\nconst MailConfirm = lazy(() => import('./views//Login/MailConfirm'))\r\n\r\nconst Portfolio = lazy(() => import('./views/Portfolio/Portfolio'))\r\nconst ContactUs = lazy(() => import('./views/ContactUs/ContactUs'))\r\nconst Admin = lazy(() => import('./views/Admin/Admin'))\r\nconst PrivacyTerms = lazy(() => import('./views/PrivacyTerms/PrivacyTerms'))\r\nconst AddLiability = lazy(() => import('./views/Liability/Liability'))\r\nconst UpdateProfile = lazy(() => import('./views/user/editprofile/Edit'))\r\nconst Subscription = lazy(() => import('./views/user/editprofile/Payments'))\r\nconst todo = lazy(() => import('./views/apps/todo/Todo'))\r\nconst reactfeather = lazy(() =>\r\n  import('./views/ui-elements/icons/FeatherIcons')\r\n)\r\nconst Modals = lazy(() => import('./components/reactstrap/modal/Modal'))\r\nconst Popovers = lazy(() => import('./components/reactstrap/popovers/Popovers'))\r\nconst profile = lazy(() => import('./views/pages/profile/Profile'))\r\nconst error404 = lazy(() => import('./views/pages/misc/error/404'))\r\nconst home = lazy(() => import('./views/pages/LandingPage/LandingPage'))\r\nconst swiper = lazy(() => import('./extensions/swiper/Swiper'))\r\nconst userEdit = lazy(() => import('./views/apps/user/edit/Edit'))\r\nconst register = lazy(() =>\r\n  import('./views/pages/authentication/register/Register')\r\n)\r\nconst RouteConfig = ({ component: Component, fullLayout, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      console.log('redirect if not logged in', props)\r\n      // let user1 = localStorage.getItem('logInUserData')\r\n      // if (\r\n      //   user1 == null &&\r\n      //   !(\r\n      //     props.location.pathname.includes('login') ||\r\n      //     props.location.pathname.includes('register')\r\n      //   )\r\n      // ) {\r\n      //   return <Redirect to=\"/login\" />\r\n      // }\r\n\r\n      return (\r\n        <ContextLayout.Consumer>\r\n          {(context) => {\r\n            let LayoutTag =\r\n              fullLayout === true\r\n                ? context.fullLayout\r\n                : context.state.activeLayout === 'horizontal'\r\n                ? context.horizontalLayout\r\n                : context.VerticalLayout\r\n            return (\r\n              <LayoutTag {...props} permission={props.user}>\r\n                <Suspense fallback={<Spinner />}>\r\n                  <Component {...props} />\r\n                </Suspense>\r\n              </LayoutTag>\r\n            )\r\n          }}\r\n        </ContextLayout.Consumer>\r\n      )\r\n    }}\r\n  />\r\n)\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.auth.login.userRole\r\n  }\r\n}\r\n\r\nconst AppRoute = connect(mapStateToProps)(RouteConfig)\r\n\r\nclass AppRouter extends React.Component {\r\n  firebase\r\n\r\n  render() {\r\n    return (\r\n      // Set the directory path if you are deploying in sub-folder\r\n      <HashRouter basename=\"/#\">\r\n        <Switch>\r\n          <AppRoute exact path=\"/dashboard\" component={Dashboard} />\r\n          <AppRoute exact path=\"/register\" component={Register} fullLayout />\r\n          <AppRoute exact path=\"/login\" component={LoginNew} fullLayout />\r\n          <AppRoute exact path=\"/\" component={LoginNew} fullLayout />\r\n          <AppRoute path=\"/nominee/list\" component={NomineeList} />\r\n          <AppRoute path=\"/spends\" component={Spends} />\r\n          <AppRoute path=\"/assets/add\" component={AddAssets} />\r\n          <AppRoute path=\"/vault/document\" component={Vault} />\r\n          <AppRoute path=\"/vault/password\" component={PasswordVault} />\r\n          <AppRoute\r\n            path=\"/emailconfirmation/:userkey\"\r\n            component={MailConfirm}\r\n            fullLayout\r\n          />\r\n          <AppRoute path=\"/diary\" component={Diary} />\r\n          <AppRoute path=\"/diary/:filter\" component={Diary} />\r\n          <AppRoute\r\n            path=\"/diary\"\r\n            exact\r\n            component={() => <Redirect to=\"/diary\" />}\r\n          />\r\n          <AppRoute path=\"/portfolio\" component={Portfolio} />\r\n          <AppRoute path=\"/admin\" component={Admin} />\r\n          <AppRoute path=\"/contactUs\" component={ContactUs} />\r\n          <AppRoute path=\"/privacyTerms\" component={PrivacyTerms} />\r\n          <AppRoute path=\"/liability/add\" component={AddLiability} />\r\n          <AppRoute path=\"/pages/profile\" component={profile} />\r\n          <AppRoute\r\n            exact\r\n            path=\"/user/profile\"\r\n            component={(props) => <UpdateProfile {...props} />}\r\n          />\r\n          <AppRoute\r\n            exact\r\n            path=\"/user/feed\"\r\n            component={(props) => <UpdateProfile {...props} />}\r\n          />\r\n          <AppRoute\r\n            exact\r\n            path=\"/user/notify\"\r\n            component={(props) => <UpdateProfile {...props} />}\r\n          />\r\n          <AppRoute\r\n            exact\r\n            path=\"/user/upgrade\"\r\n            component={(props) => <UpdateProfile {...props} />}\r\n          />\r\n          <AppRoute path=\"/pages/register\" component={register} fullLayout />\r\n          <AppRoute\r\n            path=\"/pages/subscription\"\r\n            component={Subscription}\r\n            fullLayout\r\n          />\r\n          <AppRoute path=\"/extensions/swiper\" component={swiper} />\r\n          <AppRoute path=\"/app/user/edit\" component={userEdit} />\r\n          <AppRoute path=\"/icons/reactfeather\" component={reactfeather} />\r\n          <AppRoute path=\"/components/popovers\" component={Popovers} />\r\n          <AppRoute path=\"/components/modals\" component={Modals} />\r\n          <AppRoute\r\n            path=\"/todo\"\r\n            exact\r\n            component={() => <Redirect to=\"/todo/all\" />}\r\n          />\r\n          <AppRoute path=\"/todo/:filter\" component={todo} />\r\n          <AppRoute path=\"/home\" component={home} />\r\n          {/* <AppRoute\r\n            path=\"/pages/account-settings\"\r\n            component={accountSettings}\r\n          /> */}\r\n          {/* <AppRoute exact path=\"/\" component={analyticsDashboard} /> */}\r\n          {/* <AppRoute\r\n            path=\"/ecommerce-dashboard\"\r\n            component={ecommerceDashboard}\r\n          />\r\n          <AppRoute\r\n            path=\"/email\"\r\n            exact\r\n            component={() => <Redirect to=\"/email/inbox\" />}\r\n          />\r\n          <AppRoute path=\"/email/:filter\" component={email} />\r\n          <AppRoute path=\"/chat\" component={chat} />\r\n          <AppRoute\r\n            path=\"/todo\"\r\n            exact\r\n            component={() => <Redirect to=\"/todo/all\" />}\r\n          />\r\n          <AppRoute path=\"/todo/:filter\" component={todo} />\r\n          <AppRoute path=\"/calendar\" component={calendar} />\r\n          <AppRoute path=\"/ecommerce/shop\" component={shop} />\r\n          <AppRoute path=\"/ecommerce/wishlist\" component={wishlist} />\r\n          <AppRoute\r\n            path=\"/ecommerce/product-detail\"\r\n            component={productDetail}\r\n          />\r\n          <AppRoute\r\n            path=\"/ecommerce/checkout\"\r\n            component={checkout}\r\n            permission=\"admin\"\r\n          />\r\n          <AppRoute path=\"/data-list/list-view\" component={listView} /> */}\r\n          {/* <AppRoute path=\"/data-list/thumb-view\" component={thumbView} />\r\n          <AppRoute path=\"/ui-element/grid\" component={grid} />\r\n          <AppRoute path=\"/ui-element/typography\" component={typography} />\r\n          <AppRoute\r\n            path=\"/ui-element/textutilities\"\r\n            component={textutilities}\r\n          />\r\n          <AppRoute\r\n            path=\"/ui-element/syntaxhighlighter\"\r\n            component={syntaxhighlighter}\r\n          />\r\n          <AppRoute path=\"/colors/colors\" component={colors} />\r\n          <AppRoute path=\"/icons/reactfeather\" component={reactfeather} />\r\n          <AppRoute path=\"/cards/basic\" component={basicCards} />\r\n          <AppRoute path=\"/cards/statistics\" component={statisticsCards} />\r\n          <AppRoute path=\"/cards/analytics\" component={analyticsCards} />\r\n          <AppRoute path=\"/cards/action\" component={actionCards} />\r\n          <AppRoute path=\"/components/alerts\" component={Alerts} />\r\n          <AppRoute path=\"/components/buttons\" component={Buttons} />\r\n          <AppRoute path=\"/components/breadcrumbs\" component={Breadcrumbs} />\r\n          <AppRoute path=\"/components/carousel\" component={Carousel} />\r\n          <AppRoute path=\"/components/collapse\" component={Collapse} />\r\n          <AppRoute path=\"/components/dropdowns\" component={Dropdowns} />\r\n          <AppRoute path=\"/components/list-group\" component={ListGroup} />\r\n          <AppRoute path=\"/components/modals\" component={Modals} />\r\n          <AppRoute path=\"/components/pagination\" component={Pagination} />\r\n          <AppRoute path=\"/components/nav-component\" component={NavComponent} />\r\n          <AppRoute path=\"/components/navbar\" component={Navbar} />\r\n          <AppRoute path=\"/components/tabs-component\" component={Tabs} />\r\n          <AppRoute path=\"/components/pills-component\" component={TabPills} />\r\n          <AppRoute path=\"/components/tooltips\" component={Tooltips} />\r\n          <AppRoute path=\"/components/popovers\" component={Popovers} />\r\n          <AppRoute path=\"/components/badges\" component={Badge} />\r\n          <AppRoute path=\"/components/pill-badges\" component={BadgePill} />\r\n          <AppRoute path=\"/components/progress\" component={Progress} />\r\n          <AppRoute path=\"/components/media-objects\" component={Media} />\r\n          <AppRoute path=\"/components/spinners\" component={Spinners} />\r\n          <AppRoute path=\"/components/toasts\" component={Toasts} />\r\n          <AppRoute\r\n            path=\"/extra-components/auto-complete\"\r\n            component={AutoComplete}\r\n          />\r\n          <AppRoute path=\"/extra-components/avatar\" component={avatar} />\r\n          <AppRoute path=\"/extra-components/chips\" component={chips} />\r\n          <AppRoute path=\"/extra-components/divider\" component={divider} />\r\n          <AppRoute path=\"/forms/wizard\" component={vuexyWizard} />\r\n          <AppRoute path=\"/forms/elements/select\" component={select} />\r\n          <AppRoute path=\"/forms/elements/switch\" component={switchComponent} />\r\n          <AppRoute path=\"/forms/elements/checkbox\" component={checkbox} />\r\n          <AppRoute path=\"/forms/elements/radio\" component={radio} />\r\n          <AppRoute path=\"/forms/elements/input\" component={input} />\r\n          <AppRoute path=\"/forms/elements/input-group\" component={group} />\r\n          <AppRoute\r\n            path=\"/forms/elements/number-input\"\r\n            component={numberInput}\r\n          />\r\n          <AppRoute path=\"/forms/elements/textarea\" component={textarea} />\r\n          <AppRoute path=\"/forms/elements/pickers\" component={pickers} />\r\n          <AppRoute path=\"/forms/elements/input-mask\" component={inputMask} />\r\n          <AppRoute path=\"/forms/layout/form-layout\" component={layout} />\r\n          <AppRoute path=\"/forms/formik\" component={formik} />{\" \"}\r\n          <AppRoute path=\"/tables/reactstrap\" component={tables} />\r\n          <AppRoute path=\"/tables/react-tables\" component={ReactTables} />\r\n          <AppRoute path=\"/tables/agGrid\" component={Aggrid} />\r\n          <AppRoute path=\"/tables/data-tables\" component={DataTable} />\r\n          <AppRoute path=\"/pages/profile\" component={profile} />\r\n          <AppRoute path=\"/pages/faq\" component={faq} />\r\n          <AppRoute\r\n            path=\"/pages/knowledge-base\"\r\n            component={knowledgeBase}\r\n            exact\r\n          />\r\n          <AppRoute\r\n            path=\"/pages/knowledge-base/category\"\r\n            component={knowledgeBaseCategory}\r\n            exact\r\n          />\r\n          <AppRoute\r\n            path=\"/pages/knowledge-base/category/questions\"\r\n            component={knowledgeBaseQuestion}\r\n          />\r\n          <AppRoute path=\"/pages/search\" component={search} />\r\n          <AppRoute\r\n            path=\"/pages/account-settings\"\r\n            component={accountSettings}\r\n          />\r\n          <AppRoute path=\"/pages/invoice\" component={invoice} />\r\n          <AppRoute\r\n            path=\"/misc/coming-soon\"\r\n            component={comingSoon}\r\n            fullLayout\r\n          />\r\n          <AppRoute path=\"/misc/error/404\" component={error404} fullLayout />\r\n          <AppRoute path=\"/pages/login\" component={Login} fullLayout />\r\n          <AppRoute path=\"/pages/register\" component={register} fullLayout />\r\n\r\n          <AppRoute\r\n            path=\"/pages/forgot-password\"\r\n            component={forgotPassword}\r\n            fullLayout\r\n          />\r\n          <AppRoute\r\n            path=\"/pages/lock-screen\"\r\n            component={lockScreen}\r\n            fullLayout\r\n          />\r\n          <AppRoute\r\n            path=\"/pages/reset-password\"\r\n            component={resetPassword}\r\n            fullLayout\r\n          />\r\n          <AppRoute path=\"/misc/error/500\" component={error500} fullLayout />\r\n          <AppRoute\r\n            path=\"/misc/not-authorized\"\r\n            component={authorized}\r\n            fullLayout\r\n          />\r\n          <AppRoute\r\n            path=\"/misc/maintenance\"\r\n            component={maintenance}\r\n            fullLayout\r\n          />\r\n          <AppRoute path=\"/app/user/list\" component={userList} />\r\n          <AppRoute path=\"/app/user/edit\" component={userEdit} />\r\n          <AppRoute path=\"/app/user/view\" component={userView} />\r\n          <AppRoute path=\"/charts/apex\" component={apex} />\r\n          <AppRoute path=\"/charts/chartjs\" component={chartjs} />\r\n          <AppRoute path=\"/charts/recharts\" component={extreme} />\r\n          <AppRoute path=\"/maps/leaflet\" component={leafletMaps} />\r\n          <AppRoute path=\"/extensions/sweet-alert\" component={sweetAlert} />\r\n          <AppRoute path=\"/extensions/toastr\" component={toastr} />\r\n          <AppRoute path=\"/extensions/slider\" component={rcSlider} />\r\n          <AppRoute path=\"/extensions/file-uploader\" component={uploader} />\r\n          <AppRoute path=\"/extensions/wysiwyg-editor\" component={editor} />\r\n          <AppRoute path=\"/extensions/drag-and-drop\" component={drop} />\r\n          <AppRoute path=\"/extensions/tour\" component={tour} />\r\n          <AppRoute path=\"/extensions/clipboard\" component={clipboard} />\r\n          <AppRoute path=\"/extensions/context-menu\" component={menu} />\r\n          <AppRoute path=\"/extensions/swiper\" component={swiper} />\r\n          <AppRoute\r\n            path=\"/extensions/access-control\"\r\n            component={accessControl}\r\n          />\r\n          <AppRoute path=\"/extensions/i18n\" component={i18n} />\r\n          <AppRoute path=\"/extensions/tree\" component={tree} />\r\n          <AppRoute path=\"/extensions/import\" component={Import} />\r\n          <AppRoute path=\"/extensions/export\" component={Export} />\r\n          <AppRoute\r\n            path=\"/extensions/export-selected\"\r\n            component={ExportSelected}\r\n          />\r\n          <AppRoute path=\"/extensions/pagination\" component={reactPaginate} />\r\n          <AppRoute component={error404} fullLayout /> */}\r\n          */}\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'reactstrap'\r\nimport Ripples from 'react-ripples'\r\n\r\nconst RippleButton = ({ rippleColor, during, block, ...rest }) => (\r\n  <Ripples\r\n    color={rippleColor ? rippleColor : 'rgba(255, 255, 255, .5)'}\r\n    during={during}\r\n    className={`${block ? 'd-block' : ''}`}\r\n  >\r\n    <Button {...rest} />\r\n  </Ripples>\r\n)\r\n\r\nRippleButton.propTypes = {\r\n  ...Button.propTypes,\r\n  rippleColor: PropTypes.string,\r\n  during: PropTypes.number\r\n}\r\n\r\nButton.Ripple = RippleButton\r\n","import React from 'react'\r\nimport Router from './Router'\r\nimport './components/@vuexy/rippleButton/RippleButton'\r\nimport './App.css'\r\n\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\n\r\nconst App = (props) => {\r\n  return <Router />\r\n}\r\n\r\nexport default App\r\n"],"sourceRoot":""}