{"version":3,"sources":["redux/actions/diary/index.js","views/Diary/DiarySidebar.js","views/Diary/DiaryList.js","views/Diary/TaskSidebar.js","views/Diary/Diary.js"],"names":["axios","defaults","baseURL","getTodos","routeParams","JSON","parse","localStorage","getItem","userData","dispatch","a","get","_id","params","headers","Authorization","then","response","type","todos","data","catch","err","console","log","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","connect","changeFilter","filter","history","push","props","Fragment","className","onClick","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","active","routerProps","location","pathname","state","app","todoApp","trashTask","getState","routeParam","post","searchTask","val","useState","open","setopen","setid","settodos","setvalue","useEffect","getdiaryLIst","routerFilter","match","todosArr","length","filteredTodos","undefined","renderTodos","map","i","weekday","year","month","day","today","Date","createdAt","style","border","padding","margin","key","handleUpdateTask","Modal","isOpen","backdrop","ModalBody","ModalFooter","Card","minHeight","CardBody","window","screen","width","fontSize","fontWeight","title","toLocaleDateString","desc","wordBreak","whiteSpace","maxHeight","backgroundColor","borderTopRightRadius","e","stopPropagation","FormGroup","display","justifyContent","borderRadius","Input","placeholder","onChange","target","handleOnChange","colourOptions1","label","isFixed","updateTask","taskToUpdate","tags","ans","request","updateLabel","addNewTask","task","user","toast","success","url","blob","chunks","duration","h","m","s","audioDetails","setaudioDetails","newTask","setnewTask","ptype","setptype","settaskToUpdate","taskTitle","settaskTitle","taskDesc","settaskDesc","taskStatus","settaskStatus","taskStarred","settaskStarred","validUpDate","setvalidUpDate","taskImportant","settaskImportant","selectAssetRef","React","createRef","handleNewTaskTags","tag","tagsArr","includes","splice","indexOf","addTaskState","icon","checked","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","labelColor","classNamePrefix","ref","name","isClearable","onRecordingComplete","videoBlob","record","audioURL","showUIAudio","handleAudioStop","handleAudioUpload","file","handleRest","rows","textAlign","outline","handleUndoChanges","disabled","mql","matchMedia","Diary","setaddTask","sidebarOpen","setsidebarOpen","prevState","setprevState","onSetSidebarOpen","handleAddTask","status","Consumer","context","sidebar","docked","matches","sidebarClassName","touch","contentClassName","pullRight","direction","clearPrevState"],"mappings":"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","file":"static/js/27.a50e74f8.chunk.js","sourcesContent":["import axios from 'axios'\nimport { history } from '../../../history'\nimport { toast } from 'react-toastify'\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\n//axios.defaults.baseURL = \"http://localhost:5000\";\n\nexport const getTodos = (routeParams) => {\n  const logInUserData = JSON.parse(localStorage.getItem('logInUserData'))\n  if (!logInUserData) return\n  let userData = localStorage.getItem('logInUserData')\n    ? JSON.parse(localStorage.getItem('logInUserData'))\n    : {}\n  return async (dispatch) => {\n    await axios\n      .get(`backendapi/diary/list?user=${userData._id}`, {\n        params: routeParams,\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      })\n      .then((response) => {\n        // for (let data of response?.data) {\n        //   data.nomineeId = data?.nomineeId && decryptdata(data.nomineeId, true)\n        //   // data._id = data?._id && decryptdata(data._id,true)\n        //   // data.userId = data?.userId && decryptdata(data.userId,true)\n        //   data.name = data?.name && decryptdata(data.name, true)\n        //   data.relation = data?.relation && decryptdata(data.relation, true)\n        //   data.email = data?.email && decryptdata(data.email, true)\n        //   data.primaryContact =\n        //     data?.primaryContact && decryptdata(data.primaryContact, true)\n        //   data.secondaryContact =\n        //     data?.secondaryContact && decryptdata(data.secondaryContact, true)\n        //   data.address = data?.address && decryptdata(data.address, true)\n        // }\n        dispatch({\n          type: 'GET_TODOS',\n          todos: response.data,\n          routeParams\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\nexport const completeTask = (todo) => {\n  return (dispatch) => {\n    dispatch({ type: 'COMPLETE_TASK', id: todo.id, value: todo.isCompleted })\n  }\n}\n\nexport const starTask = (todo) => {\n  return (dispatch) => {\n    Promise.all([\n      dispatch({ type: 'STAR_TASK', id: todo.id, value: todo.isStarred })\n    ])\n  }\n}\n\nexport const importantTask = (todo) => {\n  return (dispatch) => {\n    Promise.all([\n      dispatch({ type: 'IMPORTANT_TASK', id: todo.id, value: todo.isImportant })\n    ])\n  }\n}\n\nexport const trashTask = (id) => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    axios\n      .post('/api/app/todo/trash-todo', id, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      })\n      .then((response) => dispatch({ type: 'TRASH_TASK', id }))\n      .then(dispatch(getTodos(params)))\n  }\n}\n\nexport const updateTodo = (todo) => {\n  console.log('updateTodo todo')\n  const request = axios.post('/api/apps/todo/update-todo', todo, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('authtoken')\n    }\n  })\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    request.then((response) => {\n      Promise.all([\n        dispatch({\n          type: 'UPDATE_TODO',\n          todos: response.data\n        })\n      ]).then(() => dispatch(getTodos(params)))\n    })\n  }\n}\n\nexport const updateTask = (\n  id,\n  title,\n  desc,\n  taskToUpdate,\n  isCompleted,\n  isImportant,\n  isStarred,\n  tags\n) => {\n  const ans = {\n    _id: id,\n    title,\n    desc,\n    taskToUpdate,\n    isCompleted,\n    isImportant,\n    isStarred,\n    tags\n  }\n  const request = axios.post('/backendapi/diary/update', ans, {\n    headers: {\n      Authorization: 'Bearer ' + localStorage.getItem('authtoken')\n    }\n  })\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    request.then((response) => {\n      Promise.all([\n        dispatch({\n          type: 'UPDATE_TASK',\n          ans\n          // todos: response.data\n        })\n      ]).then(() => dispatch(getTodos(params)))\n    })\n  }\n}\n\nexport const updateLabel = (id, label) => {\n  return (dispatch, getState) => {\n    dispatch({ type: 'UPDATE_LABEL', label, id })\n  }\n}\n\nexport const addNewTask = (task) => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    const user = JSON.parse(localStorage.getItem('logInUserData'))._id\n    task.user = user\n    axios\n      .post('/backendapi/diary/add', task, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      })\n      .then((response) => {\n        dispatch({ type: 'ADD_TASK', task })\n        dispatch(getTodos(params))\n        toast.success('Note Added Successfully!!')\n      })\n  }\n}\n\nexport const searchTask = (val) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'SEARCH_TASK',\n      val\n    })\n  }\n}\n\nexport const changeFilter = (filter) => {\n  return (dispatch) => {\n    dispatch({ type: 'CHANGE_FILTER', filter })\n    history.push(`/#/diary/${filter}`)\n    dispatch(getTodos({ filter }))\n  }\n}\n","import React from 'react'\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Layers, Star, Bookmark, Check, Trash } from 'react-feather'\nimport { connect } from 'react-redux'\nimport { changeFilter } from '../../redux/actions/diary/index'\nconst DiarySidebar = (props) => {\n  return (\n    <React.Fragment>\n      <span\n        className=\"sidebar-close-icon\"\n        onClick={() => props.mainSidebar(false)}\n      >\n        <X size={15} />\n      </span>\n      <div className=\"todo-app-menu\">\n        <div className=\"add-task\">\n          <Button.Ripple\n            block\n            className=\"btn-block\"\n            color=\"warning\"\n            onClick={() => {\n              props.addTask('open')\n              props.mainSidebar(false)\n            }}\n          >\n            Add Notes\n          </Button.Ripple>\n        </div>\n        <PerfectScrollbar\n          className=\"sidebar-menu-list\"\n          options={{\n            wheelPropagation: false\n          }}\n        >\n          <ListGroup className=\"font-medium-1\">\n            <ListGroupItem\n              className=\"border-0 pt-0\"\n              action\n              onClick={() => {\n                props.changeFilter('all')\n              }}\n              active={\n                props.routerProps.location.pathname === '/diary' ? true : false\n              }\n            >\n              <Layers size={22} />\n              <span className=\"align-middle ml-1\">All</span>\n            </ListGroupItem>\n          </ListGroup>\n          <hr />\n          <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\n          <ListGroup className=\"font-medium-1\">\n            <ListGroupItem\n              className=\"border-0\"\n              onClick={() => {\n                props.changeFilter('important')\n              }}\n              active={\n                props.routerProps.location.pathname === '/diary/important'\n                  ? true\n                  : false\n              }\n            >\n              <Star size={22} />\n              <span className=\"align-middle ml-1\">Important</span>\n            </ListGroupItem>\n            <ListGroupItem\n              className=\"border-0\"\n              onClick={() => {\n                props.changeFilter('starred')\n              }}\n              active={\n                props.routerProps.location.pathname === '/diary/starred'\n                  ? true\n                  : false\n              }\n            >\n              <Bookmark size={22} />\n              <span className=\"align-middle ml-1\">Bookmark</span>\n            </ListGroupItem>\n            <ListGroupItem\n              className=\"border-0\"\n              onClick={() => {\n                props.changeFilter('completed')\n              }}\n              active={\n                props.routerProps.location.pathname === '/diary/completed'\n                  ? true\n                  : false\n              }\n            >\n              <Check size={22} />\n              <span className=\"align-middle ml-1\">Completed</span>\n            </ListGroupItem>\n            <ListGroupItem\n              className=\"border-0\"\n              onClick={() => {\n                props.changeFilter('trashed')\n              }}\n              active={\n                props.routerProps.location.pathname === '/diary/trashed'\n                  ? true\n                  : false\n              }\n            >\n              <Trash size={22} />\n              <span className=\"align-middle ml-1\">Trashed</span>\n            </ListGroupItem>\n          </ListGroup>\n          <hr />\n          <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\n          <ListGroup className=\"font-medium-1\">\n            <ListGroupItem\n              className=\"border-0\"\n              onClick={() => {\n                props.changeFilter('personal')\n              }}\n              active={\n                props.routerProps.location.pathname === '/diary/personal'\n                  ? true\n                  : false\n              }\n            >\n              <span className=\"bullet bullet-primary align-middle\" />\n              <span className=\"align-middle ml-1\">Personal</span>\n            </ListGroupItem>\n            <ListGroupItem\n              className=\"border-0\"\n              onClick={() => {\n                props.changeFilter('professional')\n              }}\n              active={\n                props.routerProps.location.pathname === '/diary/professional'\n                  ? true\n                  : false\n              }\n            >\n              <span className=\"bullet bullet-warning align-middle\" />\n              <span className=\"align-middle ml-1\">Professional</span>\n            </ListGroupItem>\n            <ListGroupItem\n              className=\"border-0\"\n              onClick={() => {\n                props.changeFilter('others')\n              }}\n              active={\n                props.routerProps.location.pathname === '/diary/others'\n                  ? true\n                  : false\n              }\n            >\n              <span className=\"bullet bullet-success align-middle\" />\n              <span className=\"align-middle ml-1\">Others</span>\n            </ListGroupItem>\n            <ListGroupItem\n              className=\"border-0\"\n              onClick={() => {\n                props.changeFilter('todo')\n              }}\n              active={\n                props.routerProps.location.pathname === '/diary/todo'\n                  ? true\n                  : false\n              }\n            >\n              <span className=\"bullet bullet-danger align-middle\" />\n              <span className=\"align-middle ml-1\">TO DO List</span>\n            </ListGroupItem>\n          </ListGroup>\n        </PerfectScrollbar>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default connect(null, { changeFilter })(DiarySidebar)\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react'\nimport {\n  FormGroup,\n  Input,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Modal,\n  CardBody,\n  Card\n} from 'reactstrap'\nimport { Menu, Search, Bookmark, Star, Trash } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { connect } from 'react-redux'\nimport {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask\n} from '../../redux/actions/diary/index'\nconst DiaryList = (props) => {\n  const [open, setopen] = useState(false)\n  const [id, setid] = useState(null)\n  const [todos, settodos] = useState([])\n  const [value, setvalue] = useState('')\n  const { pathname } = props?.routerProps?.location\n\n  useEffect(() => {\n    if (props.app.todo.todos) {\n      settodos(props.app.todo.todos)\n    }\n  }, [props.app.todo])\n\n  useEffect(() => {\n    getdiaryLIst()\n  }, [])\n\n  const getdiaryLIst = async () => {\n    if (!pathname) return\n    await props.getTodos(pathname)\n    settodos(props?.app?.todo?.todos)\n  }\n\n  const handleOnChange = (e) => {\n    setvalue(e.target.value)\n    props.searchTask(e.target.value)\n  }\n  let routerFilter = props.routerProps.match.params.filter\n  let todosArr = value.length ? props.app.todo.filteredTodos : todos\n\n  if (todosArr === undefined) {\n    return (\n      <div className=\"fallback-spinner vh-100\">\n        <div className=\"loading\">\n          <div className=\"effect-1 effects\"></div>\n          <div className=\"effect-2 effects\"></div>\n          <div className=\"effect-3 effects\"></div>\n        </div>\n      </div>\n    )\n  }\n  let renderTodos =\n    todosArr.length > 0 ? (\n      todosArr.map((todo, i) => {\n        var options = {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        }\n        var today = new Date(todo.createdAt)\n        return (\n          <li\n            style={{ border: 'none', padding: '0', margin: '0 1.6rem' }}\n            className={`todo-item ${todo.isCompleted ? 'completed' : ''}`}\n            key={i}\n            onClick={() => {\n              props.handleUpdateTask(todo)\n            }}\n          >\n            <Modal\n              isOpen={open}\n              className=\"modal-dialog-centered\"\n              backdrop=\"static\"\n            >\n              <ModalBody>\n                Are you sure you want to delete this record?\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  color=\"primary\"\n                  className=\"button-label\"\n                  onClick={() => {\n                    setopen(false)\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  color=\"danger\"\n                  onClick={() => {\n                    setopen(false)\n                    props.trashTask(id)\n                  }}\n                  className=\"button-label\"\n                >\n                  Delete\n                </Button>\n              </ModalFooter>\n            </Modal>\n            <Card className=\"mt-1 mb-0\" style={{ minHeight: '110px' }}>\n              <CardBody className=\"p-0 d-flex\">\n                <div id=\"left-content\" className=\"w-100 p-1\">\n                  {window.screen.width <= 500 ? (\n                    <div id=\"top-content\" className=\"d-block\">\n                      <i\n                        className=\"m-0\"\n                        style={{ fontSize: '1.15rem', fontWeight: 'bold' }}\n                      >\n                        {todo.title}\n                      </i>\n                      <p style={{ fontSize: '1rem' }}>\n                        {today.toLocaleDateString('en-US', options)}\n                      </p>\n                    </div>\n                  ) : (\n                    <div id=\"top-content\" className=\"d-flex\">\n                      <p style={{ fontSize: '1rem' }}>\n                        {today.toLocaleDateString('en-US', options)}&nbsp;\n                        {'-'}\n                      </p>\n                      <p style={{ fontSize: '1.15rem', fontWeight: 'bold' }}>\n                        &nbsp;\n                        {todo.title}\n                      </p>\n                    </div>\n                  )}\n                  <div id=\"bottom-content\">\n                    {todo.desc.length > 0 ? (\n                      <p\n                        className=\"todo-desc mb-0\"\n                        style={{\n                          wordBreak: 'break-all',\n                          whiteSpace: 'normal',\n                          fontSize: '1.15rem'\n                        }}\n                      >\n                        {todo.desc}\n                      </p>\n                    ) : (\n                      ''\n                    )}\n                  </div>\n                </div>\n                <div id=\"options\">\n                  <div\n                    style={{ maxHeight: '110px' }}\n                    className=\"d-flex flex-column justify-content-between\"\n                  >\n                    <div\n                      style={{\n                        padding: '0.5rem',\n                        backgroundColor: todo.isImportant\n                          ? 'var(--danger)'\n                          : '',\n                        borderTopRightRadius: '0.5rem'\n                      }}\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        props.importantTask(todo)\n                      }}\n                    >\n                      <Star\n                        size={23}\n                        color={`${todo.isImportant ? 'white' : 'currentColor'}`}\n                        // className={`${todo.isImportant ? 'text-danger' : ''}`}\n                      />\n                    </div>\n                    <div\n                      style={{\n                        padding: '0.5rem',\n                        backgroundColor: todo.isStarred ? 'var(--warning)' : ''\n                      }}\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        props.starTask(todo)\n                      }}\n                    >\n                      <Bookmark\n                        size={23}\n                        color={`${todo.isStarred ? 'white' : 'currentColor'}`}\n                      />\n                    </div>\n                    {routerFilter !== 'trashed' ? (\n                      <div style={{ padding: '0.5rem' }}>\n                        <Trash\n                          size={23}\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            setid(todo.id)\n                            setopen(true)\n                          }}\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              </CardBody>\n            </Card>\n          </li>\n        )\n      })\n    ) : (\n      <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\n        No tasks at this time\n      </p>\n    )\n\n  return (\n    <div className=\"content-right h-100\">\n      <div className=\"todo-app-area h-100\">\n        <div className=\"todo-app-list-wrapper h-100\">\n          <div className=\"todo-app-list h-100\">\n            <div className=\"app-fixed-search\">\n              <div\n                className=\"sidebar-toggle d-inline-block d-lg-none\"\n                onClick={() => props.mainSidebar(true)}\n              >\n                <Menu size={24} />\n              </div>\n              <FormGroup\n                style={{\n                  display: 'flex',\n                  margin: 'auto',\n                  justifyContent: 'center'\n                }}\n                className=\"position-relative has-icon-left\"\n              >\n                <div style={{ borderRadius: '1.428rem' }}>\n                  <div className=\"form-control-position\">\n                    <Search size={15} />\n                  </div>\n                  <Input\n                    style={{\n                      width: '100%'\n                    }}\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    onChange={(e) => handleOnChange(e)}\n                    value={value}\n                  />\n                </div>\n              </FormGroup>\n            </div>\n            <PerfectScrollbar\n              className=\"todo-task-list\"\n              options={{\n                wheelPropagation: false\n              }}\n            >\n              <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\n            </PerfectScrollbar>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    app: state.todoApp\n  }\n}\nexport default connect(mapStateToProps, {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask\n})(DiaryList)\n","import React, { useEffect, useState } from 'react'\nimport {\n  Input,\n  Button,\n  FormGroup,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from 'reactstrap'\nimport Select from 'react-select'\nimport { X, Bookmark, Star, Tag, Check } from 'react-feather'\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport VideoRecorder from 'react-video-recorder'\nimport { Recorder } from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\nimport { connect } from 'react-redux'\nimport {\n  starTask,\n  completeTask,\n  importantTask,\n  updateTask,\n  updateLabel,\n  addNewTask\n} from '../../redux/actions/diary/index'\nconst colourOptions1 = [\n  {\n    value: 'Attachment',\n    label: 'Attachment',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Scribble',\n    label: 'Scribble',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Text',\n    label: 'Text',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Video',\n    label: 'Video',\n    color: '#0052CC',\n    isFixed: true\n  },\n  {\n    value: 'Voice',\n    label: 'Voice',\n    color: '#0052CC',\n    isFixed: true\n  }\n]\nconst TaskSidebar = (props) => {\n  const [audioDetails, setaudioDetails] = useState({\n    url: null,\n    blob: null,\n    chunks: null,\n    duration: {\n      h: 0,\n      m: 0,\n      s: 0\n    }\n  })\n  const [newTask, setnewTask] = useState({\n    title: '',\n    desc: '',\n    tags: [],\n    isCompleted: false,\n    isImportant: false,\n    isStarred: false\n  })\n  const [ptype, setptype] = useState('')\n  const [taskToUpdate, settaskToUpdate] = useState(null)\n  const [taskTitle, settaskTitle] = useState('')\n  const [taskDesc, settaskDesc] = useState('')\n  const [taskStatus, settaskStatus] = useState(false)\n  const [taskStarred, settaskStarred] = useState(false)\n  const [validUpDate, setvalidUpDate] = useState(false)\n  const [taskImportant, settaskImportant] = useState(false)\n  const selectAssetRef = React.createRef()\n  useEffect(() => {\n    if (props.taskToUpdate) {\n      const { title, id, desc, isCompleted, isStarred, isImportant } =\n        props.taskToUpdate\n      settaskToUpdate(props.taskToUpdate)\n      id !== null && setvalidUpDate(true)\n      settaskTitle(title)\n      settaskDesc(desc)\n      settaskStatus(isCompleted)\n      settaskStarred(isStarred)\n      settaskImportant(isImportant)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.taskToUpdate])\n  const handleAudioStop = (data) => {\n    setaudioDetails(data)\n  }\n  const handleAudioUpload = (file) => {\n    console.log(file)\n  }\n  const handleRest = () => {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    }\n    setaudioDetails(reset)\n  }\n\n  const handleNewTaskTags = (tag) => {\n    let tagsArr = newTask.tags\n    if (tagsArr.includes(tag)) {\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\n    } else {\n      tagsArr.push(tag)\n    }\n    setnewTask({ ...newTask, tags: tag })\n  }\n  const renderTags = (taskArr) => {\n    return taskArr.map((tag, i) => (\n      <div className=\"chip mb-0 mr-50\" key={i}>\n        <div className=\"chip-body\">\n          <span className=\"chip-text\">\n            <span\n              className={`bullet bullet-${\n                tag === 'professional'\n                  ? 'warning'\n                  : tag === 'others'\n                  ? 'success'\n                  : tag === 'todo'\n                  ? 'danger'\n                  : 'primary'\n              } bullet-xs`}\n            />\n            <span className=\"text-capitalize ml-25\">{tag}</span>\n          </span>\n        </div>\n      </div>\n    ))\n  }\n\n  return (\n    <div\n      className={`task-sidebar ${props.addTaskState === true ? 'show' : ''}`}\n    >\n      <div className=\"task-header\">\n        <div className=\"d-flex justify-content-between\">\n          <div className=\"task-type-title text-bold-600\">\n            <h3 style={{ color: 'var(--warning)' }}>\n              {props.taskToUpdate && props.taskToUpdate.id\n                ? 'Update Details'\n                : 'Enter Details'}\n            </h3>\n          </div>\n          <div className=\"close-icon\">\n            <X\n              className=\"cursor-pointer\"\n              size={20}\n              onClick={() => {\n                props.addTask('close')\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      <PerfectScrollbar>\n        <div className=\"task-body\">\n          <div className=\"d-flex justify-content-between mb-2\">\n            <div className=\"mark-complete\">\n              {props.taskToUpdate && props.taskToUpdate.id && (\n                <Checkbox\n                  color=\"primary\"\n                  className=\"user-checkbox\"\n                  icon={<Check className=\"vx-icon\" size={15} />}\n                  label={''}\n                  checked={taskStatus}\n                  onChange={(e) => {\n                    props.completeTask(props.taskToUpdate)\n                  }}\n                />\n              )}\n            </div>\n            <div className=\"task-actions\">\n              <Star\n                size={20}\n                className={`mr-50 ${\n                  (props.taskToUpdate !== null && taskImportant) ||\n                  newTask.isImportant\n                    ? 'text-success'\n                    : ''\n                }`}\n                onClick={() => {\n                  if (props.taskToUpdate !== null) {\n                    props.importantTask(props.taskToUpdate)\n                  } else {\n                    setnewTask({\n                      ...newTask,\n                      isImportant: !newTask.isImportant\n                    })\n                  }\n                }}\n              />\n              <Bookmark\n                size={20}\n                className={`mr-50 ${\n                  (props.taskToUpdate !== null && taskStarred) ||\n                  newTask.isStarred\n                    ? 'text-warning'\n                    : ''\n                }`}\n                onClick={() => {\n                  if (props.taskToUpdate !== null) {\n                    props.starTask(props.taskToUpdate)\n                  } else {\n                    setnewTask({\n                      ...newTask,\n                      isStarred: !newTask.isStarred\n                    })\n                  }\n                }}\n              />\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle tag=\"span\">\n                  <Tag className=\"mr-50\" size={20} />\n                </DropdownToggle>\n                <DropdownMenu tag=\"ul\" right>\n                  <DropdownItem tag=\"li\">\n                    <Checkbox\n                      color=\"primary\"\n                      className=\"user-checkbox\"\n                      icon={<Check className=\"vx-icon\" size={12} />}\n                      label={'Personal'}\n                      checked={\n                        (props.taskToUpdate !== null &&\n                          props.taskToUpdate.tags.includes('personal')) ||\n                        newTask.tags.includes('personal')\n                          ? true\n                          : false\n                      }\n                      size=\"sm\"\n                      onChange={(e) => {\n                        e.stopPropagation()\n                        if (props.taskToUpdate !== null)\n                          props.updateLabel(taskToUpdate.id, 'personal')\n                        else handleNewTaskTags('personal')\n                      }}\n                    />\n                  </DropdownItem>\n                  <DropdownItem tag=\"li\">\n                    <Checkbox\n                      color=\"primary\"\n                      labelColor=\"#ff9f43\"\n                      className=\"user-checkbox\"\n                      icon={<Check className=\"vx-icon\" size={12} />}\n                      label={'Professional'}\n                      checked={\n                        (props.taskToUpdate !== null &&\n                          props.taskToUpdate.tags.includes('professional')) ||\n                        newTask.tags.includes('professional')\n                          ? true\n                          : false\n                      }\n                      size=\"sm\"\n                      onClick={(e) => e.stopPropagation()}\n                      onChange={(e) => {\n                        e.stopPropagation()\n                        if (props.taskToUpdate !== null)\n                          props.updateLabel(taskToUpdate.id, 'professional')\n                        else handleNewTaskTags('professional')\n                      }}\n                    />\n                  </DropdownItem>\n                  <DropdownItem tag=\"li\">\n                    <Checkbox\n                      color=\"primary\"\n                      className=\"user-checkbox\"\n                      icon={<Check className=\"vx-icon\" size={12} />}\n                      label={'Others'}\n                      labelColor=\"#25af63\"\n                      checked={\n                        (props.taskToUpdate !== null &&\n                          props.taskToUpdate.tags.includes('others')) ||\n                        newTask.tags.includes('others')\n                          ? true\n                          : false\n                      }\n                      size=\"sm\"\n                      onClick={(e) => e.stopPropagation()}\n                      onChange={(e) => {\n                        e.stopPropagation()\n                        if (props.taskToUpdate !== null)\n                          props.updateLabel(taskToUpdate.id, 'others')\n                        else handleNewTaskTags('others')\n                      }}\n                    />\n                  </DropdownItem>\n                  <DropdownItem tag=\"li\">\n                    <Checkbox\n                      color=\"primary\"\n                      className=\"user-checkbox\"\n                      labelColor=\"#ea5455\"\n                      icon={<Check className=\"vx-icon\" size={12} />}\n                      label={'TO DO List'}\n                      checked={\n                        (props.taskToUpdate !== null &&\n                          props.taskToUpdate.tags.includes('todo')) ||\n                        newTask.tags.includes('todo')\n                          ? true\n                          : false\n                      }\n                      size=\"sm\"\n                      onClick={(e) => e.stopPropagation()}\n                      onChange={(e) => {\n                        e.stopPropagation()\n                        if (props.taskToUpdate !== null)\n                          props.updateLabel(taskToUpdate.id, 'todo')\n                        else handleNewTaskTags('todo')\n                      }}\n                    />\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </div>\n\n          <FormGroup className=\"form-label-group\">\n            <Select\n              className=\"React\"\n              classNamePrefix=\"select\"\n              // defaultValue={colourOptions1[0]}\n\n              ref={selectAssetRef}\n              name=\"color\"\n              options={colourOptions1}\n              isClearable={true}\n              placeholder=\"Select Message Type...\"\n              onChange={(e) => {\n                setptype(e ? e.value : '')\n              }}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"text\"\n              placeholder=\"Title\"\n              value={props.taskToUpdate !== null ? taskTitle : newTask.title}\n              onChange={(e) => {\n                if (props.taskToUpdate !== null) {\n                  settaskTitle(e.target.value)\n                } else {\n                  setnewTask({\n                    ...newTask,\n                    title: e.target.value\n                  })\n                }\n              }}\n            />\n          </FormGroup>\n          <FormGroup>\n            {ptype === 'Video' && (\n              <VideoRecorder\n                onRecordingComplete={(videoBlob) => {\n                  // Do something with the video...\n                  console.log('videoBlob', videoBlob)\n                }}\n              />\n            )}\n            {ptype === 'Voice' && (\n              <Recorder\n                record={true}\n                title={'New recording'}\n                audioURL={audioDetails.url}\n                showUIAudio\n                handleAudioStop={(data) => handleAudioStop(data)}\n                handleAudioUpload={(data) => handleAudioUpload(data)}\n                handleRest={() => handleRest()}\n              />\n            )}\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"textarea\"\n              placeholder=\"Description\"\n              rows=\"5\"\n              value={props.taskToUpdate !== null ? taskDesc : newTask.desc}\n              onChange={(e) => {\n                if (props.taskToUpdate !== null) {\n                  settaskDesc(e.target.value)\n                } else {\n                  setnewTask({\n                    ...newTask,\n                    desc: e.target.value\n                  })\n                }\n              }}\n            />\n          </FormGroup>\n          <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\n            {props.taskToUpdate !== null &&\n            props.taskToUpdate.tags &&\n            props.taskToUpdate.tags.length > 0\n              ? renderTags(props.taskToUpdate.tags)\n              : null}\n          </div>\n          <div\n            className=\"d-flex justify-content-end\"\n            style={{ textAlign: 'right' }}\n          >\n            <Button.Ripple\n              outline\n              className=\"mr-1 mb-1 button-label\"\n              color=\"secondary\"\n              onClick={() => {\n                props.addTask('close')\n                props.handleUndoChanges()\n                setnewTask({\n                  title: '',\n                  desc: '',\n                  tags: [],\n                  isCompleted: false,\n                  isImportant: false,\n                  isStarred: false\n                })\n              }}\n            >\n              Cancel\n            </Button.Ripple>{' '}\n            <Button.Ripple\n              className=\"mb-1 button-label\"\n              color=\"warning\"\n              onClick={() => {\n                console.log('taskToUpdate', taskToUpdate)\n                // toast.success('Note Added Successfully!!')\n\n                if (props.taskToUpdate !== null) {\n                  const { isCompleted, isImportant, isStarred, tags } =\n                    taskToUpdate\n                  props.updateTask(\n                    taskToUpdate._id,\n                    taskTitle,\n                    taskDesc,\n                    taskToUpdate,\n                    isCompleted,\n                    isImportant,\n                    isStarred,\n                    tags\n                  )\n                } else {\n                  props.addNewTask(newTask)\n                }\n                props.addTask('close')\n                setnewTask({\n                  title: '',\n                  desc: '',\n                  tags: [],\n                  isCompleted: false,\n                  isImportant: false,\n                  isStarred: false\n                })\n              }}\n              disabled={\n                (taskTitle.length && taskDesc) ||\n                (newTask.title && newTask.desc)\n                  ? false\n                  : true\n              }\n            >\n              {validUpDate ? 'Update' : 'Add'}\n            </Button.Ripple>\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    app: state.todoApp\n  }\n}\n\nexport default connect(mapStateToProps, {\n  completeTask,\n  importantTask,\n  starTask,\n  updateTask,\n  updateLabel,\n  addNewTask\n})(TaskSidebar)\n","import React, { useState } from 'react'\nimport Sidebar from 'react-sidebar'\nimport { ContextLayout } from '../../utility/context/Layout'\nimport DiarySidebar from './DiarySidebar'\nimport DiaryList from './DiaryList'\nimport TaskSidebar from './TaskSidebar'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport '../../assets/scss/plugins/extensions/toastr.scss'\nimport '../../assets/scss/pages/app-todo.scss'\nconst mql = window.matchMedia(`(min-width: 992px)`)\n\nconst Diary = (props) => {\n  const [addTask, setaddTask] = useState(false)\n  const [sidebarOpen, setsidebarOpen] = useState(false)\n  const [taskToUpdate, settaskToUpdate] = useState(null)\n  const [prevState, setprevState] = useState(null)\n\n  const onSetSidebarOpen = (open) => {\n    setsidebarOpen(open)\n  }\n\n  const handleAddTask = (status) => {\n    if (status === 'open') setaddTask(true)\n    else {\n      setaddTask(false)\n      settaskToUpdate(null)\n    }\n  }\n  const handleUpdateTask = (todo) => {\n    if (todo !== undefined) {\n      setaddTask(true)\n      settaskToUpdate(todo)\n    } else {\n      settaskToUpdate(null)\n    }\n  }\n\n  const handleUndoChanges = () => {\n    setprevState(true)\n  }\n\n  return (\n    <div>\n      <ToastContainer />\n      <h2 className=\"warning spacing nodisplay\">Secret Diary</h2>\n      <div className=\"todo-application position-relative\">\n        <div\n          className={`app-content-overlay ${\n            addTask || sidebarOpen ? 'show' : ''\n          }`}\n          onClick={() => {\n            handleAddTask('close')\n            onSetSidebarOpen(false)\n          }}\n        />\n        <ContextLayout.Consumer>\n          {(context) => (\n            <Sidebar\n              sidebar={\n                <DiarySidebar\n                  routerProps={props}\n                  addTask={handleAddTask}\n                  mainSidebar={onSetSidebarOpen}\n                />\n              }\n              docked={mql.matches}\n              open={sidebarOpen}\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\n              touch={false}\n              contentClassName=\"sidebar-children d-none\"\n              pullRight={context.state.direction === 'rtl'}\n            >\n              \"\"\n            </Sidebar>\n          )}\n        </ContextLayout.Consumer>\n        <DiaryList\n          routerProps={props}\n          handleUpdateTask={handleUpdateTask}\n          mainSidebar={onSetSidebarOpen}\n          prevState={prevState}\n          clearPrevState={() => {\n            setprevState(false)\n          }}\n        />\n        <TaskSidebar\n          addTask={handleAddTask}\n          addTaskState={addTask}\n          taskToUpdate={taskToUpdate}\n          mainSidebar={onSetSidebarOpen}\n          handleUndoChanges={handleUndoChanges}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Diary\n"],"sourceRoot":""}