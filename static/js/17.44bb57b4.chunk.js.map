{"version":3,"sources":["views/PasswordVault/AddAssets.js","views/PasswordVault/PasswordVault.js","assets/img/slider/banner-31.jpg","assets/img/slider/banner-25.jpg","assets/img/slider/banner-22.jpg","assets/img/slider/banner-23.jpg","assets/img/slider/banner-24.jpg","redux/actions/data-list/index.js","components/@vuexy/breadCrumbs/BreadCrumb.js","views/ui-elements/cards/analytics/GoalOverview.js","../node_modules/react-feather/dist/icons/trash.js","../node_modules/reactstrap/es/ModalFooter.js","../node_modules/reactstrap/es/ModalHeader.js","../node_modules/reactstrap/es/Alert.js"],"names":["colourOptions1","value","label","color","isFixed","colourOptions2","AddAssets","state","assetType","selectAssetRef","React","createRef","selectNomineeRef","selectCustomRef","nomineeOption","nominees","nomineeList","selectedTemplate","template","Custom","key","val","type","Notes","changeValue","e","k","idx","findIndex","x","console","log","setState","callAddAsset","preventDefault","user","JSON","parse","localStorage","getItem","nominee","as","assetDetails","assets","push","setItem","stringify","toast","success","clearAsset","clearCustomField","axios","post","_id","then","res","catch","addfield","fname","ftype","deletable","changeNominee","event","forEach","id","name","current","select","clearValue","this","props","getData","parsedFilter","Row","Col","lg","md","sm","Card","CardHeader","CardTitle","CardBody","Form","className","FormGroup","classNamePrefix","ref","options","isClearable","placeholder","onChange","undefined","Label","for","isMulti","Object","keys","includes","map","style","zIndex","float","marginBottom","marginRight","size","Input","ev","target","Button","Ripple","disabled","length","onClick","outline","dataList","data","temp","relation","Component","connect","defaults","baseURL","DeleteComponent","useState","open","setOpen","Modal","isOpen","backdrop","ModalBody","ModalFooter","deleteRow","window","screen","width","ViewComponent","showPass","passwordShowTime","pwdtime","warning","set","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","params","effect","grabCursor","autoplay","delay","disableOnInteraction","cubeEffect","shadow","slideShadows","shadowOffset","shadowScale","pagination","el","PasswordVault","isLoading","active","modal","pwd","ptype","userName","accountNumber","description","confirmPwd","saved","confirmOpen","columns","selector","sortable","cell","row","justifyContent","display","showIdx","deletepwd","mobilecolumns","currentData","handleCurrentData","handleDelete","minWidth","fontSize","title","maxWidth","update","logInUserData","headers","i","decryptdata","pwdId","pwdname","reverse","togglepwdshow","theLocations","l","assign","toggleModal","prevState","toggleModal2","index","indexOf","setTimeout","bind","clearSaved","addToSaved","newp","newp1","encryptdata","filter","ex","toggleConfirm","setPassword","trim","setUserName","userTemp","Fragment","toggle","fade","ModalHeader","border","Alert","TabContent","activeTab","TabPane","tabId","themeConfig","theme","textAlign","Spinner","backgroundImage","img1","backgroundSize","img2","img3","img4","img5","paddingTop","thumbView","noHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selected","selectedRows","customStyles","sortIcon","module","exports","dispatch","a","userData","get","response","totalPages","getSpendData","getInitialData","getSpendInitialData","filterData","deleteData","obj","updateData","getState","addData","BreadCrumbs","breadCrumbTitle","tag","to","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","left","right","_extends","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Trash","forwardRef","_ref","_ref$color","_ref$size","rest","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","propTypes","PropTypes","string","oneOfType","number","displayName","tagPropType","cssModule","object","Tag","attributes","classes","mapToCssModules","classNames","defaultProps","wrapTag","func","children","node","closeAriaLabel","charCode","close","closeButton","WrapTag","closeIcon","String","fromCharCode","ownKeys","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","closeClassName","bool","transition","shape","Fade","innerRef","unmountOnExit","closeClasses","alertTransition","baseClass","timeout","in","role"],"mappings":"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","file":"static/js/17.44bb57b4.chunk.js","sourcesContent":["import React, { useRef } from 'react'\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label\n} from 'reactstrap'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { ToastContainer } from 'react-toastify'\nimport '../../assets/scss/plugins/extensions/toastr.scss'\nimport { getData } from '../../redux/actions/data-list/'\nimport { HelpCircle } from 'react-feather'\nimport GoalOverview from '../ui-elements/cards/analytics/GoalOverview'\nimport Select from 'react-select'\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\nimport { Check, Delete } from 'react-feather'\nimport Axios from 'axios'\n\nlet $primary = '#7367F0',\n  $success = '#28C76F',\n  $danger = '#EA5455',\n  $warning = '#FF9F43',\n  $primary_light = '#9c8cfc',\n  $warning_light = '#FFC085',\n  $danger_light = '#f29292',\n  $stroke_color = '#b9c3cd',\n  $label_color = '#e7eef7'\n\nconst colourOptions = [\n  { value: 'Aaquib', label: 'Aaquib', color: '#00B8D9', isFixed: true },\n  { value: 'Vipin', label: 'Vipin', color: '#0052CC', isFixed: true },\n  { value: 'Aqueel', label: 'Aqueel', color: '#5243AA', isFixed: true },\n  { value: 'Vatsal', label: 'Vatsal', color: '#FF5630', isFixed: false },\n  { value: 'Pritam', label: 'Pritam', color: '#FF8B00', isFixed: false }\n]\nconst colourOptions1 = [\n  {\n    value: 'Bank Details',\n    label: 'Bank Details',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Fixed Deposit',\n    label: 'Fixed Deposit',\n    color: '#0052CC',\n    isFixed: true\n  },\n  { value: 'Notes', label: 'Notes', color: '#0052CC', isFixed: true },\n  { value: 'Custom', label: 'Custom', color: '#0052CC', isFixed: true }\n]\n\nconst colourOptions2 = [\n  { value: 'Text', label: 'Text', color: '#00B8D9', isFixed: true },\n  { value: 'textarea', label: 'Text Area', color: '#0052CC', isFixed: true },\n  { value: 'Date', label: 'Date', color: '#0052CC', isFixed: true },\n  { value: 'Number', label: 'Number', color: '#0052CC', isFixed: true },\n  { value: 'File', label: 'File', color: '#0052CC', isFixed: true }\n]\n\nclass AddAssets extends React.Component {\n  state = {\n    assetType: '',\n    selectAssetRef: React.createRef(),\n    selectNomineeRef: React.createRef(),\n    selectCustomRef: React.createRef(),\n    nomineeOption: [],\n    nominees: [],\n    nomineeList: [],\n    selectedTemplate: [],\n    template: {\n      Custom: [\n        {\n          key: 'Asset Name',\n          val: '',\n          type: 'Text'\n        }\n      ],\n      Notes: [\n        {\n          key: 'Notes',\n          val: '',\n          type: 'textarea'\n        },\n        {\n          key: 'Notes End Date',\n          val: '',\n          type: 'date'\n        }\n      ],\n      'Fixed Deposit': [\n        {\n          key: 'Asset Name / Alias',\n          val: '',\n          type: 'Text'\n        },\n        {\n          key: 'Bank Accrount No',\n          val: '',\n          type: 'Number'\n        },\n        {\n          key: 'IFSC',\n          val: '',\n          type: 'text'\n        },\n        {\n          key: 'Amount',\n          val: '',\n          type: 'Number'\n        },\n        {\n          key: 'FD Nominee Registered at Bank',\n          val: '',\n          type: 'text'\n        },\n        {\n          key: 'FD Maturity Date',\n          val: '',\n          type: 'Date'\n        },\n        {\n          key: 'Attachments',\n          val: '',\n          type: 'File'\n        }\n      ]\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.dataList.data.length !== state.nomineeList.length) {\n      const nomineeOption = state.nomineeOption\n      props.dataList.data.forEach((e) => {\n        const temp = {\n          value: e._id,\n          label: e.name + ' - ' + e.relation,\n          color: '#00B8D9',\n          isFixed: false\n        }\n        nomineeOption.push(temp)\n      })\n\n      return {\n        nomineeList: props.dataList.data,\n        nomineeOption: nomineeOption\n      }\n    }\n\n    // Return null if the state hasn't changed\n    return null\n  }\n  componentDidMount() {\n    this.props.getData(this.props.parsedFilter)\n    // this.props.getInitialData()\n  }\n\n  changeValue = (e, k) => {\n    const selectedTemplate = this.state.selectedTemplate\n    const idx = selectedTemplate.findIndex((x) => x.key === k.key)\n    console.log('ZZZZZZZZZZZ', e, idx)\n    selectedTemplate[idx].val = e\n    this.setState({ selectedTemplate })\n  }\n\n  callAddAsset = (e) => {\n    e.preventDefault()\n    console.log(this.state.selectedTemplate)\n    const user = JSON.parse(localStorage.getItem('logInUserData'))\n    console.log('sssssssssssssssss', this.state.nominee)\n    const as = {\n      assetType: this.state.assetType,\n      assetDetails: this.state.selectedTemplate,\n      nominees: this.state.nominees\n    }\n    user.assets.push(as)\n    localStorage.setItem('logInUserData', JSON.stringify(user))\n    toast.success('Asset addedd successfully!')\n    this.clearAsset()\n    this.clearCustomField()\n    axios\n      .post('/backendapi/adddetails', { _id: user._id, assets: user.assets })\n      .then((res) => {})\n      .catch()\n  }\n  addfield = () => {\n    const selectedTemplate = this.state.selectedTemplate\n    selectedTemplate.push({\n      key: this.state.fname,\n      val: '',\n      type: this.state.ftype,\n      deletable: true\n    })\n    console.log('selectedTemplate', selectedTemplate)\n    this.setState({ selectedTemplate, fname: '', ftype: '' })\n  }\n  changeNominee = (event) => {\n    const nominees = this.state.nominees\n    event.forEach((e) => {\n      nominees.push({ id: e.value, name: e.label })\n      console.log('ssssssssssssssssssssss2', e)\n    })\n    this.setState({ nominees })\n\n    // console.log(event.target);\n    // console.log(event.target.value);\n  }\n\n  clearAsset = () => {\n    this.state.selectAssetRef.current.select.clearValue()\n    this.state.selectNomineeRef.current.select.clearValue()\n    this.setState({ assetType: '', selectedTemplate: [], nominees: [] })\n  }\n  clearCustomField = () => {\n    this.setState({ fname: '', ftype: '' })\n    this.state.selectCustomRef.current.select.clearValue()\n  }\n\n  render() {\n    return (\n      <Row>\n        <ToastContainer />\n        <Col lg=\"8\" md=\"6\" sm=\"12\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Add New Asset</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Form className=\"mt-2\">\n                <Row>\n                  <Col md=\"6\" sm=\"12\">\n                    <FormGroup className=\"form-label-group\">\n                      <Select\n                        className=\"React\"\n                        classNamePrefix=\"select\"\n                        //defaultValue={colourOptions1[0]}\n\n                        ref={this.state.selectAssetRef}\n                        name=\"color\"\n                        options={colourOptions1}\n                        isClearable={true}\n                        placeholder=\"Select Investment Type...\"\n                        onChange={(e) => {\n                          {\n                            this.setState({\n                              fname: '',\n                              ftype: '',\n                              assetType: e ? e.value : undefined,\n                              selectedTemplate: e\n                                ? this.state.template[e.value]\n                                : {}\n                            })\n                          }\n                        }}\n                      />\n                      <Label for=\"nameMulti\">Asset Type</Label>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"6\" sm=\"12\">\n                    <FormGroup className=\"form-label-group\">\n                      <Select\n                        //defaultValue={[colourOptions[2], colourOptions[3]]}\n                        isMulti\n                        name=\"nominee\"\n                        options={this.state.nomineeOption}\n                        ref={this.state.selectNomineeRef}\n                        className=\"React\"\n                        classNamePrefix=\"select\"\n                        placeholder=\"Select Nominees...\"\n                        id=\"nominee\"\n                        onChange={this.changeNominee}\n                        //onChange={(e) => {{this.setState({nominee: e ? e.value : undefined})}} }\n                      />\n                      <Label>Nominee</Label>\n                    </FormGroup>\n                  </Col>\n                  {/* {this.state.assetType  && \n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"First Name\"\n                  />\n                  <Label for=\"nameMulti\">First Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"lastname\"\n                    id=\"lastNameMulti\"\n                    placeholder=\"Last Name\"\n                  />\n                  <Label for=\"lastNameMulti\">Last Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Fixed Deposit\"  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder=\"Fixed Deposit Account Number\"\n                  />\n                  <Label for=\"cityMulti\">Fixed Deposit Account Number</Label>\n                </FormGroup>\n              </Col>} */}\n                  {Object.keys(this.state.template).includes(\n                    this.state.assetType\n                  ) &&\n                    this.state.template[this.state.assetType].map((e) => {\n                      return (\n                        <Col md=\"6\" sm=\"12\">\n                          <FormGroup className=\"form-label-group\">\n                            {e.deletable && (\n                              <Delete\n                                style={{\n                                  zIndex: 999,\n                                  float: 'right',\n                                  marginBottom: '-8px',\n                                  marginRight: '-5px'\n                                }}\n                                className=\"primary\"\n                                size={15}\n                              />\n                            )}\n                            <Input\n                              type={e.type}\n                              name=\"city\"\n                              id=\"cityMulti\"\n                              placeholder={e.key}\n                              onChange={(ev) => {\n                                this.changeValue(\n                                  ev.target ? ev.target.value : ev.value,\n                                  e\n                                )\n                              }}\n                            />\n                            <Label for=\"cityMulti\">{e.key}</Label>\n                          </FormGroup>\n                        </Col>\n                      )\n                    })}\n                  {/* {this.state.assetType === \"Fixed Deposit\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Bank Name\"\n                  />\n                  <Label for=\"CountryMulti\">Bank Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Bank Details\"  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder=\"Bank Account Number\"\n                  />\n                  <Label for=\"cityMulti\">Bank Account Number</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Bank Details\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Bank Name\"\n                  />\n                  <Label for=\"CountryMulti\">Bank Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Property\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Property Location\"\n                  />\n                  <Label for=\"CountryMulti\">Property Location</Label>\n                </FormGroup>\n              </Col>} */}\n                  {/* <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"company\"\n                    id=\"CompanyMulti\"\n                    placeholder=\"Company\"\n                  />\n                  <Label for=\"CompanyMulti\">Company</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"email\"\n                    name=\"Email\"\n                    id=\"EmailMulti\"\n                    placeholder=\"Email\"\n                  />\n                  <Label for=\"EmailMulti\">Email</Label>\n                </FormGroup>\n              </Col> */}\n                  {/* <Col sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Remember Me\"\n                    defaultChecked={false}\n                  />\n                </FormGroup>\n              </Col> */}\n                  <Col sm=\"12\">\n                    <FormGroup className=\"form-label-group\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        type=\"submit\"\n                        className=\"mr-1 mb-1\"\n                        disabled={this.state.nominees.length === 0}\n                        onClick={(e) => {\n                          this.callAddAsset(e)\n                        }}\n                      >\n                        Submit\n                      </Button.Ripple>\n                      <Button.Ripple\n                        outline\n                        color=\"warning\"\n                        type=\"reset\"\n                        className=\"mb-1\"\n                        onClick={(e) => {\n                          this.clearAsset()\n                        }}\n                      >\n                        Reset\n                      </Button.Ripple>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg=\"4\" md=\"6\" sm=\"12\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Add Custum Field</CardTitle>\n              <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm=\"12\">\n                  <FormGroup className=\"form-label-group\">\n                    <Input\n                      type=\"email\"\n                      name=\"Email\"\n                      disabled={this.state.assetType === ''}\n                      id=\"EmailMulti\"\n                      value={this.state.fname}\n                      placeholder=\"Enter Field Name\"\n                      onChange={(e) => {\n                        this.setState({ fname: e.target.value })\n                      }}\n                    />\n                    <Label for=\"EmailMulti\">Enter Field Name</Label>\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\">\n                  <FormGroup\n                    className=\"form-label-group\"\n                    disabled={this.state.assetType === undefined}\n                  >\n                    <Select\n                      className=\"React\"\n                      ref={this.state.selectCustomRef}\n                      disabled={this.state.assetType === undefined}\n                      classNamePrefix=\"select\"\n                      isClearable={true}\n                      //defaultValue={colourOptions1[0]}\n                      name=\"color\"\n                      options={colourOptions2}\n                      placeholder=\"Select Field Type...\"\n                      onChange={(e) =>\n                        this.setState({ ftype: e ? e.value : ' ' })\n                      }\n                    />\n                    <Label for=\"nameMulti\">Field Type</Label>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\" sm=\"12\">\n                  <FormGroup className=\"form-label-group\">\n                    <Button.Ripple\n                      color=\"primary\"\n                      disabled={this.state.assetType === undefined}\n                      type=\"submit\"\n                      className=\"mr-1 mb-1\"\n                      onClick={(e) => this.addfield()}\n                    >\n                      {'<- Add'}\n                    </Button.Ripple>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\" sm=\"12\">\n                  <FormGroup className=\"form-label-group\">\n                    <Button.Ripple\n                      outline\n                      color=\"warning\"\n                      type=\"reset\"\n                      className=\"mb-1\"\n                      disabled={this.state.assetType === undefined}\n                      onClick={(e) => {\n                        this.clearCustomField()\n                      }}\n                    >\n                      Reset\n                    </Button.Ripple>\n                  </FormGroup>\n                </Col>\n              </Row>\n\n              {/* <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"radialBar\"\n            height={260}\n          /> */}\n            </CardBody>\n            {/* <div className=\"d-flex mt-2\">\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">Completed</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\n          </div>\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">In Progress</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\n          </div>\n        </div> */}\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    dataList: state.dataList\n  }\n}\n\nexport default connect(mapStateToProps, { getData })(AddAssets)\n\n//export default AddAssets\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Spinner } from 'reactstrap'\nimport {\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  Card,\n  FormGroup,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Form,\n  Alert,\n  Button,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Label\n} from 'reactstrap'\nimport DataTable from 'react-data-table-component'\nimport Swiper from 'react-id-swiper'\nimport { encryptdata, decryptdata } from '../../utility/context/SecurityTool'\nimport 'swiper/css/swiper.css'\nimport '../../assets/scss/plugins/extensions/swiper.scss'\nimport img1 from '../../assets/img/slider/banner-31.jpg'\nimport img2 from '../../assets/img/slider/banner-22.jpg'\nimport img3 from '../../assets/img/slider/banner-23.jpg'\nimport img4 from '../../assets/img/slider/banner-24.jpg'\nimport img5 from '../../assets/img/slider/banner-25.jpg'\nimport Select from 'react-select'\nimport { toast } from 'react-toastify'\nimport { Eye, EyeOff, Trash, ChevronDown } from 'react-feather'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { ToastContainer } from 'react-toastify'\nimport '../../assets/scss/plugins/extensions/toastr.scss'\nimport Breadcrumbs from '../../components/@vuexy/breadCrumbs/BreadCrumb'\nimport classnames from 'classnames'\nimport AddAssets from './AddAssets'\nimport GoalOverview from '../ui-elements/cards/analytics/GoalOverview'\nimport { useDropzone } from 'react-dropzone'\nimport '../../assets/scss/plugins/extensions/react-paginate.scss'\nimport '../../assets/scss/pages/data-list.scss'\n\nimport themeConfig from '../../configs/themeConfig'\n\nimport '../../assets/scss/plugins/extensions/dropzone.scss'\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\n//axios.defaults.baseURL = \"http://localhost:5000\";\n\nconst DeleteComponent = (props) => {\n  const [open, setOpen] = useState(false)\n  return (\n    <>\n      <Modal isOpen={open} className=\"modal-dialog-centered\" backdrop=\"static\">\n        <ModalBody>Are you sure you want to delete this record?</ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            onClick={() => setOpen(false)}\n            className=\"button-label\"\n          >\n            Cancel\n          </Button>\n          <Button\n            color=\"danger\"\n            onClick={() => {\n              props.deleteRow()\n              setOpen(false)\n            }}\n            className=\"button-label\"\n          >\n            Delete\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <div className=\"data-list-action\">\n        <Trash\n          className=\"cursor-pointer\"\n          size={window.screen.width < 600 ? 13 : 20}\n          onClick={() => setOpen(true)}\n        />\n      </div>\n    </>\n  )\n}\n\nconst ViewComponent = (props) => {\n  return (\n    <div className=\"data-list-action\">\n      <Eye\n        className=\"cursor-pointer\"\n        size={window.screen.width < 600 ? 13 : 20}\n        onClick={() => {\n          if (!props.showPass) {\n            props.set()\n          } else {\n            let passwordShowTime = JSON.parse(\n              localStorage.getItem('logInUserData')\n            ).pwdtime\n            if (passwordShowTime > 10 || passwordShowTime < 2) {\n              passwordShowTime = 3\n            }\n            toast.warning(\n              'Wait for ' +\n                passwordShowTime +\n                ' seconds as one password is already visible !'\n            )\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nconst selectedStyle = {\n  rows: {\n    selectedHighlighStyle: {\n      backgroundColor: 'rgba(115,103,240,.05)',\n      color: '#7367F0 !important',\n      boxShadow: '0 0 1px 0 #7367F0 !important',\n      '&:hover': {\n        transform: 'translateY(0px) !important'\n      }\n    }\n  }\n}\n\nconst params = {\n  effect: 'cube',\n  grabCursor: true,\n  autoplay: {\n    delay: 2000,\n    disableOnInteraction: true\n  },\n  cubeEffect: {\n    shadow: true,\n    slideShadows: true,\n    shadowOffset: 20,\n    shadowScale: 0.94\n  },\n  pagination: {\n    el: '.swiper-pagination'\n  }\n}\n\nconst colourOptions1 = [\n  {\n    value: 'Bank',\n    label: 'Bank',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Email',\n    label: 'Email',\n    color: '#0052CC',\n    isFixed: true\n  },\n  {\n    value: 'Card',\n    label: 'Card',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Social Media',\n    label: 'Social Media',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'HealthCare',\n    label: 'HealthCare',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'App',\n    label: 'App',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Goverment Portal',\n    label: 'Goverment Portal',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Office Portal',\n    label: 'Office Portal',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Educational Portal',\n    label: 'Educational Portal',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'E-commerce',\n    label: 'E-commerce',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Finance',\n    label: 'Finance',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  { value: 'Custom', label: 'Custom', color: '#0052CC', isFixed: true }\n]\nclass PasswordVault extends React.Component {\n  state = {\n    isLoading: false,\n    showPass: false,\n    active: '1',\n    modal: false,\n    pwd: '',\n    ptype: '',\n    userName: '',\n    accountNumber: '',\n    description: '',\n    confirmPwd: '',\n    saved: [],\n    selectAssetRef: React.createRef(),\n    confirmOpen: false,\n    idx: '',\n    columns: [\n      {\n        name: 'Alias',\n        selector: 'pwdname',\n        sortable: false,\n        width: '160px'\n      },\n      {\n        name: 'Type',\n        selector: 'ptype',\n        sortable: true,\n        width: '160px'\n      },\n      {\n        name: 'UserName',\n        selector: 'userName',\n        sortable: true,\n        width: '130px',\n        cell: (row) => <span>{row.showPass ? row.userName : '********'}</span>\n      },\n      {\n        name: 'Password',\n        selector: 'pwd',\n        width: '130px',\n        cell: (row) => <span>{row.showPass ? row.pwd : '********'}</span>\n      },\n      {\n        name: 'View/Bin',\n        sortable: false,\n        cell: (row) => (\n          <div\n            style={{\n              justifyContent: 'space-between',\n              display: 'flex',\n              width: '100%'\n            }}\n          >\n            <ViewComponent\n              showPass={this.state.showPass}\n              set={() =>\n                this.setState({\n                  showIdx: row,\n                  modal: !this.state.modal\n                })\n              }\n            />\n            <DeleteComponent row={row} deleteRow={() => this.deletepwd(row)} />\n          </div>\n        ),\n        width: '90px'\n      }\n    ],\n    mobilecolumns: [\n      {\n        name: 'Info',\n        sortable: true,\n        width: '50px',\n        cell: (row) => (\n          <ViewComponent\n            row={row}\n            getData={this.props.getData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        )\n      },\n      {\n        name: 'Name',\n        selector: 'name',\n        sortable: true,\n        minWidth: '50px',\n        cell: (row) => (\n          <p\n            style={{ fontSize: '10px' }}\n            title={row.name}\n            className=\"text-truncate text-bold-500 mb-0\"\n          >\n            {row.name}\n          </p>\n        )\n      },\n      {\n        name: 'Relation',\n        selector: 'relation',\n        maxWidth: '50px',\n        sortable: true,\n        cell: (row) => (\n          <p\n            style={{ fontSize: '10px' }}\n            title={row.relation}\n            className=\"text-truncate text-bold-500 mb-0\"\n          >\n            {row.relation}\n          </p>\n        )\n      },\n      {\n        name: 'Trash',\n        sortable: true,\n        width: '50px',\n        cell: (row) => (\n          <DeleteComponent\n            row={row}\n            getData={this.props.getData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        )\n      }\n    ]\n  }\n\n  update = () => {\n    const logInUserData = JSON.parse(localStorage.getItem('logInUserData'))\n    if (!logInUserData) return\n    axios\n      .post('/backendapi/pwd/list', {\n        user: logInUserData._id\n      },{headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}})\n      .then((res) => {\n        for (let i = 0; i < res.data.length; i = i + 1) {\n          res.data[i].ptype = decryptdata(res.data[i].ptype)\n          res.data[i].pwd = decryptdata(res.data[i].pwd)\n          res.data[i].pwdId = decryptdata(res.data[i].pwdId)\n          res.data[i].pwdname = decryptdata(res.data[i].pwdname)\n          res.data[i].userName = decryptdata(res.data[i].userName)\n        }\n        this.setState({ saved: res.data.reverse() })\n      })\n  }\n\n  componentWillMount() {\n    this.update()\n  }\n\n  togglepwdshow = (value, row) => {\n    const theLocations = this.state.saved.map((l) => Object.assign({}, l))\n    theLocations[row].showPass = value\n    this.setState({ saved: theLocations })\n    this.setState({ showPass: value })\n  }\n\n  toggleModal = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n      confirmPwd: '',\n      showIdx: ''\n    }))\n  }\n\n  toggleModal2 = () => {\n    let passwordShowTime = JSON.parse(\n      localStorage.getItem('logInUserData')\n    ).pwdtime\n    if (passwordShowTime > 10 || passwordShowTime < 2) {\n      passwordShowTime = 3\n    }\n\n    if (this.state.confirmPwd === '123') {\n      const { showIdx, saved } = this.state\n      const index = saved.indexOf(showIdx)\n      this.togglepwdshow(true, index)\n      setTimeout(\n        function () {\n          this.togglepwdshow(false, index)\n          this.setState({ showPass: false })\n        }.bind(this),\n        passwordShowTime ? passwordShowTime * 1000 : 3000\n      )\n      this.setState((prevState) => ({\n        modal: !prevState.modal,\n        confirmPwd: ''\n      }))\n    } else {\n      toast.warning('Wrong Password')\n    }\n  }\n\n  clearSaved = (e) => {\n    this.state.selectAssetRef.current.select.clearValue()\n    this.setState({\n      pwd: '',\n      ptype: '',\n      userName: '',\n      accountNumber: '',\n      description: ''\n    })\n  }\n  addToSaved = (e) => {\n    this.setState({ isLoading: true })\n    e.preventDefault()\n    const { saved, ptype, pwd, userName, accountNumber, description } =\n      this.state\n\n    if (ptype === '' || pwd === '' || accountNumber === '') {\n      toast.warning('Mandatory Field Missing !!')\n      this.setState({ isLoading: false })\n    } else {\n      const newp = {\n        pwdname: accountNumber,\n        pwd,\n        showPass: false,\n        userName: userName,\n        accountNumber: accountNumber,\n        description: description\n      }\n      const newp1 = {\n        showPass: false,\n        pwdname: encryptdata(accountNumber),\n        pwd: encryptdata(pwd),\n        ptype: encryptdata(ptype),\n        userName: encryptdata(userName),\n        user: JSON.parse(localStorage.getItem('logInUserData'))._id\n      }\n\n      saved.push(newp)\n      this.state.selectAssetRef.current.select.clearValue()\n      this.setState({\n        saved,\n        pwd: '',\n        ptype: '',\n        userName: '',\n        accountNumber: '',\n        description: ''\n      })\n      axios.post('/backendapi/savepwd', newp1,{headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}}).then((res) => {\n        this.update()\n        //this.setState({saved:res.data});\n        this.setState({ isLoading: false })\n        toast.success('Password saved successfully')\n      })\n    }\n  }\n\n  deletepwd = (row) => {\n    let { saved } = this.state\n\n    axios.post('/backendapi/pwd/delete', row,{headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}}).then((res) => {\n      //this.setState({saved:res.data});\n\n      toast.warning('Password deleted successfully')\n      saved = saved.filter((ex) => {\n        return ex._id !== row._id\n      })\n      this.setState({ saved })\n    })\n    this.toggleConfirm(false, null)\n  }\n  toggleConfirm = (value, id) => {\n    this.setState({ confirmOpen: value })\n    this.setState({ idx: id })\n  }\n  setPassword = (e) => {\n    const accountTemp = e.target.value.trim()\n    accountTemp\n      ? this.setState({\n          accountNumber: e.target.value\n        })\n      : this.setState({\n          accountNumber: ''\n        })\n  }\n  setUserName = (e) => {\n    const userTemp = e.target.value.trim()\n    userTemp\n      ? this.setState({\n          userName: userTemp\n        })\n      : this.setState({\n          userName: ''\n        })\n  }\n  render() {\n    console.log('*****', this.state.saved)\n    const logInUserData = JSON.parse(localStorage.getItem('logInUserData'))\n    let passwordShowTime = ''\n    if (logInUserData) {\n      passwordShowTime = logInUserData.pwdtime\n      if (passwordShowTime > 10 || passwordShowTime < 2) {\n        passwordShowTime = 3\n      }\n    }\n    return (\n      <React.Fragment>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggleModal}\n          className=\"modal-dialog-centered\"\n          fade={false}\n        >\n          <ModalHeader\n            style={{ border: 'solid 1px' }}\n            toggle={this.toggleModal}\n          >\n            Confirm your identity\n          </ModalHeader>\n          <ModalBody style={{ border: 'solid 1px' }}>\n            Enter your login password to continue\n            <br />\n            <br />\n            <FormGroup>\n              {/* <Label for=\"password\">Password:</Label> */}\n              <Input\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                onChange={(e) => {\n                  this.setState({ confirmPwd: e.target.value })\n                }}\n              />\n            </FormGroup>\n            <Alert className=\"mt-1\" color=\"danger\">\n              <span>\n                Your password will only be visible for {passwordShowTime}{' '}\n                seconds!\n              </span>\n            </Alert>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color={this.state.confirmPwd === '' ? 'primary' : 'success'}\n              disabled={this.state.confirmPwd === ''}\n              onClick={this.toggleModal2}\n            >\n              Accept\n            </Button>{' '}\n          </ModalFooter>\n        </Modal>\n        <h2 className=\"warning spacing\">Password Vault</h2>\n        <Row>\n          <Col lg=\"8\" md=\"6\" sm=\"12\">\n            <div style={{ width: window.screen.width < 500 ? '100%' : '150%' }}>\n              <Row>\n                <Col sm=\"12\">\n                  <TabContent activeTab={this.state.active}>\n                    <TabPane tabId=\"1\">\n                      <Row>\n                        <ToastContainer />\n                        <Col lg=\"8\" md=\"6\" sm=\"12\">\n                          <Card>\n                            <CardHeader>\n                              <CardTitle>Save new Password</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                              <Form>\n                                <Row>\n                                  <Col md=\"6\" sm=\"12\">\n                                    <FormGroup className=\"form-label-group\">\n                                      <Input\n                                        className=\"input-label\"\n                                        type=\"text\"\n                                        name=\"accountNumber\"\n                                        id=\"accountNumberMulti\"\n                                        placeholder=\"Password For *\"\n                                        value={this.state.accountNumber}\n                                        onChange={this.setPassword}\n                                      />\n                                      <Label\n                                        className={\n                                          themeConfig.theme === 'dark'\n                                            ? 'dark-label'\n                                            : 'light-label'\n                                        }\n                                        for=\"accountNumberMulti\"\n                                      >\n                                        Password For *\n                                      </Label>\n                                    </FormGroup>\n                                  </Col>\n                                  <Col md=\"6\" sm=\"12\">\n                                    <FormGroup className=\"form-label-group\">\n                                      <Input\n                                        className=\"input-label\"\n                                        type=\"text\"\n                                        name=\"userName1\"\n                                        id=\"userNameMulti1\"\n                                        placeholder=\"User Name\"\n                                        value={this.state.userName}\n                                        onChange={this.setUserName}\n                                      />\n                                      <Label\n                                        className={\n                                          themeConfig.theme === 'dark'\n                                            ? 'dark-label'\n                                            : 'light-label'\n                                        }\n                                        for=\"userNameMulti\"\n                                      >\n                                        User Name\n                                      </Label>\n                                    </FormGroup>\n\n                                    {/* <FormGroup className=\"form-label-group\">\n                                      <Input\n                                      className='input-label'\n\n                                        type=\"text\"\n                                        name=\"description\"\n                                        id=\"descriptionMulti\"\n                                        placeholder=\"Note\"\n                                        value={this.state.description}\n                                        onChange={(e) => {\n                                          this.setState({\n                                            description: e.target.value,\n                                          });\n                                        }}\n                                      />\n                                      <Label className={\n                                                themeConfig.theme === 'dark'\n                                                  ? 'dark-label'\n                                                  : 'light-label'\n                                              } for=\"descriptionMulti\">Note</Label>\n                                    </FormGroup> */}\n                                  </Col>\n\n                                  <Col md=\"6\" sm=\"12\">\n                                    <FormGroup className=\"form-label-group\">\n                                      <Input\n                                        className=\"input-label\"\n                                        type=\"password\"\n                                        name=\"name\"\n                                        id=\"nameMulti\"\n                                        placeholder=\"Password *\"\n                                        value={this.state.pwd}\n                                        onChange={(e) => {\n                                          this.setState({\n                                            pwd: e.target.value\n                                          })\n                                        }}\n                                      />\n                                      <Label\n                                        className={\n                                          themeConfig.theme === 'dark'\n                                            ? 'dark-label'\n                                            : 'light-label'\n                                        }\n                                        for=\"nameMulti\"\n                                      >\n                                        Password *\n                                      </Label>\n                                    </FormGroup>\n                                  </Col>\n                                  <Col md=\"6\" sm=\"12\">\n                                    <FormGroup className=\"form-label-group\">\n                                      <Select\n                                        className=\"React\"\n                                        classNamePrefix=\"select\"\n                                        // defaultValue={colourOptions1[0]}\n\n                                        ref={this.state.selectAssetRef}\n                                        name=\"color\"\n                                        options={colourOptions1}\n                                        isClearable={true}\n                                        placeholder=\"Select Password Type *\"\n                                        onChange={(e) => {\n                                          this.setState({\n                                            ptype: e ? e.value : ''\n                                          })\n                                        }}\n                                      />\n                                    </FormGroup>\n                                    {/* <FormGroup className=\"form-label-group\">\n                                      <Input\n                                        type=\"text\"\n                                        name=\"description\"\n                                        id=\"descriptionMulti\"\n                                        placeholder=\"Note\"\n                                        value={this.state.description}\n                                        onChange={(e) => {\n                                          this.setState({\n                                            description: e.target.value,\n                                          });\n                                        }}\n                                      />\n                                      <Label for=\"descriptionMulti\">Note</Label>\n                                    </FormGroup> */}\n                                  </Col>\n                                </Row>\n                                <Row>\n                                  <Col md=\"6\" sm=\"12\">\n                                    {/* <FormGroup className=\"form-label-group\">\n                                      <Select\n                                        className=\"React\"\n                                        classNamePrefix=\"select\"\n                                        // defaultValue={colourOptions1[0]}\n\n                                        ref={this.state.selectAssetRef}\n                                        name=\"color\"\n                                        options={colourOptions1}\n                                        isClearable={true}\n                                        placeholder=\"Select Password Type...\"\n                                        onChange={(e) => {\n                                          this.setState({\n                                            ptype: e ? e.value : \"\",\n                                          });\n                                        }}\n                                      />\n                                    </FormGroup>*/}\n                                  </Col>\n                                  <Col md=\"6\" sm=\"12\">\n                                    <FormGroup\n                                      className=\"form-label-group\"\n                                      style={{\n                                        textAlign: 'right',\n                                        marginBottom: '0px'\n                                      }}\n                                    >\n                                      <Button.Ripple\n                                        outline\n                                        color=\"secondary\"\n                                        type=\"reset\"\n                                        className=\"button-label\"\n                                        onClick={(e) => {\n                                          this.clearSaved()\n                                        }}\n                                      >\n                                        Reset\n                                      </Button.Ripple>\n                                      <Button.Ripple\n                                        color=\"warning\"\n                                        type=\"reset\"\n                                        className=\"ml-1 button-label\"\n                                        // disabled={this.state.userName === '' || this.state.pwd === undefined || this.state.pwd === null || this.state.pwd === ''}\n                                        onClick={(e) => {\n                                          !this.state.isLoading &&\n                                            this.addToSaved(e)\n                                        }}\n                                      >\n                                        {this.state.isLoading ? (\n                                          <Spinner color=\"white\" size=\"sm\" />\n                                        ) : (\n                                          'Add'\n                                        )}\n                                      </Button.Ripple>\n                                    </FormGroup>\n                                  </Col>\n                                </Row>\n                              </Form>\n                            </CardBody>\n                          </Card>\n                        </Col>\n                        <Col lg=\"4\" md=\"6\" sm=\"12\">\n                          <div className=\"swipermobile\">\n                            <Swiper {...params}>\n                              <div\n                                style={{\n                                  backgroundImage: `url(${img1})`,\n                                  backgroundSize: 'contain'\n                                }}\n                              ></div>\n                              <div\n                                style={{\n                                  backgroundImage: `url(${img2})`,\n                                  backgroundSize: 'contain'\n                                }}\n                              ></div>\n                              <div\n                                style={{\n                                  backgroundImage: `url(${img3})`,\n                                  backgroundSize: 'contain'\n                                }}\n                              ></div>\n                              <div\n                                style={{\n                                  backgroundImage: `url(${img4})`,\n                                  backgroundSize: 'contain'\n                                }}\n                              ></div>\n                              <div\n                                style={{\n                                  backgroundImage: `url(${img5})`,\n                                  backgroundSize: 'contain'\n                                }}\n                              ></div>\n                            </Swiper>\n                          </div>\n                        </Col>\n                      </Row>\n\n                      <Row>\n                        <ToastContainer />\n                        <Col md=\"8\">\n                          <Card>\n                            <CardHeader>\n                              <CardTitle>Saved Passwords</CardTitle>\n                            </CardHeader>\n                            <CardBody style={{ paddingTop: '0px' }}>\n                              <Form>\n                                {this.state.saved.length === 0 && (\n                                  <h3 style={{ textAlign: 'center' }}>\n                                    No records found!!!\n                                  </h3>\n                                )}\n                                {this.state.saved.length > 0 && (\n                                  <div\n                                    className={`data-list ${\n                                      this.props.thumbView\n                                        ? 'thumb-view'\n                                        : 'list-view'\n                                    }`}\n                                  >\n                                    <DataTable\n                                      width=\"100\"\n                                      data={this.state.saved}\n                                      columns={this.state.columns}\n                                      noHeader\n                                      selectableRows={\n                                        window.screen.width < 600\n                                          ? false\n                                          : false\n                                      }\n                                      responsive\n                                      pointerOnHover\n                                      selectableRowsHighlight\n                                      onSelectedRowsChange={(data) =>\n                                        this.setState({\n                                          selected: data.selectedRows\n                                        })\n                                      }\n                                      customStyles={selectedStyle}\n                                      sortIcon={<ChevronDown />}\n                                    />\n                                  </div>\n                                )}\n                              </Form>\n                            </CardBody>\n                          </Card>\n                        </Col>\n                      </Row>\n                    </TabPane>\n                    <TabPane tabId=\"2\"></TabPane>\n                    <TabPane tabId=\"3\">Coming soon .......!</TabPane>\n                  </TabContent>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default PasswordVault\n","module.exports = __webpack_public_path__ + \"static/media/banner-31.d54fc4be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-25.a47593fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-22.702fed4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-23.b74d240c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-24.d3fb51a8.jpg\";","import axios from 'axios'\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\n//axios.defaults.baseURL = \"http://localhost:5000\";\nexport const getData = (params) => {\n  return async (dispatch) => {\n    let userData = localStorage.getItem('logInUserData')\n      ? JSON.parse(localStorage.getItem('logInUserData'))\n      : {}\n    await axios\n      .get('/backendapi/nominee/list/' + userData._id, {params,headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}})\n      .then((response) => {\n        console.log('aaquib  123', response.data)\n        console.log('aaquib  123', params)\n        dispatch({\n          type: 'GET_DATA',\n          data: response.data,\n          totalPages: response.length,\n          params\n        })\n      })\n  }\n}\n\nexport const getSpendData = (params) => {\n  return async (dispatch) => {\n    let userData = localStorage.getItem('logInUserData')\n      ? JSON.parse(localStorage.getItem('logInUserData'))\n      : {}\n    await axios\n      .get('/backendapi/spend/list/' + userData._id, {params,headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}})\n      .then((response) => {\n        console.log('aaquib  123', response.data)\n        console.log('aaquib  123', params)\n        dispatch({\n          type: 'GET_DATA',\n          data: response.data,\n          totalPages: response.length,\n          params\n        })\n      })\n  }\n}\n\nexport const getInitialData = () => {\n  let userData = localStorage.getItem('logInUserData')\n    ? JSON.parse(localStorage.getItem('logInUserData'))\n    : {}\n  return async (dispatch) => {\n    await axios\n      .get('/backendapi/nominee/list/' + userData._id,{headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}})\n      .then((response) => {\n        dispatch({ type: 'GET_ALL_DATA', data: response.data })\n      })\n  }\n}\n\nexport const getSpendInitialData = () => {\n  let userData = localStorage.getItem('logInUserData')\n    ? JSON.parse(localStorage.getItem('logInUserData'))\n    : {}\n  return async (dispatch) => {\n    await axios\n      .get('/backendapi/spend/list/' + userData._id,{headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}})\n      .then((response) => {\n        dispatch({ type: 'GET_ALL_DATA', data: response.data })\n      })\n  }\n}\n\nexport const filterData = (value) => {\n  return (dispatch) => dispatch({ type: 'FILTER_DATA', value })\n}\n\nexport const deleteData = (obj) => {\n  return (dispatch) => {\n    console.log('DELETE DATA :', obj)\n    axios.post('/backendapi/nominee/delete', obj,{headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}}).then((response) => {\n      dispatch({ type: 'DELETE_DATA', obj })\n    })\n  }\n}\n\nexport const updateData = (obj) => {\n  console.log('Aaquib 123', obj)\n  return (dispatch, getState) => {\n    axios\n      .post('/api/datalist/update-data', {\n        obj\n      },{headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}})\n      .then((response) => {\n        dispatch({ type: 'UPDATE_DATA', obj })\n      })\n  }\n}\n\nexport const addData = (obj) => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post('/api/datalist/add-data', {\n        obj\n      },{headers: {'Authorization':'Bearer '+localStorage.getItem('authtoken')}})\n      .then((response) => {\n        dispatch({ type: 'ADD_DATA', obj })\n        dispatch(getData(params))\n      })\n  }\n}\n","import React from 'react'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\nimport { Home, Settings } from 'react-feather'\nimport { NavLink } from 'react-router-dom'\nclass BreadCrumbs extends React.Component {\n  render() {\n    return (\n      <div className=\"content-header row\">\n        <div className=\"content-header-left col-md-9 col-12 mb-2\">\n          <div className=\"row breadcrumbs-top\">\n            <div className=\"col-12\">\n              {this.props.breadCrumbTitle ? (\n                <h2 className=\"content-header-title float-left mb-0\">\n                  {this.props.breadCrumbTitle}\n                </h2>\n              ) : (\n                ''\n              )}\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\n                <Breadcrumb tag=\"ol\">\n                  <BreadcrumbItem tag=\"li\">\n                    <NavLink to=\"/\">\n                      <Home className=\"align-top\" size={15} />\n                    </NavLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                    {this.props.breadCrumbParent}\n                  </BreadcrumbItem>\n                  {this.props.breadCrumbParent2 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent2}\n                    </BreadcrumbItem>\n                  ) : (\n                    ''\n                  )}\n                  {this.props.breadCrumbParent3 ? (\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\n                      {this.props.breadCrumbParent3}\n                    </BreadcrumbItem>\n                  ) : (\n                    ''\n                  )}\n                  <BreadcrumbItem tag=\"li\" active>\n                    {this.props.breadCrumbActive}\n                  </BreadcrumbItem>\n                </Breadcrumb>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\n          <div className=\"form-group breadcrum-right dropdown\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                color=\"primary\"\n                size=\"sm\"\n                className=\"btn-icon btn-round dropdown-toggle\"\n              >\n                <Settings\n                  size={14}\n                  style={{\n                    left: 0\n                  }}\n                />\n              </DropdownToggle>\n              <DropdownMenu tag=\"ul\" right>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/#/portfolio\">\n                    View Porfolio\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/#/assets/add\">\n                    Add Assets\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/#/liability/add\">\n                    Add Libilties\n                  </NavLink>\n                </DropdownItem>\n                <DropdownItem tag=\"li\">\n                  <NavLink className=\"text-dark w-100\" to=\"/#/nominee/list\">\n                    Manage Nominees\n                  </NavLink>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BreadCrumbs\n","import React from 'react'\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\nimport Chart from 'react-apexcharts'\nimport { HelpCircle } from 'react-feather'\n\nclass GoalOverview extends React.Component {\n  state = {\n    options: {\n      chart: {\n        sparkline: {\n          enabled: true\n        },\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      },\n      colors: [this.props.success],\n      plotOptions: {\n        radialBar: {\n          size: 110,\n          startAngle: -140,\n          endAngle: 150,\n          hollow: {\n            size: '77%'\n          },\n          track: {\n            background: this.props.strokeColor,\n            strokeWidth: '50%'\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              offsetY: 18,\n              color: this.props.strokeColor,\n              fontSize: '4rem'\n            }\n          }\n        }\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          type: 'horizontal',\n          shadeIntensity: 0.5,\n          gradientToColors: ['#00b5b5'],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        lineCap: 'round'\n      }\n    },\n    series: [83]\n  }\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Goal Overview</CardTitle>\n          <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\n        </CardHeader>\n        <CardBody>\n          <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"radialBar\"\n            height={260}\n          />\n        </CardBody>\n        <div className=\"d-flex mt-2\">\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">Completed</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\n          </div>\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">In Progress</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\n          </div>\n        </div>\n      </Card>\n    )\n  }\n}\nexport default GoalOverview\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }));\n});\nTrash.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash.displayName = 'Trash';\nexport default Trash;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\nexport default ModalFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close',\n  charCode: 215\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      charCode = props.charCode,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"charCode\", \"close\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n    closeButton = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('close', cssModule),\n      \"aria-label\": closeAriaLabel\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, closeIcon));\n  }\n\n  return /*#__PURE__*/React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), /*#__PURE__*/React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;"],"sourceRoot":""}