{"version":3,"sources":["views/Spends/DataListSidebar.js","views/Spends/SpendsListConfig.js","views/Spends/SpendsList.js","components/@vuexy/checkbox/CheckboxesVuexy.js","redux/actions/data-list/index.js","components/@vuexy/chips/ChipComponent.js"],"names":["DataListSidebar","state","isLoading","props","relation","relation1","email","address","contact1","contact2","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","obj","data","_id","usage","updateData","addData","Object","keys","dataParams","length","prevProps","prevState","console","log","this","setState","primaryContact","secondaryContact","show","handleSidebar","className","classnames","size","onClick","options","wheelPropagation","thumbView","FormGroup","src","alt","htmlFor","color","type","hidden","onChange","e","URL","createObjectURL","target","files","Button","Label","for","Input","value","placeholder","Ripple","outline","Spinner","Component","axios","defaults","baseURL","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","window","screen","width","currentData","row","deleteRow","CustomHeader","style","marginTop","handleFilter","UncontrolledDropdown","DropdownToggle","total","DataListConfig","totalPages","currentPage","columns","selector","sortable","minWidth","cell","title","item","getSpendData","parsedFilter","handleCurrentData","handleDelete","mobilecolumns","fontSize","maxWidth","amount","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","filterData","handleRowsPerPage","page","undefined","history","push","perPage","boolean","deleteData","urlPrefix","parseInt","toast","error","nominee","userId","localStorage","getItem","JSON","parse","label","date","desc","post","then","res","success","catch","userData","handlePagination","getSpendInitialData","height","Progress","text","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","index","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","icon","dataList","filteredData","connect","SpendsList","Fragment","Row","Col","sm","SpendsListConfig","queryString","location","search","React","CheckBoxesVuexy","defaultChecked","checked","disabled","getData","params","dispatch","a","get","response","getInitialData","getState","Chip","closeChip","closest","remove","avatarImg","avatarText","avatarIcon","avatarColor","closable","closableIcon"],"mappings":"+cAiUeA,E,4MAzTbC,MAAQ,CAENC,UAAW,EAAKC,MAAMD,UACtBE,SAAU,MACVC,UAAW,MACXC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,GAAI,GACJC,KAAM,GACNC,SAAU,QACVC,aAAc,UACdC,MAAO,GACPC,IAAK,GACLC,WAAY,CACVC,SAAU,K,EAIdC,QAAS,E,EAuETC,aAAe,SAACC,GACU,OAApB,EAAKjB,MAAMkB,MACbD,EAAIE,IAAM,EAAKnB,MAAMkB,KAAKC,IAC1BF,EAAIG,MAAQ,EAAKpB,MAAMkB,KAAKE,MAE5B,EAAKpB,MAAMqB,WAAWJ,KAEtB,EAAKF,QAAS,EACd,EAAKf,MAAMsB,QAAQL,IAERM,OAAOC,KAAK,EAAKxB,MAAMyB,YAAYC,QAC5C,EAAK1B,MAAMyB,Y,iEAhFEE,EAAWC,GAC5BC,QAAQC,IAAI,oBAAqBC,KAAK/B,MAAMD,WACpB,OAApBgC,KAAK/B,MAAMkB,MAAoC,OAAnBS,EAAUT,OACpCa,KAAK/B,MAAMkB,KAAKX,KAAOqB,EAAUrB,IACnCwB,KAAKC,SAAS,CAAEzB,GAAIwB,KAAK/B,MAAMkB,KAAKX,KAElCwB,KAAK/B,MAAMkB,KAAKV,OAASoB,EAAUpB,MACrCuB,KAAKC,SAAS,CAAExB,KAAMuB,KAAK/B,MAAMkB,KAAKV,OAEpCuB,KAAK/B,MAAMkB,KAAKjB,WAAa2B,EAAU3B,UACzC8B,KAAKC,SAAS,CAAE/B,SAAU8B,KAAK/B,MAAMkB,KAAKjB,WAExC8B,KAAK/B,MAAMkB,KAAKjB,WAAa2B,EAAU1B,WACzC6B,KAAKC,SAAS,CAAE9B,UAAW6B,KAAK/B,MAAMkB,KAAKjB,WAEzC8B,KAAK/B,MAAMkB,KAAKd,UAAYwB,EAAUxB,SACxC2B,KAAKC,SAAS,CAAE5B,QAAS2B,KAAK/B,MAAMkB,KAAKd,UAEvC2B,KAAK/B,MAAMkB,KAAKf,QAAUyB,EAAUzB,OACtC4B,KAAKC,SAAS,CAAE7B,MAAO4B,KAAK/B,MAAMkB,KAAKf,QAEzC0B,QAAQC,IAAI,wBAAyBC,KAAK/B,MAAMkB,KAAMU,GAClDG,KAAK/B,MAAMkB,KAAKe,iBAAmBL,EAAUvB,UAC/C0B,KAAKC,SAAS,CAAE3B,SAAU0B,KAAK/B,MAAMkB,KAAKe,iBAExCF,KAAK/B,MAAMkB,KAAKgB,mBAAqBN,EAAUtB,UACjDyB,KAAKC,SAAS,CAAE1B,SAAUyB,KAAK/B,MAAMkB,KAAKgB,mBAGxCH,KAAK/B,MAAMkB,KAAKR,eAAiBkB,EAAUlB,cAC7CqB,KAAKC,SAAS,CAAEtB,aAAcqB,KAAK/B,MAAMkB,KAAKR,eAE5CqB,KAAK/B,MAAMkB,KAAKP,QAAUiB,EAAUjB,OACtCoB,KAAKC,SAAS,CAAErB,MAAOoB,KAAK/B,MAAMkB,KAAKP,QAErCoB,KAAK/B,MAAMkB,KAAKN,MAAQgB,EAAUhB,KACpCmB,KAAKC,SAAS,CAAEpB,IAAKmB,KAAK/B,MAAMkB,KAAKN,OAGjB,OAApBmB,KAAK/B,MAAMkB,MAAoC,OAAnBS,EAAUT,MACxCa,KAAKC,SAAS,CACZzB,GAAI,GACJC,KAAM,GAENC,SAAU,MACVC,aAAc,UACdC,MAAO,GACPC,IAAK,GACLC,WAAY,CACVC,SAAU,MAIZiB,KAAKhB,QACPgB,KAAKC,SAAS,CACZzB,GAAI,GACJC,KAAM,GACNC,SAAU,MACVC,aAAc,UACdC,MAAO,GACPC,IAAK,GACLC,WAAY,CACVC,SAAU,MAIhBiB,KAAKhB,QAAS,I,+BAoBN,IAAD,SAC6BgB,KAAK/B,MAAnCmC,EADC,EACDA,KAAMC,EADL,EACKA,cAAelB,EADpB,EACoBA,KADpB,EAILa,KAAKjC,MADDU,EAHC,EAGDA,KAAMP,EAHL,EAGKA,SAAqDW,GAH1D,EAGeH,SAHf,EAGyBC,aAHzB,EAGuCC,MAHvC,EAG8CE,WAH9C,EAG0DD,KAEjE,OACE,yBACEyB,UAAWC,IAAW,oBAAqB,CACzCH,KAAMA,KAGR,yBAAKE,UAAU,qEACb,4BAAc,OAATnB,EAAgB,uBAAyB,iBAC9C,kBAAC,IAAD,CAAGqB,KAAM,GAAIC,QAAS,kBAAMJ,GAAc,GAAO,OAInD,kBAAC,IAAD,CACEC,UAAU,6BACVI,QAAS,CAAEC,kBAAkB,IAE5BX,KAAK/B,MAAM2C,WAAa/B,EAAIc,OAC3B,kBAACkB,EAAA,EAAD,CAAWP,UAAU,eACnB,yBAAKA,UAAU,YAAYQ,IAAKjC,EAAKkC,IAAKtC,IAC1C,yBAAK6B,UAAU,iDACb,2BACEA,UAAU,uBACVU,QAAQ,eACRC,MAAM,WAHR,eAME,2BACEC,KAAK,OACL1C,GAAG,eACH2C,QAAM,EACNC,SAAU,SAACC,GAAD,OACR,EAAKpB,SAAS,CACZpB,IAAKyC,IAAIC,gBAAgBF,EAAEG,OAAOC,MAAM,UAKhD,kBAACC,EAAA,EAAD,CACET,MAAM,cACNR,QAAS,kBAAM,EAAKR,SAAS,CAAEpB,IAAK,OAFtC,kBAQF,KACJ,kBAACgC,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAOC,IAAI,aAAX,QACA,kBAACC,EAAA,EAAD,CACEX,KAAK,OACLY,MAAOrD,EACPsD,YAAY,GACZX,SAAU,SAACC,GAAD,OAAO,EAAKpB,SAAS,CAAExB,KAAM4C,EAAEG,OAAOM,SAChDtD,GAAG,eAGP,kBAACqC,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAOC,IAAI,iBAAX,WACA,kBAACC,EAAA,EAAD,CACEX,KAAK,SACL1C,GAAG,gBACHsD,MAAO5D,EACPkD,SAAU,SAACC,GAAD,OACR,EAAKpB,SAAS,CACZ/B,SAAUmD,EAAEG,OAAOM,MACnB3D,UAAWkD,EAAEG,OAAOM,UAIxB,6CACA,4CACA,yCACA,yCACA,wCACA,wCACA,0CACA,0CACA,wCACA,4CAGU,WAAb5D,GACC,kBAAC2C,EAAA,EAAD,KAEE,kBAACgB,EAAA,EAAD,CACEX,KAAK,OAELa,YAAY,aACZX,SAAU,SAACC,GAAD,OAAO,EAAKpB,SAAS,CAAE9B,UAAWkD,EAAEG,OAAOM,SACrDtD,GAAG,eAIT,kBAACqC,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAOC,IAAI,aAAX,UACA,kBAACC,EAAA,EAAD,CACEX,KAAK,OACLY,MAAO9B,KAAKjC,MAAMK,MAClB2D,YAAY,sBACZX,SAAU,SAACC,GAAD,OAAO,EAAKpB,SAAS,CAAE7B,MAAOiD,EAAEG,OAAOM,SACjDtD,GAAG,eAGP,kBAACqC,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAOC,IAAI,cAAX,YACA,kBAACC,EAAA,EAAD,CACEX,KAAK,SACLY,MAAO9B,KAAKjC,MAAMO,SAClB8C,SAAU,SAACC,GAAD,OAAO,EAAKpB,SAAS,CAAE3B,SAAU+C,EAAEG,OAAOM,SACpDtD,GAAG,aACHuD,YAAY,wBAIhB,kBAAClB,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CAAOC,IAAI,aAAX,iBACA,kBAACC,EAAA,EAAD,CACEX,KAAK,WACLY,MAAO9B,KAAKjC,MAAMM,QAClB0D,YAAY,GACZX,SAAU,SAACC,GAAD,OAAO,EAAKpB,SAAS,CAAE5B,QAASgD,EAAEG,OAAOM,SACnDtD,GAAG,eA+BNwB,KAAK/B,MAAM2C,WAAa/B,EAAIc,QAAU,EACrC,2BACEW,UAAU,kBACVU,QAAQ,eACRC,MAAM,WAHR,eAME,2BACEC,KAAK,OACL1C,GAAG,eACH2C,QAAM,EACNC,SAAU,SAACC,GAAD,OACR,EAAKpB,SAAS,CAAEpB,IAAKyC,IAAIC,gBAAgBF,EAAEG,OAAOC,MAAM,UAI5D,MAEN,yBAAKnB,UAAU,sFACb,kBAACoB,EAAA,EAAOM,OAAR,CAEE1B,UAAU,OACVW,MAAM,YACNgB,SAAO,EACPxB,QAAS,kBAAMJ,GAAc,GAAO,KALtC,UASA,kBAACqB,EAAA,EAAOM,OAAR,CACEf,MAAM,UACNC,KAAK,QACLZ,UAAU,iBACVG,QAAS,kBAAM,EAAKxB,aAAa,EAAKlB,SAErCiC,KAAK/B,MAAMD,WAAa,kBAACkE,EAAA,EAAD,CAASjB,MAAM,SAAST,KAAK,OAAS,IACrD,OAATrB,EACGa,KAAK/B,MAAMD,UACT,cACA,SACFgC,KAAK/B,MAAMD,UACX,YACA,a,GAnTcmE,a,iDCoC9BC,IAAMC,SAASC,QAAU,kCAGzB,IAAMC,EAAa,CACjB,UAAW,UACXC,UAAW,UACXC,QAAS,UACTC,SAAU,UAGNC,EAAgB,CACpBC,KAAM,CACJC,sBAAuB,CACrBC,gBAAiB,wBACjB7B,MAAO,qBACP8B,UAAW,+BACX,UAAW,CACTC,UAAW,iCAMbC,EAAmB,SAAChF,GACxB,OACE,yBAAKqC,UAAU,oBACb,kBAAC,IAAD,CACEA,UAAU,sBACVE,KAAM0C,OAAOC,OAAOC,MAAQ,IAAM,GAAK,GACvC3C,QAAS,WACP,OAAOxC,EAAMoF,YAAYpF,EAAMqF,QAGlCJ,OAAOC,OAAOC,MAAQ,KACrB,kBAAC,IAAD,CACE9C,UAAU,iBACVE,KAAM0C,OAAOC,OAAOC,MAAQ,IAAM,GAAK,GACvC3C,QAAS,WACPxC,EAAMsF,UAAUtF,EAAMqF,UAQ5BE,EAAe,SAACvF,GACpB,OACE,yBAAKqC,UAAU,6DACb,yBAAKA,UAAU,iCACb,kBAACoB,EAAA,EAAD,CACEpB,UAAU,cACVW,MAAM,UACNwC,MAAO,CAAEC,UAAW,OACpBjD,QAAS,kBAAMxC,EAAMoC,eAAc,GAAM,IACzC4B,SAAO,GAEP,kBAAC,IAAD,CAAMzB,KAAM,KACZ,0BAAMF,UAAU,gBAAhB,mBAGJ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,+BACb,kBAACuB,EAAA,EAAD,CACEX,KAAK,OACLuC,MAAO,CAAEC,UAAW,MAAON,MAAO,IAClChC,SAAU,SAACC,GAAD,OAAOpD,EAAM0F,aAAatC,IACpCU,YAAY,wBAIlB,yBAAKzB,UAAU,+CACb,kBAACsD,EAAA,EAAD,CACEtD,UAAU,iDACVmD,MAAO,CAAEC,UAAW,QAEpB,kBAACG,EAAA,EAAD,CAAgB5C,MAAM,GAAGX,UAAU,iBACjC,0BAAMA,UAAU,sBAAhB,iBAEiBrC,EAAM6F,YAuC7BC,E,4MAsBJhG,MAAQ,CACNoB,KAAM,GACN6E,WAAY,EACZC,YAAa,EACbC,QAAS,CACP,CACEzF,KAAM,OACN0F,SAAU,OACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAChB,GAAD,OACJ,uBAAGiB,MAAOjB,EAAIkB,KAAMlE,UAAU,oCAC3BgD,EAAIkB,QAIX,CACE/F,KAAM,QACN0F,SAAU,QACVC,UAAU,GAEZ,CACE3F,KAAM,OACN4F,SAAU,QACVF,SAAU,OACVC,UAAU,GASZ,CACE3F,KAAM,SACN0F,SAAU,SACVE,SAAU,QACVD,UAAU,GAGZ,CACE3F,KAAM,cACN0F,SAAU,OACVE,SAAU,QACVD,UAAU,GAIZ,CACE3F,KAAM,UACN2F,UAAU,EACVE,KAAM,SAAChB,GAAD,OACJ,kBAAC,EAAD,CACEA,IAAKA,EACLmB,aAAc,EAAKxG,MAAMwG,aACzBC,aAAc,EAAKzG,MAAMyG,aACzBrB,YAAa,EAAKsB,kBAClBpB,UAAW,EAAKqB,kBAKxBC,cAAe,CACb,CACEpG,KAAM,OACN0F,SAAU,OACVC,UAAU,EACVC,SAAU,OACVC,KAAM,SAAChB,GAAD,OACJ,uBACEG,MAAO,CAAEqB,SAAU,QACnBP,MAAOjB,EAAIkB,KACXlE,UAAU,oCAETgD,EAAIkB,QAIX,CACE/F,KAAM,SACN0F,SAAU,SACVY,SAAU,OACVX,UAAU,EACVE,KAAM,SAAChB,GAAD,OACJ,uBACEG,MAAO,CAAEqB,SAAU,QACnBP,MAAOjB,EAAI0B,OACX1E,UAAU,oCAETgD,EAAI0B,UAKX,CACEvG,KAAM,GACN2F,UAAU,EACVhB,MAAO,OACPkB,KAAM,SAAChB,GAAD,OACJ,kBAAC,EAAD,CACEA,IAAKA,EACLmB,aAAc,EAAKxG,MAAMwG,aACzBC,aAAc,EAAKzG,MAAMyG,aACzBrB,YAAa,EAAKsB,kBAClBpB,UAAW,EAAKqB,kBAKxBK,QAAS,GACTnD,MAAO,GACPoD,YAAa,EACbC,SAAS,EACT9B,YAAa,KACb+B,SAAU,GACVC,aAAc,EACdC,UAAW,GACXtG,OAAQ,GACRhB,WAAW,G,EAGb4C,UAAY,EAAK3C,MAAM2C,U,EAiFvB+C,aAAe,SAACtC,GACd,EAAKpB,SAAS,CAAE6B,MAAOT,EAAEG,OAAOM,QAChC,EAAK7D,MAAMsH,WAAWlE,EAAEG,OAAOM,Q,EAGjC0D,kBAAoB,SAAC1D,GAAW,IAAD,EACQ,EAAK7D,MAApCyG,EADuB,EACvBA,aAAcD,EADS,EACTA,aAChBgB,OAA6BC,IAAtBhB,EAAae,KAAqBf,EAAae,KAAO,EACjEE,IAAQC,KAAR,6BAAmCH,EAAnC,oBAAmD3D,IACnD,EAAK7B,SAAS,CAAEiF,YAAapD,IAC7B2C,EAAa,CAAEgB,KAAMf,EAAae,KAAMI,QAAS/D,K,EAGnDzB,cAAgB,SAACyF,GAA6B,IAApB9G,EAAmB,wDAC3C,EAAKiB,SAAS,CAAEkF,QAASW,KACV,IAAX9G,GAAiB,EAAKiB,SAAS,CAAEoD,YAAa,KAAMrE,QAAQ,K,EAGlE4F,aAAe,SAACtB,GAGd,GAFA,EAAKrF,MAAM8H,WAAWzC,GACtB,EAAKrF,MAAMwG,aAAa,EAAKxG,MAAMyG,cAC/B,EAAK3G,MAAMoB,KAAKQ,OAAS,IAAM,EAAG,CACpC,IAAIqG,EAAY,EAAK/H,MAAM2C,UACvB,yBACA,mBACJ+E,IAAQC,KAAR,UACKI,EADL,0BACgCC,SAC5B,EAAKhI,MAAMyG,aAAae,KAAO,GAFnC,oBAGe,EAAKxH,MAAMyG,aAAamB,UAEvC,EAAK5H,MAAMwG,aAAa,CACtBgB,KAAM,EAAKxH,MAAMyG,aAAae,KAAO,EACrCI,QAAS,EAAK5H,MAAMyG,aAAamB,Y,EAKvCtG,QAAU,SAACL,GACT,GACe,KAAbA,EAAIT,MACc,KAAlBS,EAAIf,WACU,KAAde,EAAId,OACa,KAAjBc,EAAIZ,UACY,KAAhBY,EAAIb,QAEJ6H,IAAMC,MAAM,yCACP,CACL,EAAKlG,SAAS,CAAEjC,WAAW,IAC3B8B,QAAQC,IAAI,SAAUb,GACtB,IAGMkH,EAAU,CACdC,QAJaC,aAAaC,QAAQ,iBAChCC,KAAKC,MAAMH,aAAaC,QAAQ,kBAChC,IAEenH,IACjBoF,KAAMtF,EAAIT,KACViI,MAAOxH,EAAIf,UACXwI,KAAMzH,EAAId,MACV4G,OAAQ9F,EAAIZ,SACZsI,KAAM1H,EAAIb,SAEZ+D,IACGyE,KAAK,wBAAyBT,GAC9BU,MAAK,SAACC,GACL,EAAK9G,SAAS,CAAEjC,WAAW,IAC3BkI,IAAMc,QAAQ,4BACd,EAAK3G,eAAc,GAAO,GAE1B,EAAKpC,MAAMwG,aAAa,EAAKxG,MAAMyG,iBAEpCuC,OAAM,SAAC5F,GACN,EAAKpB,SAAS,CAAEjC,WAAW,IAC3BkI,IAAMC,MAAM,6CAGhBrG,QAAQC,IAAI,SAAUqG,K,EAG1B9G,WAAa,SAACJ,GACZ,GACe,KAAbA,EAAIT,MACc,KAAlBS,EAAIf,WACU,KAAde,EAAId,OACa,KAAjBc,EAAIZ,UACY,KAAhBY,EAAIb,QAEJ6H,IAAMC,MAAM,yCACP,CACL,EAAKlG,SAAS,CAAEjC,WAAW,IAC3B8B,QAAQC,IAAI,SAAUb,GACtB,IAAIgI,EAAWZ,aAAaC,QAAQ,iBAChCC,KAAKC,MAAMH,aAAaC,QAAQ,kBAChC,GACEH,EAAU,CACdhH,IAAKF,EAAIE,IACTiH,OAAQa,EAAS9H,IACjBoF,KAAMtF,EAAIT,KACViI,MAAOxH,EAAIf,UACXwI,KAAMzH,EAAId,MACV4G,OAAQ9F,EAAIZ,SACZsI,KAAM1H,EAAIb,SAEZ+D,IACGyE,KAAK,2BAA4BT,GACjCU,MAAK,SAACC,GACL,EAAK9G,SAAS,CAAEjC,WAAW,IAC3BkI,IAAMc,QAAQ,8BACd,EAAK3G,eAAc,GAAO,GAE1B,EAAKpC,MAAMwG,aAAa,EAAKxG,MAAMyG,iBAEpCuC,OAAM,SAAC5F,GACN,EAAKpB,SAAS,CAAEjC,WAAW,IAC3BkI,IAAMC,MAAM,+CAGhBrG,QAAQC,IAAI,SAAUqG,K,EAG1BzB,kBAAoB,SAACzF,GACnBA,EAAIT,KAAOS,EAAIsF,KACftF,EAAIf,UAAYe,EAAIwH,MACpBxH,EAAIhB,SAAWgB,EAAIwH,MACnBxH,EAAId,MAAQc,EAAIyH,KAChBzH,EAAIb,QAAUa,EAAI0H,KAClB1H,EAAIgB,eAAiBhB,EAAI8F,OAEzB,EAAK/E,SAAS,CAAEoD,YAAanE,IAE7B,EAAKmB,eAAc,I,EAGrB8G,iBAAmB,SAAC1B,GAAU,IAAD,EACU,EAAKxH,MAApCyG,EADqB,EACrBA,aAAcD,EADO,EACPA,aAChBoB,OAAmCH,IAAzBhB,EAAamB,QAAwBnB,EAAamB,QAAU,EACtEG,GAAY,EAAK/H,MAAM2C,UACvB,oBAEJ+E,IAAQC,KAAR,UACKI,EADL,0BACgCP,EAAKL,SAAW,EADhD,oBAC6DS,IAE7DpB,EAAa,CAAEgB,KAAMA,EAAKL,SAAW,EAAGS,QAASA,IACjD,EAAK5F,SAAS,CAAEgE,YAAawB,EAAKL,Y,kEA3NlCpF,KAAK/B,MAAMwG,aAAazE,KAAK/B,MAAMyG,cACnC1E,KAAK/B,MAAMmJ,wB,yCAGMxH,EAAWC,GAAY,IAAD,OACvC,GAAIG,KAAKY,UAAW,CAClBZ,KAAKY,WAAY,EACjB,IAAIsD,EAAU,CACZ,CACEzF,KAAM,QACN0F,SAAU,MACVE,SAAU,QACVC,KAAM,SAAChB,GAAD,OAAS,yBAAKxC,IAAKwC,EAAIzE,IAAKwI,OAAO,MAAMtG,IAAKuC,EAAI7E,SAE1D,CACEA,KAAM,OACN0F,SAAU,OACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAChB,GAAD,OACJ,uBAAGiB,MAAOjB,EAAI7E,KAAM6B,UAAU,oCAC3BgD,EAAI7E,QAIX,CACEA,KAAM,WACN0F,SAAU,WACVC,UAAU,GAEZ,CACE3F,KAAM,aACN0F,SAAU,aACVC,UAAU,EACVE,KAAM,SAAChB,GAAD,OACJ,kBAACgE,EAAA,EAAD,CACEhH,UAAU,aACVW,MAAOqC,EAAIxE,WAAWmC,MACtBa,MAAOwB,EAAIxE,WAAWC,aAI5B,CACEN,KAAM,eACN0F,SAAU,eACVC,UAAU,EACVE,KAAM,SAAChB,GAAD,OACJ,kBAAC,IAAD,CACEhD,UAAU,MACVW,MAAOsB,EAAWe,EAAI3E,cACtB4I,KAAMjE,EAAI3E,iBAIhB,CACEF,KAAM,QACN0F,SAAU,QACVC,UAAU,EACVE,KAAM,SAAChB,GAAD,iBAAaA,EAAI1E,SAEzB,CACEH,KAAM,UACN2F,UAAU,EACVE,KAAM,SAAChB,GAAD,OACJ,kBAAC,EAAD,CACEA,IAAKA,EACLmB,aAAc,EAAKxG,MAAMwG,aACzBC,aAAc,EAAKzG,MAAMyG,aACzBrB,YAAa,EAAKsB,kBAClBpB,UAAW,EAAKqB,kBAKxB5E,KAAKC,SAAS,CAAEiE,e,+BAoJV,IAAD,SAYHlE,KAAKjC,MAVPmG,EAFK,EAELA,QACA/E,EAHK,EAGLA,KACA8F,EAJK,EAILA,QAEAnD,GANK,EAKLkC,WALK,EAMLlC,OACAoD,EAPK,EAOLA,YACA7B,EARK,EAQLA,YACA8B,EATK,EASLA,QACAE,EAVK,EAULA,aACAC,EAXK,EAWLA,UAEF,OACE,yBACEhF,UAAS,oBACPN,KAAK/B,MAAM2C,UAAY,aAAe,cAGxC,kBAAC,IAAD,CACEwC,MAAM,MACNc,QACEhB,OAAOC,OAAOC,MAAQ,IAAMpD,KAAKjC,MAAM8G,cAAgBX,EAEzD/E,KAAM2C,EAAMnC,OAASsF,EAAU9F,EAoB/BqI,UAAQ,EACRC,WAAS,EACTC,iBAAgBxE,OAAOC,OAAOC,MAAQ,KACtCuE,YAAU,EACVC,gBAAc,EACdC,yBAAuB,EACvBC,qBAAsB,SAAC3I,GAAD,OACpB,EAAKc,SAAS,CAAEmF,SAAUjG,EAAK4I,gBAEjCC,aAAcrF,EACdsF,mBACE,kBAAC,EAAD,CACE5H,cAAeL,KAAKK,cACpBsD,aAAc3D,KAAK2D,aACnB6B,kBAAmBxF,KAAKwF,kBACxBN,YAAaA,EACbpB,MAAOuB,EACP6C,MAAO5C,IAGX6C,SAAU,kBAAC,IAAD,MACVC,wBAAyBC,IACzBC,6BAA8B,CAC5BrH,MAAO,UACPsH,KAAM,kBAAC,IAAD,CAAOjI,UAAU,UAAUE,KAAM,KACvCkG,MAAO,GACPlG,KAAM,QAGV,kBAAC,EAAD,CACEJ,KAAM+E,EACNhG,KAAMkE,EACN/D,WAAYU,KAAKV,WACjBC,QAASS,KAAKT,QACdvB,UAAWgC,KAAKjC,MAAMC,UACtBqC,cAAeL,KAAKK,cACpBO,UAAWZ,KAAK/B,MAAM2C,UACtB6D,aAAczE,KAAK/B,MAAMwG,aACzB/E,WAAYM,KAAK/B,MAAMyG,aACvB1F,OAAQgB,KAAKjC,MAAMiB,SAErB,yBACEsB,UAAWC,IAAW,oBAAqB,CACzCH,KAAM+E,IAER1E,QAAS,kBAAM,EAAKJ,eAAc,GAAO,U,gDAzcjBpC,EAAOF,GACrC,OACEE,EAAMuK,SAASrJ,KAAKQ,SAAW5B,EAAMoB,KAAKQ,QAC1C5B,EAAMkG,cAAgBhG,EAAMyG,aAAae,KAElC,CACLtG,KAAMlB,EAAMuK,SAASrJ,KACrB8F,QAAShH,EAAMuK,SAASC,aAExBzE,WAAY/F,EAAMuK,SAASrJ,KAAKQ,OAAS,EACzCsE,YAAagC,SAAShI,EAAMyG,aAAae,MAAQ,EACjDP,YAAae,SAAShI,EAAMyG,aAAamB,SACzCR,aAAcpH,EAAMuK,SAASnD,aAC7BC,UAAWrH,EAAMuK,SAASlD,WAKvB,S,GAnBkBnD,aAudduG,eANS,SAAC3K,GACvB,MAAO,CACLyK,SAAUzK,EAAMyK,YAIoB,CACtC/D,iBACAsB,eACAzG,eACAC,YACA6H,wBACA7B,gBANamD,CAOZ3E,G,kBC1nBG4E,E,uKAEF,OACE,kBAAC,IAAMC,SAAP,KACE,wBAAItI,UAAU,WAAd,gBAMA,kBAACuI,EAAA,EAAD,KACE,kBAAC,IAAD,MACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACC,EAAD,CACEtE,aAAcuE,IAAYxC,MAAMzG,KAAK/B,MAAMiL,SAASC,iB,GAdzCC,IAAMjH,WAuBhBwG,a,qFC3BTU,E,uKAEF,OACE,yBACE/I,UAAS,0BACPN,KAAK/B,MAAMqC,UAAYN,KAAK/B,MAAMqC,UAAY,GADvC,wBAEON,KAAK/B,MAAMgD,QAE3B,2BACEC,KAAK,WACLoI,eAAgBtJ,KAAK/B,MAAMqL,eAC3BC,QAASvJ,KAAK/B,MAAMsL,QACpBzH,MAAO9B,KAAK/B,MAAM6D,MAClB0H,SAAUxJ,KAAK/B,MAAMuL,SACrB/I,QAAST,KAAK/B,MAAMwC,QAAUT,KAAK/B,MAAMwC,QAAU,KACnDW,SAAUpB,KAAK/B,MAAMmD,SAAWpB,KAAK/B,MAAMmD,SAAW,OAExD,0BACEd,UAAS,kCACPN,KAAK/B,MAAMuC,KAAOR,KAAK/B,MAAMuC,KAAO,OAGtC,0BAAMF,UAAU,sBAAsBN,KAAK/B,MAAMsK,OAEnD,8BAAOvI,KAAK/B,MAAMyI,Y,GAxBI0C,IAAMjH,WA8BrBkH,O,sXC9BfjH,IAAMC,SAASC,QAAU,kCAElB,IAAMmH,EAAU,SAACC,GACtB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACD1C,EAAWZ,aAAaC,QAAQ,iBAChCC,KAAKC,MAAMH,aAAaC,QAAQ,kBAChC,GAHC,SAICnE,IACHyH,IAAI,4BAA8B3C,EAAS9H,IAAKsK,GAChD5C,MAAK,SAACgD,GACLhK,QAAQC,IAAI,cAAe+J,EAAS3K,MACpCW,QAAQC,IAAI,cAAe2J,GAC3BC,EAAS,CACPzI,KAAM,WACN/B,KAAM2K,EAAS3K,KACf6E,WAAY8F,EAASnK,OACrB+J,cAbD,2CAAP,uDAmBWjF,EAAe,SAACiF,GAC3B,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACD1C,EAAWZ,aAAaC,QAAQ,iBAChCC,KAAKC,MAAMH,aAAaC,QAAQ,kBAChC,GAHC,SAICnE,IACHyH,IAAI,0BAA4B3C,EAAS9H,IAAKsK,GAC9C5C,MAAK,SAACgD,GACLhK,QAAQC,IAAI,cAAe+J,EAAS3K,MACpCW,QAAQC,IAAI,cAAe2J,GAC3BC,EAAS,CACPzI,KAAM,WACN/B,KAAM2K,EAAS3K,KACf6E,WAAY8F,EAASnK,OACrB+J,cAbD,2CAAP,uDAmBWK,EAAiB,WAC5B,IAAI7C,EAAWZ,aAAaC,QAAQ,iBAChCC,KAAKC,MAAMH,aAAaC,QAAQ,kBAChC,GACJ,8CAAO,WAAOoD,GAAP,SAAAC,EAAA,sEACCxH,IACHyH,IAAI,4BAA8B3C,EAAS9H,KAC3C0H,MAAK,SAACgD,GACLH,EAAS,CAAEzI,KAAM,eAAgB/B,KAAM2K,EAAS3K,UAJ/C,2CAAP,uDASWiI,EAAsB,WACjC,IAAIF,EAAWZ,aAAaC,QAAQ,iBAChCC,KAAKC,MAAMH,aAAaC,QAAQ,kBAChC,GACJ,8CAAO,WAAOoD,GAAP,SAAAC,EAAA,sEACCxH,IACHyH,IAAI,0BAA4B3C,EAAS9H,KACzC0H,MAAK,SAACgD,GACLH,EAAS,CAAEzI,KAAM,eAAgB/B,KAAM2K,EAAS3K,UAJ/C,2CAAP,uDASWoG,EAAa,SAACzD,GACzB,OAAO,SAAC6H,GAAD,OAAcA,EAAS,CAAEzI,KAAM,cAAeY,YAG1CiE,EAAa,SAAC7G,GACzB,OAAO,SAACyK,GACN7J,QAAQC,IAAI,gBAAiBb,GAC7BkD,IAAMyE,KAAK,6BAA8B3H,GAAK4H,MAAK,SAACgD,GAClDH,EAAS,CAAEzI,KAAM,cAAehC,aAKzBI,EAAa,SAACJ,GAEzB,OADAY,QAAQC,IAAI,aAAcb,GACnB,SAACyK,EAAUK,GAChB5H,IACGyE,KAAK,4BAA6B,CACjC3H,QAED4H,MAAK,SAACgD,GACLH,EAAS,CAAEzI,KAAM,cAAehC,aAK3BK,EAAU,SAACL,GACtB,OAAO,SAACyK,EAAUK,GAChB,IAAIN,EAASM,IAAWxB,SAASkB,OACjCtH,IACGyE,KAAK,yBAA0B,CAC9B3H,QAED4H,MAAK,SAACgD,GACLH,EAAS,CAAEzI,KAAM,WAAYhC,QAC7ByK,EAASF,EAAQC,U,8FCtGnBO,E,4MACJC,UAAY,SAAC7I,GACXA,EAAEG,OAAO2I,QAAQ,SAASC,U,uDAGlB,IAAD,OACP,OACE,yBACE9J,UAAS,eAAUN,KAAK/B,MAAMqC,UAArB,YACPN,KAAK/B,MAAMgD,MAAX,eAA2BjB,KAAK/B,MAAMgD,OAAU,OAGlD,yBAAKX,UAAU,cACVN,KAAK/B,MAAMoM,WAAarK,KAAK/B,MAAMqM,aACpCtK,KAAK/B,MAAMoM,WAAarK,KAAK/B,MAAMsM,WACnC,yBACEjK,UAAS,iBACPN,KAAK/B,MAAMuM,YAAX,aAA+BxK,KAAK/B,MAAMuM,aAAgB,OAG5D,yBAAKlK,UAAU,kBACZN,KAAK/B,MAAMqM,WAAatK,KAAK/B,MAAMqM,WAAa,KAChDtK,KAAK/B,MAAMsM,WAAavK,KAAK/B,MAAMsM,WAAa,OAGnDvK,KAAK/B,MAAMoM,UACb,yBAAK/J,UAAU,UACb,yBACEQ,IAAKd,KAAK/B,MAAMoM,UAChBtJ,IAAI,UACJsG,OAAO,KACPjE,MAAM,QAGR,KACJ,yBAAK9C,UAAU,aAAaN,KAAK/B,MAAMsJ,MACtCvH,KAAK/B,MAAMwM,SACV,yBAAKnK,UAAU,gBAAgBG,QAAS,SAACY,GAAD,OAAO,EAAK6I,UAAU7I,KAC3DrB,KAAK/B,MAAMyM,aAAe1K,KAAK/B,MAAMyM,aAAe,kBAAC,IAAD,OAErD,W,GAxCKtB,IAAMjH,WA+CV8H,O","file":"static/js/25.ae9dd1f6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Label, Input, FormGroup, Button } from 'reactstrap'\r\nimport { X } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { Spinner } from 'reactstrap'\r\nimport classnames from 'classnames'\r\n\r\nclass DataListSidebar extends Component {\r\n  state = {\r\n    //isLoading: props.isLoading,\r\n    isLoading: this.props.isLoading,\r\n    relation: 'Son',\r\n    relation1: 'Son',\r\n    email: '',\r\n    address: '',\r\n    contact1: '',\r\n    contact2: '',\r\n    id: '',\r\n    name: '',\r\n    category: 'Audio',\r\n    order_status: 'pending',\r\n    price: '',\r\n    img: '',\r\n    popularity: {\r\n      popValue: ''\r\n    }\r\n  }\r\n\r\n  addNew = false\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log('aaaaaaaaaaaaaaaaa', this.props.isLoading)\r\n    if (this.props.data !== null && prevProps.data === null) {\r\n      if (this.props.data.id !== prevState.id) {\r\n        this.setState({ id: this.props.data.id })\r\n      }\r\n      if (this.props.data.name !== prevState.name) {\r\n        this.setState({ name: this.props.data.name })\r\n      }\r\n      if (this.props.data.relation !== prevState.relation) {\r\n        this.setState({ relation: this.props.data.relation })\r\n      }\r\n      if (this.props.data.relation !== prevState.relation1) {\r\n        this.setState({ relation1: this.props.data.relation })\r\n      }\r\n      if (this.props.data.address !== prevState.address) {\r\n        this.setState({ address: this.props.data.address })\r\n      }\r\n      if (this.props.data.email !== prevState.email) {\r\n        this.setState({ email: this.props.data.email })\r\n      }\r\n      console.log('hhhhhhhhhhhhhhhhhhhhh', this.props.data, prevState)\r\n      if (this.props.data.primaryContact !== prevState.contact1) {\r\n        this.setState({ contact1: this.props.data.primaryContact })\r\n      }\r\n      if (this.props.data.secondaryContact !== prevState.contact2) {\r\n        this.setState({ contact2: this.props.data.secondaryContact })\r\n      }\r\n\r\n      if (this.props.data.order_status !== prevState.order_status) {\r\n        this.setState({ order_status: this.props.data.order_status })\r\n      }\r\n      if (this.props.data.price !== prevState.price) {\r\n        this.setState({ price: this.props.data.price })\r\n      }\r\n      if (this.props.data.img !== prevState.img) {\r\n        this.setState({ img: this.props.data.img })\r\n      }\r\n    }\r\n    if (this.props.data === null && prevProps.data !== null) {\r\n      this.setState({\r\n        id: '',\r\n        name: '',\r\n\r\n        category: 'Son',\r\n        order_status: 'pending',\r\n        price: '',\r\n        img: '',\r\n        popularity: {\r\n          popValue: ''\r\n        }\r\n      })\r\n    }\r\n    if (this.addNew) {\r\n      this.setState({\r\n        id: '',\r\n        name: '',\r\n        category: 'Son',\r\n        order_status: 'pending',\r\n        price: '',\r\n        img: '',\r\n        popularity: {\r\n          popValue: ''\r\n        }\r\n      })\r\n    }\r\n    this.addNew = false\r\n  }\r\n\r\n  handleSubmit = (obj) => {\r\n    if (this.props.data !== null) {\r\n      obj._id = this.props.data._id\r\n      obj.usage = this.props.data.usage\r\n\r\n      this.props.updateData(obj)\r\n    } else {\r\n      this.addNew = true\r\n      this.props.addData(obj)\r\n    }\r\n    let params = Object.keys(this.props.dataParams).length\r\n      ? this.props.dataParams\r\n      : { page: 1, perPage: 4 }\r\n    //this.props.handleSidebar(false, true)\r\n    //this.props.getData(params)\r\n  }\r\n\r\n  render() {\r\n    let { show, handleSidebar, data } = this.props\r\n\r\n    let { name, relation, category, order_status, price, popularity, img } =\r\n      this.state\r\n    return (\r\n      <div\r\n        className={classnames('data-list-sidebar', {\r\n          show: show\r\n        })}\r\n      >\r\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\r\n          <h4>{data !== null ? 'UPDATE SPEND DETAILS' : 'ADD NEW SPEND'}</h4>\r\n          <X size={20} onClick={() => handleSidebar(false, true)} />\r\n        </div>\r\n        {/* {this.props.isLoading && <Spinner color=\"primary\" />}\r\n        {!this.props.isLoading && */}\r\n        <PerfectScrollbar\r\n          className=\"data-list-fields px-2 mt-3\"\r\n          options={{ wheelPropagation: false }}\r\n        >\r\n          {this.props.thumbView && img.length ? (\r\n            <FormGroup className=\"text-center\">\r\n              <img className=\"img-fluid\" src={img} alt={name} />\r\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\r\n                <label\r\n                  className=\"btn btn-flat-primary\"\r\n                  htmlFor=\"update-image\"\r\n                  color=\"primary\"\r\n                >\r\n                  Upload Image\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"update-image\"\r\n                    hidden\r\n                    onChange={(e) =>\r\n                      this.setState({\r\n                        img: URL.createObjectURL(e.target.files[0])\r\n                      })\r\n                    }\r\n                  />\r\n                </label>\r\n                <Button\r\n                  color=\"flat-danger\"\r\n                  onClick={() => this.setState({ img: '' })}\r\n                >\r\n                  Remove Image\r\n                </Button>\r\n              </div>\r\n            </FormGroup>\r\n          ) : null}\r\n          <FormGroup>\r\n            <Label for=\"data-name\">Item</Label>\r\n            <Input\r\n              type=\"text\"\r\n              value={name}\r\n              placeholder=\"\"\r\n              onChange={(e) => this.setState({ name: e.target.value })}\r\n              id=\"data-name\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-category\">Label *</Label>\r\n            <Input\r\n              type=\"select\"\r\n              id=\"data-category\"\r\n              value={relation}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  relation: e.target.value,\r\n                  relation1: e.target.value\r\n                })\r\n              }\r\n            >\r\n              <option>Groceries</option>\r\n              <option>Cigretes</option>\r\n              <option>Drink</option>\r\n              <option>Party</option>\r\n              <option>Fees</option>\r\n              <option>Rent</option>\r\n              <option>Travel</option>\r\n              <option>Snacks</option>\r\n              <option>Fuel</option>\r\n              <option>others</option>\r\n            </Input>\r\n          </FormGroup>\r\n          {relation === 'others' && (\r\n            <FormGroup>\r\n              {/* <Label for=\"data-name\">Relation </Label> */}\r\n              <Input\r\n                type=\"text\"\r\n                //value={this.state.relation1}\r\n                placeholder=\"Label Name\"\r\n                onChange={(e) => this.setState({ relation1: e.target.value })}\r\n                id=\"data-name\"\r\n              />\r\n            </FormGroup>\r\n          )}\r\n          <FormGroup>\r\n            <Label for=\"data-name\">Date *</Label>\r\n            <Input\r\n              type=\"date\"\r\n              value={this.state.email}\r\n              placeholder=\"Enter nominee email\"\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n              id=\"data-name\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-price\">Amount *</Label>\r\n            <Input\r\n              type=\"number\"\r\n              value={this.state.contact1}\r\n              onChange={(e) => this.setState({ contact1: e.target.value })}\r\n              id=\"data-price\"\r\n              placeholder=\"Enter spend amount\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"data-name\">Description *</Label>\r\n            <Input\r\n              type=\"textarea\"\r\n              value={this.state.address}\r\n              placeholder=\"\"\r\n              onChange={(e) => this.setState({ address: e.target.value })}\r\n              id=\"data-name\"\r\n            />\r\n          </FormGroup>\r\n          {/* <FormGroup>\r\n            <Label for=\"data-popularity\">Popularity</Label>\r\n            <Input\r\n              type=\"number\"\r\n              value={popularity.popValue}\r\n              id=\"data-popularity\"\r\n              placeholder=\"0 - 100%\"\r\n              onChange={e =>\r\n                this.setState({\r\n                  popularity: { popularity, popValue: e.target.value }\r\n                })\r\n              }\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"data-status\">Order Status</Label>\r\n            <Input\r\n              type=\"select\"\r\n              id=\"data-status\"\r\n              value={order_status}\r\n              onChange={e => this.setState({ order_status: e.target.value })}>\r\n              <option>pending</option>\r\n              <option>canceled</option>\r\n              <option>delivered</option>\r\n              <option>on hold</option>\r\n            </Input>\r\n          </FormGroup> */}\r\n\r\n          {this.props.thumbView && img.length <= 0 ? (\r\n            <label\r\n              className=\"btn btn-primary\"\r\n              htmlFor=\"upload-image\"\r\n              color=\"primary\"\r\n            >\r\n              Upload Image\r\n              <input\r\n                type=\"file\"\r\n                id=\"upload-image\"\r\n                hidden\r\n                onChange={(e) =>\r\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\r\n                }\r\n              />\r\n            </label>\r\n          ) : null}\r\n        </PerfectScrollbar>\r\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\r\n          <Button.Ripple\r\n            // className=\"ml-1\"\r\n            className=\"mb-1\"\r\n            color=\"secondary\"\r\n            outline\r\n            onClick={() => handleSidebar(false, true)}\r\n          >\r\n            Cancel\r\n          </Button.Ripple>\r\n          <Button.Ripple\r\n            color=\"warning\"\r\n            type=\"reset\"\r\n            className=\"ml-1 mr-1 mb-1\"\r\n            onClick={() => this.handleSubmit(this.state)}\r\n          >\r\n            {this.props.isLoading && <Spinner color=\"danger\" size=\"sm\" />}{' '}\r\n            {data !== null\r\n              ? this.props.isLoading\r\n                ? 'Updating...'\r\n                : 'Update'\r\n              : this.props.isLoading\r\n              ? 'Adding...'\r\n              : 'Add'}\r\n          </Button.Ripple>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default DataListSidebar\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n  Progress,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  Input\r\n} from 'reactstrap'\r\nimport { toast } from 'react-toastify'\r\nimport DataTable from 'react-data-table-component'\r\nimport classnames from 'classnames'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { history } from '../../history'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport {\r\n  Edit,\r\n  Trash,\r\n  ChevronDown,\r\n  Plus,\r\n  Check,\r\n  ChevronLeft,\r\n  ChevronRight\r\n} from 'react-feather'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getSpendData,\r\n  getSpendInitialData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  filterData\r\n} from '../../redux/actions/data-list'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport '../../assets/scss/plugins/extensions/toastr.scss'\r\nimport Sidebar from './DataListSidebar'\r\nimport axios from 'axios'\r\nimport Chip from '../../components/@vuexy/chips/ChipComponent'\r\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\r\n\r\nimport '../../assets/scss/plugins/extensions/react-paginate.scss'\r\nimport '../../assets/scss/pages/data-list.scss'\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nconst chipColors = {\r\n  'on hold': 'warning',\r\n  delivered: 'success',\r\n  pending: 'primary',\r\n  canceled: 'danger'\r\n}\r\n\r\nconst selectedStyle = {\r\n  rows: {\r\n    selectedHighlighStyle: {\r\n      backgroundColor: 'rgba(115,103,240,.05)',\r\n      color: '#7367F0 !important',\r\n      boxShadow: '0 0 1px 0 #7367F0 !important',\r\n      '&:hover': {\r\n        transform: 'translateY(0px) !important'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst ActionsComponent = (props) => {\r\n  return (\r\n    <div className=\"data-list-action\">\r\n      <Edit\r\n        className=\"cursor-pointer mr-1\"\r\n        size={window.screen.width < 600 ? 13 : 20}\r\n        onClick={() => {\r\n          return props.currentData(props.row)\r\n        }}\r\n      />\r\n      {window.screen.width > 600 && (\r\n        <Trash\r\n          className=\"cursor-pointer\"\r\n          size={window.screen.width < 600 ? 13 : 20}\r\n          onClick={() => {\r\n            props.deleteRow(props.row)\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CustomHeader = (props) => {\r\n  return (\r\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\r\n      <div className=\"actions-left d-flex flex-wrap\">\r\n        <Button\r\n          className=\"add-new-btn\"\r\n          color=\"primary\"\r\n          style={{ marginTop: '5px' }}\r\n          onClick={() => props.handleSidebar(true, true)}\r\n          outline\r\n        >\r\n          <Plus size={15} />\r\n          <span className=\"align-middle\">Add New Spend</span>\r\n        </Button>\r\n      </div>\r\n      <div className=\"actions-right\">\r\n        <div className=\"filter-section mt-sm-0 mt-4\">\r\n          <Input\r\n            type=\"text\"\r\n            style={{ marginTop: '5px', width: '' }}\r\n            onChange={(e) => props.handleFilter(e)}\r\n            placeholder=\"Search Spends Log\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\r\n        <UncontrolledDropdown\r\n          className=\"data-list-rows-dropdown mr-1 d-md-block d-none\"\r\n          style={{ marginTop: '5px' }}\r\n        >\r\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\r\n            <span className=\"align-middle mx-50\">\r\n              {/* {`${props.index[0]} - ${props.index[1]} of ${props.total}`} */}\r\n              Total Count : {props.total}\r\n            </span>\r\n            {/* <ChevronDown size={15} /> */}\r\n          </DropdownToggle>\r\n          {/* <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\r\n              4\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\r\n              10\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\r\n              15\r\n            </DropdownItem>\r\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\r\n              20\r\n            </DropdownItem> \r\n          </DropdownMenu>*/}\r\n        </UncontrolledDropdown>\r\n        {/* <UncontrolledDropdown\r\n          className=\"data-list-dropdown mr-1\"\r\n          style={{ marginTop: \"5px\" }}\r\n        >\r\n          <DropdownToggle className=\"p-1\" color=\"primary\">\r\n            <span className=\"align-middle mr-1\">Actions</span>\r\n            <ChevronDown size={15} />\r\n          </DropdownToggle>\r\n          <DropdownMenu tag=\"div\" right>\r\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\r\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\r\n            <DropdownItem tag=\"a\">Print</DropdownItem>\r\n            <DropdownItem tag=\"a\">Export</DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass DataListConfig extends Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.dataList.data.length !== state.data.length ||\r\n      state.currentPage !== props.parsedFilter.page\r\n    ) {\r\n      return {\r\n        data: props.dataList.data,\r\n        allData: props.dataList.filteredData,\r\n        //totalPages: props.dataList.totalPages,\r\n        totalPages: props.dataList.data.length / 5,\r\n        currentPage: parseInt(props.parsedFilter.page) - 1,\r\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\r\n        totalRecords: props.dataList.totalRecords,\r\n        sortIndex: props.dataList.sortIndex\r\n      }\r\n    }\r\n\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    data: [],\r\n    totalPages: 0,\r\n    currentPage: 0,\r\n    columns: [\r\n      {\r\n        name: 'Item',\r\n        selector: 'item',\r\n        sortable: true,\r\n        minWidth: '200px',\r\n        cell: (row) => (\r\n          <p title={row.item} className=\"text-truncate text-bold-500 mb-0\">\r\n            {row.item}\r\n          </p>\r\n        )\r\n      },\r\n      {\r\n        name: 'Label',\r\n        selector: 'label',\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'Date',\r\n        minWidth: '200px',\r\n        selector: 'date',\r\n        sortable: true\r\n        // cell: row => (\r\n        //   <Progress\r\n        //     className=\"w-100 mb-0\"\r\n        //     color={row.popularity.color}\r\n        //     value={row.popularity.popValue}\r\n        //   />\r\n        //)\r\n      },\r\n      {\r\n        name: 'Amount',\r\n        selector: 'amount',\r\n        minWidth: '150px',\r\n        sortable: true\r\n        //cell: row => `$${row.price}`\r\n      },\r\n      {\r\n        name: 'Description',\r\n        selector: 'desc',\r\n        minWidth: '150px',\r\n        sortable: true\r\n        //cell: row => `$${row.price}`\r\n      },\r\n\r\n      {\r\n        name: 'Actions',\r\n        sortable: true,\r\n        cell: (row) => (\r\n          <ActionsComponent\r\n            row={row}\r\n            getSpendData={this.props.getSpendData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n            deleteRow={this.handleDelete}\r\n          />\r\n        )\r\n      }\r\n    ],\r\n    mobilecolumns: [\r\n      {\r\n        name: 'Item',\r\n        selector: 'item',\r\n        sortable: true,\r\n        minWidth: '50px',\r\n        cell: (row) => (\r\n          <p\r\n            style={{ fontSize: '10px' }}\r\n            title={row.item}\r\n            className=\"text-truncate text-bold-500 mb-0\"\r\n          >\r\n            {row.item}\r\n          </p>\r\n        )\r\n      },\r\n      {\r\n        name: 'Amount',\r\n        selector: 'amount',\r\n        maxWidth: '50px',\r\n        sortable: true,\r\n        cell: (row) => (\r\n          <p\r\n            style={{ fontSize: '10px' }}\r\n            title={row.amount}\r\n            className=\"text-truncate text-bold-500 mb-0\"\r\n          >\r\n            {row.amount}\r\n          </p>\r\n        )\r\n      },\r\n\r\n      {\r\n        name: '',\r\n        sortable: true,\r\n        width: '50px',\r\n        cell: (row) => (\r\n          <ActionsComponent\r\n            row={row}\r\n            getSpendData={this.props.getSpendData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n            deleteRow={this.handleDelete}\r\n          />\r\n        )\r\n      }\r\n    ],\r\n    allData: [],\r\n    value: '',\r\n    rowsPerPage: 4,\r\n    sidebar: false,\r\n    currentData: null,\r\n    selected: [],\r\n    totalRecords: 0,\r\n    sortIndex: [],\r\n    addNew: '',\r\n    isLoading: false\r\n  }\r\n\r\n  thumbView = this.props.thumbView\r\n\r\n  componentDidMount() {\r\n    this.props.getSpendData(this.props.parsedFilter)\r\n    this.props.getSpendInitialData()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.thumbView) {\r\n      this.thumbView = false\r\n      let columns = [\r\n        {\r\n          name: 'Image',\r\n          selector: 'img',\r\n          minWidth: '220px',\r\n          cell: (row) => <img src={row.img} height=\"100\" alt={row.name} />\r\n        },\r\n        {\r\n          name: 'Name',\r\n          selector: 'name',\r\n          sortable: true,\r\n          minWidth: '250px',\r\n          cell: (row) => (\r\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n              {row.name}\r\n            </p>\r\n          )\r\n        },\r\n        {\r\n          name: 'Category',\r\n          selector: 'category',\r\n          sortable: true\r\n        },\r\n        {\r\n          name: 'Popularity',\r\n          selector: 'popularity',\r\n          sortable: true,\r\n          cell: (row) => (\r\n            <Progress\r\n              className=\"w-100 mb-0\"\r\n              color={row.popularity.color}\r\n              value={row.popularity.popValue}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'Order Status',\r\n          selector: 'order_status',\r\n          sortable: true,\r\n          cell: (row) => (\r\n            <Chip\r\n              className=\"m-0\"\r\n              color={chipColors[row.order_status]}\r\n              text={row.order_status}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'Price',\r\n          selector: 'price',\r\n          sortable: true,\r\n          cell: (row) => `$${row.price}`\r\n        },\r\n        {\r\n          name: 'Actions',\r\n          sortable: true,\r\n          cell: (row) => (\r\n            <ActionsComponent\r\n              row={row}\r\n              getSpendData={this.props.getSpendData}\r\n              parsedFilter={this.props.parsedFilter}\r\n              currentData={this.handleCurrentData}\r\n              deleteRow={this.handleDelete}\r\n            />\r\n          )\r\n        }\r\n      ]\r\n      this.setState({ columns })\r\n    }\r\n  }\r\n\r\n  handleFilter = (e) => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.filterData(e.target.value)\r\n  }\r\n\r\n  handleRowsPerPage = (value) => {\r\n    let { parsedFilter, getSpendData } = this.props\r\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\r\n    history.push(`/nominee/list?page=${page}&perPage=${value}`)\r\n    this.setState({ rowsPerPage: value })\r\n    getSpendData({ page: parsedFilter.page, perPage: value })\r\n  }\r\n\r\n  handleSidebar = (boolean, addNew = false) => {\r\n    this.setState({ sidebar: boolean })\r\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\r\n  }\r\n\r\n  handleDelete = (row) => {\r\n    this.props.deleteData(row)\r\n    this.props.getSpendData(this.props.parsedFilter)\r\n    if (this.state.data.length - 1 === 0) {\r\n      let urlPrefix = this.props.thumbView\r\n        ? '/data-list/thumb-view/'\r\n        : '/#/nominee/list/'\r\n      history.push(\r\n        `${urlPrefix}list-view?page=${parseInt(\r\n          this.props.parsedFilter.page - 1\r\n        )}&perPage=${this.props.parsedFilter.perPage}`\r\n      )\r\n      this.props.getSpendData({\r\n        page: this.props.parsedFilter.page - 1,\r\n        perPage: this.props.parsedFilter.perPage\r\n      })\r\n    }\r\n  }\r\n  //  addData = async (obj) => {\r\n  addData = (obj) => {\r\n    if (\r\n      obj.name === '' ||\r\n      obj.relation1 === '' ||\r\n      obj.email === '' ||\r\n      obj.contact1 === '' ||\r\n      obj.address === ''\r\n    ) {\r\n      toast.error('Please Fill All Mandatory Details')\r\n    } else {\r\n      this.setState({ isLoading: true })\r\n      console.log('aaquib', obj)\r\n      let userData = localStorage.getItem('logInUserData')\r\n        ? JSON.parse(localStorage.getItem('logInUserData'))\r\n        : {}\r\n      const nominee = {\r\n        userId: userData._id,\r\n        item: obj.name,\r\n        label: obj.relation1,\r\n        date: obj.email,\r\n        amount: obj.contact1,\r\n        desc: obj.address\r\n      }\r\n      axios\r\n        .post('/backendapi/spend/add', nominee)\r\n        .then((res) => {\r\n          this.setState({ isLoading: false })\r\n          toast.success('Spend Added Successfully')\r\n          this.handleSidebar(false, true)\r\n\r\n          this.props.getSpendData(this.props.parsedFilter)\r\n        })\r\n        .catch((e) => {\r\n          this.setState({ isLoading: false })\r\n          toast.error('Add Spend Failed! Please contact admin')\r\n        })\r\n\r\n      console.log('aaquib', nominee)\r\n    }\r\n  }\r\n  updateData = (obj) => {\r\n    if (\r\n      obj.name === '' ||\r\n      obj.relation1 === '' ||\r\n      obj.email === '' ||\r\n      obj.contact1 === '' ||\r\n      obj.address === ''\r\n    ) {\r\n      toast.error('Please Fill All Mandatory Details')\r\n    } else {\r\n      this.setState({ isLoading: true })\r\n      console.log('aaquib', obj)\r\n      let userData = localStorage.getItem('logInUserData')\r\n        ? JSON.parse(localStorage.getItem('logInUserData'))\r\n        : {}\r\n      const nominee = {\r\n        _id: obj._id,\r\n        userId: userData._id,\r\n        item: obj.name,\r\n        label: obj.relation1,\r\n        date: obj.email,\r\n        amount: obj.contact1,\r\n        desc: obj.address\r\n      }\r\n      axios\r\n        .post('/backendapi/spend/update', nominee)\r\n        .then((res) => {\r\n          this.setState({ isLoading: false })\r\n          toast.success('Spend Updated Successfully')\r\n          this.handleSidebar(false, true)\r\n\r\n          this.props.getSpendData(this.props.parsedFilter)\r\n        })\r\n        .catch((e) => {\r\n          this.setState({ isLoading: false })\r\n          toast.error('Add Nominee Failed! Please contact admin')\r\n        })\r\n\r\n      console.log('aaquib', nominee)\r\n    }\r\n  }\r\n  handleCurrentData = (obj) => {\r\n    obj.name = obj.item\r\n    obj.relation1 = obj.label\r\n    obj.relation = obj.label\r\n    obj.email = obj.date\r\n    obj.address = obj.desc\r\n    obj.primaryContact = obj.amount\r\n\r\n    this.setState({ currentData: obj })\r\n\r\n    this.handleSidebar(true)\r\n  }\r\n\r\n  handlePagination = (page) => {\r\n    let { parsedFilter, getSpendData } = this.props\r\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\r\n    let urlPrefix = this.props.thumbView\r\n      ? '/#/nominee/list/'\r\n      : '/#/nominee/list/'\r\n    history.push(\r\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\r\n    )\r\n    getSpendData({ page: page.selected + 1, perPage: perPage })\r\n    this.setState({ currentPage: page.selected })\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      columns,\r\n      data,\r\n      allData,\r\n      totalPages,\r\n      value,\r\n      rowsPerPage,\r\n      currentData,\r\n      sidebar,\r\n      totalRecords,\r\n      sortIndex\r\n    } = this.state\r\n    return (\r\n      <div\r\n        className={`data-list ${\r\n          this.props.thumbView ? 'thumb-view' : 'list-view'\r\n        }`}\r\n      >\r\n        <DataTable\r\n          width=\"200\"\r\n          columns={\r\n            window.screen.width < 600 ? this.state.mobilecolumns : columns\r\n          }\r\n          data={value.length ? allData : data}\r\n          // pagination\r\n          // paginationServer\r\n          // paginationComponent={() => (\r\n          //   <ReactPaginate\r\n          //     previousLabel={<ChevronLeft size={15} />}\r\n          //     nextLabel={<ChevronRight size={15} />}\r\n          //     breakLabel=\"...\"\r\n          //     breakClassName=\"break-me\"\r\n          //     pageCount={totalPages}\r\n          //     containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\r\n          //     activeClassName=\"active\"\r\n          //     forcePage={\r\n          //       this.props.parsedFilter.page\r\n          //         ? parseInt(this.props.parsedFilter.page - 1)\r\n          //         : 0\r\n          //     }\r\n          //     onPageChange={(page) => this.handlePagination(page)}\r\n          //   />\r\n          // )}\r\n          noHeader\r\n          subHeader\r\n          selectableRows={window.screen.width < 600 ? false : true}\r\n          responsive\r\n          pointerOnHover\r\n          selectableRowsHighlight\r\n          onSelectedRowsChange={(data) =>\r\n            this.setState({ selected: data.selectedRows })\r\n          }\r\n          customStyles={selectedStyle}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              handleSidebar={this.handleSidebar}\r\n              handleFilter={this.handleFilter}\r\n              handleRowsPerPage={this.handleRowsPerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              total={totalRecords}\r\n              index={sortIndex}\r\n            />\r\n          }\r\n          sortIcon={<ChevronDown />}\r\n          selectableRowsComponent={Checkbox}\r\n          selectableRowsComponentProps={{\r\n            color: 'primary',\r\n            icon: <Check className=\"vx-icon\" size={12} />,\r\n            label: '',\r\n            size: 'sm'\r\n          }}\r\n        />\r\n        <Sidebar\r\n          show={sidebar}\r\n          data={currentData}\r\n          updateData={this.updateData}\r\n          addData={this.addData}\r\n          isLoading={this.state.isLoading}\r\n          handleSidebar={this.handleSidebar}\r\n          thumbView={this.props.thumbView}\r\n          getSpendData={this.props.getSpendData}\r\n          dataParams={this.props.parsedFilter}\r\n          addNew={this.state.addNew}\r\n        />\r\n        <div\r\n          className={classnames('data-list-overlay', {\r\n            show: sidebar\r\n          })}\r\n          onClick={() => this.handleSidebar(false, true)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataList: state.dataList\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getSpendData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  getSpendInitialData,\r\n  filterData\r\n})(DataListConfig)\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport SpendsListConfig from './SpendsListConfig'\r\nimport queryString from 'query-string'\r\nimport { ToastContainer } from 'react-toastify'\r\nclass SpendsList extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h2 className=\"warning\">Daily Spends</h2>\r\n        {/* <Breadcrumbs\r\n          breadCrumbTitle=\"Daily Spends\"\r\n          breadCrumbParent=\"Spends\"\r\n          breadCrumbActive=\"List\"\r\n        /> */}\r\n        <Row>\r\n          <ToastContainer />\r\n          <Col sm=\"12\">\r\n            <SpendsListConfig\r\n              parsedFilter={queryString.parse(this.props.location.search)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SpendsList\r\n","import React from 'react'\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : ''\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : 'md'\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import axios from 'axios'\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    let userData = localStorage.getItem('logInUserData')\r\n      ? JSON.parse(localStorage.getItem('logInUserData'))\r\n      : {}\r\n    await axios\r\n      .get('/backendapi/nominee/list/' + userData._id, params)\r\n      .then((response) => {\r\n        console.log('aaquib  123', response.data)\r\n        console.log('aaquib  123', params)\r\n        dispatch({\r\n          type: 'GET_DATA',\r\n          data: response.data,\r\n          totalPages: response.length,\r\n          params\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getSpendData = (params) => {\r\n  return async (dispatch) => {\r\n    let userData = localStorage.getItem('logInUserData')\r\n      ? JSON.parse(localStorage.getItem('logInUserData'))\r\n      : {}\r\n    await axios\r\n      .get('/backendapi/spend/list/' + userData._id, params)\r\n      .then((response) => {\r\n        console.log('aaquib  123', response.data)\r\n        console.log('aaquib  123', params)\r\n        dispatch({\r\n          type: 'GET_DATA',\r\n          data: response.data,\r\n          totalPages: response.length,\r\n          params\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  let userData = localStorage.getItem('logInUserData')\r\n    ? JSON.parse(localStorage.getItem('logInUserData'))\r\n    : {}\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get('/backendapi/nominee/list/' + userData._id)\r\n      .then((response) => {\r\n        dispatch({ type: 'GET_ALL_DATA', data: response.data })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getSpendInitialData = () => {\r\n  let userData = localStorage.getItem('logInUserData')\r\n    ? JSON.parse(localStorage.getItem('logInUserData'))\r\n    : {}\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get('/backendapi/spend/list/' + userData._id)\r\n      .then((response) => {\r\n        dispatch({ type: 'GET_ALL_DATA', data: response.data })\r\n      })\r\n  }\r\n}\r\n\r\nexport const filterData = (value) => {\r\n  return (dispatch) => dispatch({ type: 'FILTER_DATA', value })\r\n}\r\n\r\nexport const deleteData = (obj) => {\r\n  return (dispatch) => {\r\n    console.log('DELETE DATA :', obj)\r\n    axios.post('/backendapi/nominee/delete', obj).then((response) => {\r\n      dispatch({ type: 'DELETE_DATA', obj })\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateData = (obj) => {\r\n  console.log('Aaquib 123', obj)\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .post('/api/datalist/update-data', {\r\n        obj\r\n      })\r\n      .then((response) => {\r\n        dispatch({ type: 'UPDATE_DATA', obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const addData = (obj) => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().dataList.params\r\n    axios\r\n      .post('/api/datalist/add-data', {\r\n        obj\r\n      })\r\n      .then((response) => {\r\n        dispatch({ type: 'ADD_DATA', obj })\r\n        dispatch(getData(params))\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { X } from 'react-feather'\r\nclass Chip extends React.Component {\r\n  closeChip = (e) => {\r\n    e.target.closest('.chip').remove()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`chip ${this.props.className} ${\r\n          this.props.color ? `chip-${this.props.color}` : null\r\n        }`}\r\n      >\r\n        <div className=\"chip-body\">\r\n          {(!this.props.avatarImg && this.props.avatarText) ||\r\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\r\n            <div\r\n              className={`avatar ${\r\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\r\n              }`}\r\n            >\r\n              <div className=\"avatar-content\">\r\n                {this.props.avatarText ? this.props.avatarText : null}\r\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\r\n              </div>\r\n            </div>\r\n          ) : this.props.avatarImg ? (\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={this.props.avatarImg}\r\n                alt=\"chipImg\"\r\n                height=\"20\"\r\n                width=\"20\"\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"chip-text\">{this.props.text}</div>\r\n          {this.props.closable ? (\r\n            <div className=\"chip-closable\" onClick={(e) => this.closeChip(e)}>\r\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chip\r\n"],"sourceRoot":""}