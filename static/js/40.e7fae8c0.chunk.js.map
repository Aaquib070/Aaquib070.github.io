{"version":3,"sources":["assets/img/slider/banner-25.jpg","views/DocumentVault/DocumentVault.js"],"names":["module","exports","ProgrammaticallyDropzone","props","useState","files","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","setfilesOndrop","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","thumbs","className","key","name","src","onError","e","target","img5","alt","useEffect","forEach","revokeObjectURL","resetDropzone","onClick","length","Assets","state","active","reset","activeTab","collapseID","status","collapseItems","id","title","content","md","sm","toggle","tab","setState","toggleCollapse","prevState","data","submitDropzone","console","log","onEntered","onEntering","onExited","onExiting","accordionMarginItems","this","collapseItem","classnames","closing","opening","size","isOpen","Fragment","tabId","type","placeholder","themeConfig","theme","for","style","textAlign","Ripple","outline","color","React","Component"],"mappings":"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","file":"static/js/40.e7fae8c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-25.a47593fc.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  FormGroup,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  CardHeader,\r\n  Collapse,\r\n  CardBody,\r\n  CardTitle,\r\n  Label\r\n} from 'reactstrap'\r\nimport { Eye, Code, ChevronDown } from 'react-feather'\r\nimport classnames from 'classnames'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport img5 from '../../assets/img/slider/banner-25.jpg'\r\nimport '../../assets/scss/plugins/extensions/dropzone.scss'\r\nimport themeConfig from '../../configs/themeConfig'\r\n\r\nfunction ProgrammaticallyDropzone(props) {\r\n  const [files, setFiles] = useState([])\r\n  const { getRootProps, getInputProps, open } = useDropzone({\r\n    //accept: \"image/*\",\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    onDrop: (acceptedFiles) => {\r\n      props.setfilesOndrop(acceptedFiles)\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n        )\r\n      )\r\n    }\r\n  })\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div className=\"dz-thumb\" key={file.name}>\r\n      <div className=\"dz-thumb-inner\">\r\n        <img\r\n          src={file.preview}\r\n          className=\"dz-img\"\r\n          onError={(e) => {\r\n            e.target.src = img5\r\n          }}\r\n          alt={file.name}\r\n        />\r\n        <br />\r\n        <span> {file.name}</span>\r\n      </div>\r\n    </div>\r\n    // </div>\r\n  ))\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview))\r\n    },\r\n    [files]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (props.resetDropzone) {\r\n      setFiles([])\r\n    }\r\n  }, [props.resetDropzone])\r\n\r\n  return (\r\n    <section>\r\n      <div {...getRootProps({ className: 'dropzone' })}>\r\n        <input {...getInputProps()} />\r\n        <p className=\"mx-1\" onClick={open}>\r\n          Drag 'n' drop some files here, or Click to Select files\r\n        </p>\r\n      </div>\r\n      {thumbs.length ? (\r\n        <aside className=\"thumb-container-documents\">{thumbs}</aside>\r\n      ) : (\r\n        <div {...getRootProps({ className: 'dropzone-dummy' })}>\r\n          <p className=\"mx-1\">Preview Selected files</p>\r\n        </div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nclass Assets extends React.Component {\r\n  state = {\r\n    active: '2',\r\n    files: [],\r\n    reset: false,\r\n    activeTab: '1',\r\n    collapseID: '',\r\n    status: 'Closed',\r\n    collapseItems: [\r\n      {\r\n        id: 1,\r\n        title: '10th Marksheet',\r\n        content: (\r\n          <div>\r\n            <Row>\r\n              <Col md=\"6\" sm=\"12\">\r\n                Hey 1\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                Hey 2\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Girlfiends pics',\r\n        content:\r\n          'Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.'\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Driving License',\r\n        content:\r\n          'Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.'\r\n      },\r\n      {\r\n        id: 4,\r\n        title: 'Mutual Fund',\r\n        content:\r\n          'Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.'\r\n      }\r\n    ]\r\n  }\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.active !== tab) {\r\n      this.setState({ active: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = (collapseID) => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n    }))\r\n  }\r\n\r\n  setfilesOndrop = (data) => {\r\n    this.setState({ reset: false })\r\n    this.setState({\r\n      files: data.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })\r\n      )\r\n    })\r\n  }\r\n\r\n  resetDropzone = () => {\r\n    this.setState({ reset: true })\r\n  }\r\n\r\n  submitDropzone = () => {\r\n    console.log('files', this.state.files)\r\n  }\r\n\r\n  onEntered = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: 'Opened' })\r\n  }\r\n\r\n  onEntering = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: 'Opening...' })\r\n  }\r\n\r\n  onExited = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: 'Closed' })\r\n  }\r\n\r\n  onExiting = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: 'Closing...' })\r\n  }\r\n\r\n  render() {\r\n    const accordionMarginItems = this.state.collapseItems.map(\r\n      (collapseItem) => {\r\n        return (\r\n          <div className=\"collapse-margin\" key={collapseItem.id}>\r\n            <Card\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n              className={classnames({\r\n                'collapse-collapsed':\r\n                  this.state.status === 'Closed' &&\r\n                  this.state.collapseID === collapseItem.id,\r\n                'collapse-shown':\r\n                  this.state.status === 'Opened' &&\r\n                  this.state.collapseID === collapseItem.id,\r\n                closing:\r\n                  this.state.status === 'Closing...' &&\r\n                  this.state.collapseID === collapseItem.id,\r\n                opening:\r\n                  this.state.status === 'Opening...' &&\r\n                  this.state.collapseID === collapseItem.id\r\n              })}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n                <ChevronDown size={15} className=\"collapse-icon\" />\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={() => this.onEntering(collapseItem.id)}\r\n                onEntered={() => this.onEntered(collapseItem.id)}\r\n                onExiting={() => this.onExiting(collapseItem.id)}\r\n                onExited={() => this.onExited(collapseItem.id)}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          </div>\r\n        )\r\n      }\r\n    )\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2 className=\"warning spacing\">Documents</h2>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <TabContent activeTab={this.state.active}>\r\n              <TabPane tabId=\"1\"></TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Upload any file, scans, documents</CardTitle>\r\n                  </CardHeader>\r\n\r\n                  <CardBody>\r\n                    <Row>\r\n                      <Col md=\"6\" sm=\"12\">\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            className=\"input-label\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"nameMulti\"\r\n                            placeholder=\"Attachment Name / Alias\"\r\n                          />\r\n                          <Label\r\n                            className={\r\n                              themeConfig.theme === 'dark'\r\n                                ? 'dark-label'\r\n                                : 'light-label'\r\n                            }\r\n                            for=\"nameMulti\"\r\n                          >\r\n                            Attachment Name / Alias\r\n                          </Label>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            className=\"input-label\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"nameMulti\"\r\n                            placeholder=\"File Name\"\r\n                          />\r\n                          <Label\r\n                            className={\r\n                              themeConfig.theme === 'dark'\r\n                                ? 'dark-label'\r\n                                : 'light-label'\r\n                            }\r\n                            for=\"nameMulti\"\r\n                          >\r\n                            File Name\r\n                          </Label>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            className=\"input-label\"\r\n                            type=\"Date\"\r\n                            name=\"name\"\r\n                            id=\"nameMulti\"\r\n                            placeholder=\"Expiry Date\"\r\n                          />\r\n                          <Label\r\n                            className={\r\n                              themeConfig.theme === 'dark'\r\n                                ? 'dark-label'\r\n                                : 'light-label'\r\n                            }\r\n                            for=\"nameMulti\"\r\n                          >\r\n                            Expiry Date\r\n                          </Label>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            className=\"input-label\"\r\n                            type=\"textarea\"\r\n                            name=\"name\"\r\n                            id=\"nameMulti\"\r\n                            placeholder=\"Description\"\r\n                          />\r\n                          <Label\r\n                            className={\r\n                              themeConfig.theme === 'dark'\r\n                                ? 'dark-label'\r\n                                : 'light-label'\r\n                            }\r\n                            for=\"nameMulti\"\r\n                          >\r\n                            Description\r\n                          </Label>\r\n                        </FormGroup>\r\n                        <FormGroup\r\n                          className=\"form-label-group last-row-form\"\r\n                          style={{ textAlign: 'right' }}\r\n                        >\r\n                          <Button.Ripple\r\n                            outline\r\n                            color=\"secondary\"\r\n                            type=\"reset\"\r\n                            className=\"button-label\"\r\n                            onClick={(e) => {\r\n                              this.resetDropzone()\r\n                            }}\r\n                          >\r\n                            Reset\r\n                          </Button.Ripple>{' '}\r\n                          <Button.Ripple\r\n                            color=\"warning\"\r\n                            // disabled={this.state.nominees.length === 0}\r\n                            type=\"reset\"\r\n                            className=\"button-label\"\r\n                            onClick={(e) => {\r\n                              this.submitDropzone(e)\r\n                            }}\r\n                          >\r\n                            {'  Add  '}\r\n                          </Button.Ripple>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\" sm=\"12\">\r\n                        <ProgrammaticallyDropzone\r\n                          setfilesOndrop={this.setfilesOndrop}\r\n                          resetDropzone={this.state.reset}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col sm=\"12\">\r\n                        <Card>\r\n                          <CardHeader>\r\n                            <CardTitle>My Documents</CardTitle>\r\n                          </CardHeader>\r\n                          <CardBody>\r\n                            <TabContent activeTab={this.state.activeTab}>\r\n                              <TabPane tabId=\"1\">\r\n                                <div className=\"vx-collapse\">\r\n                                  {accordionMarginItems}\r\n                                </div>\r\n                              </TabPane>\r\n                              <TabPane className=\"component-code\" tabId=\"2\">\r\n                                hey\r\n                              </TabPane>\r\n                            </TabContent>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </TabPane>\r\n              <TabPane tabId=\"3\">Coming soon .......!</TabPane>\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Assets\r\n"],"sourceRoot":""}