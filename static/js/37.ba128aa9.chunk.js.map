{"version":3,"sources":["views/DocumentVault/DocumentVault.js","assets/img/slider/banner-25.jpg"],"names":["ProgrammaticallyDropzone","props","useState","files","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","setfilesOndrop","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","thumbs","className","key","name","src","onError","e","target","img5","alt","useEffect","forEach","revokeObjectURL","resetDropzone","onClick","length","Assets","state","active","reset","activeTab","collapseID","status","collapseItems","id","title","content","md","sm","toggle","tab","setState","toggleCollapse","prevState","data","submitDropzone","console","log","onEntered","onEntering","onExited","onExiting","accordionMarginItems","this","collapseItem","classnames","closing","opening","size","isOpen","Fragment","tabId","type","placeholder","themeConfig","theme","for","style","textAlign","Ripple","outline","color","React","Component","module","exports"],"mappings":"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","file":"static/js/37.ba128aa9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Card,\n  FormGroup,\n  Input,\n  Form,\n  Button,\n  CardHeader,\n  Collapse,\n  CardBody,\n  CardTitle,\n  Label\n} from 'reactstrap'\nimport { Eye, Code, ChevronDown } from 'react-feather'\nimport classnames from 'classnames'\nimport { useDropzone } from 'react-dropzone'\nimport img5 from '../../assets/img/slider/banner-25.jpg'\nimport '../../assets/scss/plugins/extensions/dropzone.scss'\nimport themeConfig from '../../configs/themeConfig'\n\nfunction ProgrammaticallyDropzone(props) {\n  const [files, setFiles] = useState([])\n  const { getRootProps, getInputProps, open } = useDropzone({\n    //accept: \"image/*\",\n    noClick: true,\n    noKeyboard: true,\n    onDrop: (acceptedFiles) => {\n      props.setfilesOndrop(acceptedFiles)\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      )\n    }\n  })\n\n  const thumbs = files.map((file) => (\n    <div className=\"dz-thumb\" key={file.name}>\n      <div className=\"dz-thumb-inner\">\n        <img\n          src={file.preview}\n          className=\"dz-img\"\n          onError={(e) => {\n            e.target.src = img5\n          }}\n          alt={file.name}\n        />\n        <br />\n        <span> {file.name}</span>\n      </div>\n    </div>\n    // </div>\n  ))\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  useEffect(() => {\n    if (props.resetDropzone) {\n      setFiles([])\n    }\n  }, [props.resetDropzone])\n\n  return (\n    <section>\n      <div {...getRootProps({ className: 'dropzone' })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\" onClick={open}>\n          Drag 'n' drop some files here, or Click to Select files\n        </p>\n      </div>\n      {thumbs.length ? (\n        <aside className=\"thumb-container-documents\">{thumbs}</aside>\n      ) : (\n        <div {...getRootProps({ className: 'dropzone-dummy' })}>\n          <p className=\"mx-1\">Preview Selected files</p>\n        </div>\n      )}\n    </section>\n  )\n}\n\nclass Assets extends React.Component {\n  state = {\n    active: '2',\n    files: [],\n    reset: false,\n    activeTab: '1',\n    collapseID: '',\n    status: 'Closed',\n    collapseItems: [\n      {\n        id: 1,\n        title: '10th Marksheet',\n        content: (\n          <div>\n            <Row>\n              <Col md=\"6\" sm=\"12\">\n                Hey 1\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                Hey 2\n              </Col>\n            </Row>\n          </div>\n        )\n      },\n      {\n        id: 2,\n        title: 'Girlfiends pics',\n        content:\n          'Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.'\n      },\n      {\n        id: 3,\n        title: 'Driving License',\n        content:\n          'Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.'\n      },\n      {\n        id: 4,\n        title: 'Mutual Fund',\n        content:\n          'Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.'\n      }\n    ]\n  }\n\n  toggle = (tab) => {\n    if (this.state.active !== tab) {\n      this.setState({ active: tab })\n    }\n  }\n\n  toggleCollapse = (collapseID) => {\n    this.setState((prevState) => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : ''\n    }))\n  }\n\n  setfilesOndrop = (data) => {\n    this.setState({ reset: false })\n    this.setState({\n      files: data.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })\n      )\n    })\n  }\n\n  resetDropzone = () => {\n    this.setState({ reset: true })\n  }\n\n  submitDropzone = () => {\n    console.log('files', this.state.files)\n  }\n\n  onEntered = (id) => {\n    if (id === this.state.collapseID) this.setState({ status: 'Opened' })\n  }\n\n  onEntering = (id) => {\n    if (id === this.state.collapseID) this.setState({ status: 'Opening...' })\n  }\n\n  onExited = (id) => {\n    if (id === this.state.collapseID) this.setState({ status: 'Closed' })\n  }\n\n  onExiting = (id) => {\n    if (id === this.state.collapseID) this.setState({ status: 'Closing...' })\n  }\n\n  render() {\n    const accordionMarginItems = this.state.collapseItems.map(\n      (collapseItem) => {\n        return (\n          <div className=\"collapse-margin\" key={collapseItem.id}>\n            <Card\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n              className={classnames({\n                'collapse-collapsed':\n                  this.state.status === 'Closed' &&\n                  this.state.collapseID === collapseItem.id,\n                'collapse-shown':\n                  this.state.status === 'Opened' &&\n                  this.state.collapseID === collapseItem.id,\n                closing:\n                  this.state.status === 'Closing...' &&\n                  this.state.collapseID === collapseItem.id,\n                opening:\n                  this.state.status === 'Opening...' &&\n                  this.state.collapseID === collapseItem.id\n              })}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n                <ChevronDown size={15} className=\"collapse-icon\" />\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={() => this.onEntering(collapseItem.id)}\n                onEntered={() => this.onEntered(collapseItem.id)}\n                onExiting={() => this.onExiting(collapseItem.id)}\n                onExited={() => this.onExited(collapseItem.id)}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          </div>\n        )\n      }\n    )\n\n    return (\n      <React.Fragment>\n        <h2 className=\"warning spacing\">Documents</h2>\n        <Row>\n          <Col sm=\"12\">\n            <TabContent activeTab={this.state.active}>\n              <TabPane tabId=\"1\"></TabPane>\n              <TabPane tabId=\"2\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Upload any file, scans, documents</CardTitle>\n                  </CardHeader>\n\n                  <CardBody>\n                    <Row>\n                      <Col md=\"6\" sm=\"12\">\n                        <FormGroup className=\"form-label-group\">\n                          <Input\n                            className=\"input-label\"\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"nameMulti\"\n                            placeholder=\"Attachment Name / Alias\"\n                          />\n                          <Label\n                            className={\n                              themeConfig.theme === 'dark'\n                                ? 'dark-label'\n                                : 'light-label'\n                            }\n                            for=\"nameMulti\"\n                          >\n                            Attachment Name / Alias\n                          </Label>\n                        </FormGroup>\n\n                        <FormGroup className=\"form-label-group\">\n                          <Input\n                            className=\"input-label\"\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"nameMulti\"\n                            placeholder=\"File Name\"\n                          />\n                          <Label\n                            className={\n                              themeConfig.theme === 'dark'\n                                ? 'dark-label'\n                                : 'light-label'\n                            }\n                            for=\"nameMulti\"\n                          >\n                            File Name\n                          </Label>\n                        </FormGroup>\n\n                        <FormGroup className=\"form-label-group\">\n                          <Input\n                            className=\"input-label\"\n                            type=\"Date\"\n                            name=\"name\"\n                            id=\"nameMulti\"\n                            placeholder=\"Expiry Date\"\n                          />\n                          <Label\n                            className={\n                              themeConfig.theme === 'dark'\n                                ? 'dark-label'\n                                : 'light-label'\n                            }\n                            for=\"nameMulti\"\n                          >\n                            Expiry Date\n                          </Label>\n                        </FormGroup>\n                        <FormGroup className=\"form-label-group\">\n                          <Input\n                            className=\"input-label\"\n                            type=\"textarea\"\n                            name=\"name\"\n                            id=\"nameMulti\"\n                            placeholder=\"Description\"\n                          />\n                          <Label\n                            className={\n                              themeConfig.theme === 'dark'\n                                ? 'dark-label'\n                                : 'light-label'\n                            }\n                            for=\"nameMulti\"\n                          >\n                            Description\n                          </Label>\n                        </FormGroup>\n                        <FormGroup\n                          className=\"form-label-group last-row-form\"\n                          style={{ textAlign: 'right' }}\n                        >\n                          <Button.Ripple\n                            outline\n                            color=\"secondary\"\n                            type=\"reset\"\n                            className=\"button-label\"\n                            onClick={(e) => {\n                              this.resetDropzone()\n                            }}\n                          >\n                            Reset\n                          </Button.Ripple>{' '}\n                          <Button.Ripple\n                            color=\"warning\"\n                            // disabled={this.state.nominees.length === 0}\n                            type=\"reset\"\n                            className=\"button-label\"\n                            onClick={(e) => {\n                              this.submitDropzone(e)\n                            }}\n                          >\n                            {'  Add  '}\n                          </Button.Ripple>\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\" sm=\"12\">\n                        <ProgrammaticallyDropzone\n                          setfilesOndrop={this.setfilesOndrop}\n                          resetDropzone={this.state.reset}\n                        />\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col sm=\"12\">\n                        <Card>\n                          <CardHeader>\n                            <CardTitle>My Documents</CardTitle>\n                          </CardHeader>\n                          <CardBody>\n                            <TabContent activeTab={this.state.activeTab}>\n                              <TabPane tabId=\"1\">\n                                <div className=\"vx-collapse\">\n                                  {accordionMarginItems}\n                                </div>\n                              </TabPane>\n                              <TabPane className=\"component-code\" tabId=\"2\">\n                                hey\n                              </TabPane>\n                            </TabContent>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </TabPane>\n              <TabPane tabId=\"3\">Coming soon .......!</TabPane>\n            </TabContent>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Assets\n","module.exports = __webpack_public_path__ + \"static/media/banner-25.a47593fc.jpg\";"],"sourceRoot":""}