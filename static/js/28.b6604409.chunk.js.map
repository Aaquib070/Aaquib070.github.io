{"version":3,"sources":["assets/img/slider/banner-25.jpg","views/DocumentVault/DocumentVault.js"],"names":["module","exports","ProgrammaticallyDropzone","props","useState","files","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","setfilesOndrop","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","thumbs","className","key","name","src","onError","e","target","img5","alt","useEffect","forEach","revokeObjectURL","resetDropzone","onClick","length","axios","defaults","baseURL","user","JSON","parse","localStorage","getItem","DocumentVault","setfiles","reset","setreset","alias","setalias","collapseID","setcollapseID","status","setstatus","id","title","content","md","sm","collapseItems","setcollapseItems","get","_id","headers","Authorization","then","res","resp","data","l","desc","decryptdata","attname","blobName","filename","catch","submitDropzone","console","log","formData","FormData","append","post","type","expiry","encryptdata","accordionMarginItems","collapseItem","idx","collapseIDNew","classnames","closing","opening","size","isOpen","onEntering","onEntered","onExiting","onExited","Fragment","Math","random","activeTab","tabId","placeholder","onChange","value","themeConfig","theme","for","style","textAlign","Ripple","outline","color"],"mappings":"sIAAAA,EAAOC,QAAU,IAA0B,uC,4SC2B3C,SAASC,EAAyBC,GAChC,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8CC,YAAY,CAExDC,SAAS,EACTC,YAAY,EACZC,OAAQ,SAACC,GACPR,EAAMS,eAAeD,GACrBL,EACEK,EAAcE,KAAI,SAACC,GAAD,OAChBC,OAAOC,OAAOF,EAAM,CAClBG,QAASC,IAAIC,gBAAgBL,YAT/BM,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,KAgB/BC,EAASlB,EAAMQ,KAAI,SAACC,GAAD,OACvB,yBAAKU,UAAU,WAAWC,IAAKX,EAAKY,MAClC,yBAAKF,UAAU,kBACb,yBACEG,IAAKb,EAAKG,QACVO,UAAU,SACVI,QAAS,SAACC,GAAD,OAAQA,EAAEC,OAAOH,IAAMI,KAChCC,IAAKlB,EAAKY,OAEZ,6BACA,kCAAQZ,EAAKY,WAmBnB,OAdAO,qBACE,kBAAM,WAEJ5B,EAAM6B,SAAQ,SAACpB,GAAD,OAAUI,IAAIiB,gBAAgBrB,EAAKG,eAEnD,CAACZ,IAGH4B,qBAAU,WACJ9B,EAAMiC,eACR9B,EAAS,MAEV,CAACH,EAAMiC,gBAGR,iCACE,wBAAShB,EAAa,CAAEI,UAAW,aACjC,0BAAWH,KACX,uBAAGG,UAAU,OAAOa,QAASf,GAA7B,4DAIDC,EAAOe,OACN,2BAAOd,UAAU,6BAA6BD,GAE9C,wBAASH,EAAa,CAAEI,UAAW,mBACjC,uBAAGA,UAAU,QAAb,4BA9DVe,IAAMC,SAASC,QAAU,kCAoEzB,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,kBA+d9BC,UA9dO,WACpB,MAA0B3C,mBAAS,IAAnC,mBAAOC,EAAP,KAAc2C,EAAd,KACA,EAA0B5C,oBAAS,GAAnC,mBAAO6C,EAAP,KAAcC,EAAd,KACA,EAA0B9C,qBAA1B,mBAAO+C,EAAP,KAAcC,EAAd,KACA,EAAoChD,mBAAS,IAA7C,mBAAOiD,EAAP,KAAmBC,EAAnB,KACA,EAA4BlD,mBAAS,UAArC,mBAAOmD,EAAP,KAAeC,EAAf,KACA,EAA0CpD,mBAAS,CACjD,CACEqD,GAAI,EACJC,MAAO,iBACPC,QACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,IAAIC,GAAG,MAAf,UAGA,kBAAC,IAAD,CAAKD,GAAG,IAAIC,GAAG,MAAf,aAOR,CACEJ,GAAI,EACJC,MAAO,kBACPC,QACE,4HAEJ,CACEF,GAAI,EACJC,MAAO,kBACPC,QACE,iIAEJ,CACEF,GAAI,EACJC,MAAO,cACPC,QACE,oIAjCN,mBAAOG,EAAP,KAAsBC,EAAtB,KAoCA9B,qBAAU,WACRM,IACGyB,IAAI,yBAA2BtB,EAAKuB,IAAK,CACxCC,QAAS,CACPC,cAAe,UAAYtB,aAAaC,QAAQ,gBAGnDsB,MAAK,SAACC,GAEL,IADA,IAAMC,EAAOD,EAAIE,KACRC,EAAI,EAAGA,EAAIF,EAAKhC,OAAQkC,GAAQ,EACvCF,EAAKE,GAAGC,KAAOC,YAAYJ,EAAKE,GAAGC,MACnCH,EAAKE,GAAGG,QAAUD,YAAYJ,EAAKE,GAAGG,SACtCL,EAAKE,GAAGrB,MAAQuB,YAAYJ,EAAKE,GAAGrB,OACpCmB,EAAKE,GAAGI,SAAWF,YAAYJ,EAAKE,GAAGI,UACvCN,EAAKE,GAAGK,SAAWH,YAAYJ,EAAKE,GAAGK,UAEzCd,EAAiBO,MAElBQ,UACF,IAUH,IAGMlE,EAAiB,SAAC2D,GACtBrB,GAAS,GACTF,EACEuB,EAAK1D,KAAI,SAACC,GAAD,OACPC,OAAOC,OAAOF,EAAM,CAClBG,QAASC,IAAIC,gBAAgBL,UAK/BsB,EAAgB,WACpBc,GAAS,IAEL6B,EAAiB,WACrBC,QAAQC,IAAI,QAAS5E,GACrB,IAAM6E,EAAW,IAAIC,SAErBD,EAASE,OAAO,OAAQ/E,EAAM,IAC9BkC,IACG8C,KAAK,cAAeH,EAAU,CAC7BhB,QAAS,CACPC,cAAe,UAAYtB,aAAaC,QAAQ,gBAGnDsB,MAAK,SAACC,GACL,IAAME,EAAOF,EAAIE,KACjBA,EAAK7B,KAAOA,EAAKuB,IACjBM,EAAKe,KAAO,QACZf,EAAKgB,OAASC,YAAYjB,EAAKgB,QAC/BhB,EAAKE,KAAOe,YAAYjB,EAAKE,MAC7BF,EAAKI,QAAUa,YAAYjB,EAAKI,SAChCJ,EAAKpB,MAAQqC,YAAYrC,GACzBoB,EAAKK,SAAWY,YAAYjB,EAAKK,UACjCL,EAAKM,SAAWW,YAAYjB,EAAKM,UACjCtC,IACG8C,KAAK,4BAA6Bd,EAAM,CACvCL,QAAS,CACPC,cAAe,UAAYtB,aAAaC,QAAQ,gBAGnDsB,MAAK,SAACC,GACLW,QAAQC,IAAI,wBAAyBZ,EAAIE,SAE1CO,WAEJA,SAeCW,EAAuB3B,EAAcjD,KAAI,SAAC6E,EAAcC,GAC5D,OACE,yBAAKnE,UAAU,kBAAkBC,IAAKiE,EAAajC,IACjD,kBAAC,IAAD,CACEpB,QAAS,kBAnEOuD,EAmEcF,EAAajC,QAlEjDH,EAAcD,IAAeuC,EAAgBvC,EAAa,IADrC,IAACuC,GAoEhBpE,UAAWqE,IAAW,CACpB,qBACa,WAAXtC,GAAuBF,IAAeqC,EAAajC,GACrD,iBACa,WAAXF,GAAuBF,IAAeqC,EAAajC,GACrDqC,QAAoB,eAAXvC,GAA2BF,IAAeqC,EAAajC,GAChEsC,QAAoB,eAAXxC,GAA2BF,IAAeqC,EAAajC,MAGlE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWjC,UAAU,iCAClBkE,EAAahC,OAEhB,kBAAC,IAAD,CAAasC,KAAM,GAAIxE,UAAU,mBAEnC,kBAAC,IAAD,CACEyE,OAAQP,EAAajC,KAAOJ,EAC5B6C,WAAY,WAAiBR,EAAajC,KA/BvCJ,GAAYG,EAAU,eAgCzB2C,UAAW,WAAgBT,EAAajC,KAnCrCJ,GAAYG,EAAU,WAoCzB4C,UAAW,WAAgBV,EAAajC,KA3BrCJ,GAAYG,EAAU,eA4BzB6C,SAAU,WAAeX,EAAajC,KA/BnCJ,GAAYG,EAAU,YAiCzB,kBAAC,IAAD,KAAWkC,EAAa/B,eAOlC,OACE,kBAAC,IAAM2C,SAAP,KACE,wBAAI9E,UAAU,6BAAd,gBACA,yBAAKC,IAAK8E,KAAKC,WACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK3C,GAAG,MACN,kBAAC,IAAD,CAAY4C,UAAW,KACrB,kBAAC,IAAD,CAASC,MAAM,KACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,2CAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK9C,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,CAAWrC,UAAU,oBACnB,kBAAC,IAAD,CACE8D,KAAK,OACL5D,KAAK,OACL+B,GAAG,gBACHkD,YAAY,0BACZC,SAAU,SAAC/E,GACTuB,EAASvB,EAAEC,OAAO+E,UAGtB,kBAAC,IAAD,CACErF,UACwB,SAAtBsF,IAAYC,MACR,aACA,cAENC,IAAI,iBANN,4BAYF,kBAAC,IAAD,CAAWxF,UAAU,oBACnB,kBAAC,IAAD,CACEA,UAAU,cACV8D,KAAK,OACL5D,KAAK,OACL+B,GAAG,gBACHkD,YAAY,cAEd,kBAAC,IAAD,CACEnF,UACwB,SAAtBsF,IAAYC,MACR,aACA,cAENC,IAAI,iBANN,cAYF,kBAAC,IAAD,CAAWxF,UAAU,oBACnB,kBAAC,IAAD,CACEA,UAAU,cACV8D,KAAK,OACL5D,KAAK,OACL+B,GAAG,kBACHkD,YAAY,gBAEd,kBAAC,IAAD,CACEnF,UACwB,SAAtBsF,IAAYC,MACR,aACA,cAENC,IAAI,mBANN,gBAWF,kBAAC,IAAD,CAAWxF,UAAU,oBACnB,kBAAC,IAAD,CACEA,UAAU,cACV8D,KAAK,WACL5D,KAAK,OACL+B,GAAG,uBACHkD,YAAY,gBAEd,kBAAC,IAAD,CACEnF,UACwB,SAAtBsF,IAAYC,MACR,aACA,cAENC,IAAI,wBANN,gBAWF,kBAAC,IAAD,CACExF,UAAU,iCACVyF,MAAO,CAAEC,UAAW,UAEpB,kBAAC,IAAOC,OAAR,CACEC,SAAO,EACPC,MAAM,YACN/B,KAAK,QACL9D,UAAU,eACVa,QAAS,SAACR,GACRO,MANJ,SAUiB,IACjB,kBAAC,IAAO+E,OAAR,CACEE,MAAM,UAEN/B,KAAK,QACL9D,UAAU,eACVa,QAAS,SAACR,GACRkD,MAGD,aAIP,kBAAC,IAAD,CAAKnB,GAAG,IAAIC,GAAG,MACb,kBAAC3D,EAAD,CACEU,eAAgBA,EAChBwB,cAAea,MAKrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKY,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,sBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY4C,UAAW,KACrB,kBAAC,IAAD,CAASC,MAAM,KACb,yBAAKlF,UAAU,eACZiE,IAGL,kBAAC,IAAD,CAASjE,UAAU,iBAAiBkF,MAAM,KAA1C,eAWhB,kBAAC,IAAD,CAASA,MAAM,KACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,2CAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK9C,GAAG,IAAIC,GAAG,MACb,kBAAC,IAAD,CAAWrC,UAAU,oBACnB,kBAAC,IAAD,CACE8D,KAAK,OACL5D,KAAK,OACL+B,GAAG,gBACHkD,YAAY,0BACZC,SAAU,SAAC/E,GAAD,OAAOuB,EAASvB,EAAEC,OAAO+E,UAErC,kBAAC,IAAD,CACErF,UACwB,SAAtBsF,IAAYC,MACR,aACA,cAENC,IAAI,iBANN,4BAYF,kBAAC,IAAD,CAAWxF,UAAU,oBACnB,kBAAC,IAAD,CACEA,UAAU,cACV8D,KAAK,OACL5D,KAAK,OACL+B,GAAG,gBACHkD,YAAY,cAEd,kBAAC,IAAD,CACEnF,UACwB,SAAtBsF,IAAYC,MACR,aACA,cAENC,IAAI,iBANN,cAYF,kBAAC,IAAD,CAAWxF,UAAU,oBACnB,kBAAC,IAAD,CACEA,UAAU,cACV8D,KAAK,OACL5D,KAAK,OACL+B,GAAG,kBACHkD,YAAY,gBAEd,kBAAC,IAAD,CACEnF,UACwB,SAAtBsF,IAAYC,MACR,aACA,cAENC,IAAI,mBANN,gBAWF,kBAAC,IAAD,CAAWxF,UAAU,oBACnB,kBAAC,IAAD,CACEA,UAAU,cACV8D,KAAK,WACL5D,KAAK,OACL+B,GAAG,uBACHkD,YAAY,gBAEd,kBAAC,IAAD,CACEnF,UACwB,SAAtBsF,IAAYC,MACR,aACA,cAENC,IAAI,wBANN,gBAWF,kBAAC,IAAD,CACExF,UAAU,iCACVyF,MAAO,CAAEC,UAAW,UAEpB,kBAAC,IAAOC,OAAR,CACEC,SAAO,EACPC,MAAM,YACN/B,KAAK,QACL9D,UAAU,eACVa,QAAS,SAACR,GACRO,MANJ,SAUiB,IACjB,kBAAC,IAAO+E,OAAR,CACEE,MAAM,UACN/B,KAAK,QACL9D,UAAU,eACVa,QAAS,SAACR,GACRkD,MAGD,aAIP,kBAAC,IAAD,CAAKnB,GAAG,IAAIC,GAAG,MACb,kBAAC3D,EAAD,CACEU,eAAgBA,EAChBwB,cAAea,MAKrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKY,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,sBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY4C,UAAW,KACrB,kBAAC,IAAD,CAASC,MAAM,KACb,yBAAKlF,UAAU,eACZiE,IAGL,kBAAC,IAAD,CAASjE,UAAU,iBAAiBkF,MAAM,KAA1C,eAYhB,kBAAC,IAAD,CAASA,MAAM,KAAf","file":"static/js/28.b6604409.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-25.a47593fc.jpg\";","import React, { useState, useEffect } from 'react'\nimport {\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  Card,\n  FormGroup,\n  Input,\n  Button,\n  CardHeader,\n  Collapse,\n  CardBody,\n  CardTitle,\n  Label\n} from 'reactstrap'\nimport { encryptdata, decryptdata } from '../../utility/context/SecurityTool'\nimport { ChevronDown } from 'react-feather'\nimport classnames from 'classnames'\nimport { useDropzone } from 'react-dropzone'\nimport img5 from '../../assets/img/slider/banner-25.jpg'\nimport '../../assets/scss/plugins/extensions/dropzone.scss'\nimport themeConfig from '../../configs/themeConfig'\nimport axios from 'axios'\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\n// axios.defaults.baseURL = 'http://localhost:5000'\n\nfunction ProgrammaticallyDropzone(props) {\n  const [files, setFiles] = useState([])\n  const { getRootProps, getInputProps, open } = useDropzone({\n    //accept: \"image/*\",\n    noClick: true,\n    noKeyboard: true,\n    onDrop: (acceptedFiles) => {\n      props.setfilesOndrop(acceptedFiles)\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      )\n    }\n  })\n\n  const thumbs = files.map((file) => (\n    <div className=\"dz-thumb\" key={file.name}>\n      <div className=\"dz-thumb-inner\">\n        <img\n          src={file.preview}\n          className=\"dz-img\"\n          onError={(e) => (e.target.src = img5)}\n          alt={file.name}\n        />\n        <br />\n        <span> {file.name}</span>\n      </div>\n    </div>\n  ))\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  useEffect(() => {\n    if (props.resetDropzone) {\n      setFiles([])\n    }\n  }, [props.resetDropzone])\n\n  return (\n    <section>\n      <div {...getRootProps({ className: 'dropzone' })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\" onClick={open}>\n          Drag 'n' drop some files here, or Click to Select files\n        </p>\n      </div>\n      {thumbs.length ? (\n        <aside className=\"thumb-container-documents\">{thumbs}</aside>\n      ) : (\n        <div {...getRootProps({ className: 'dropzone-dummy' })}>\n          <p className=\"mx-1\">Preview Selected files</p>\n        </div>\n      )}\n    </section>\n  )\n}\nconst user = JSON.parse(localStorage.getItem('logInUserData'))\nconst DocumentVault = () => {\n  const [files, setfiles] = useState([])\n  const [reset, setreset] = useState(false)\n  const [alias, setalias] = useState()\n  const [collapseID, setcollapseID] = useState('')\n  const [status, setstatus] = useState('Closed')\n  const [collapseItems, setcollapseItems] = useState([\n    {\n      id: 1,\n      title: '10th Marksheet',\n      content: (\n        <div>\n          <Row>\n            <Col md=\"6\" sm=\"12\">\n              >Hey 1\n            </Col>\n            <Col md=\"6\" sm=\"12\">\n              >Hey 2\n            </Col>\n          </Row>\n        </div>\n      )\n    },\n    {\n      id: 2,\n      title: 'Girlfiends pics',\n      content:\n        'Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.'\n    },\n    {\n      id: 3,\n      title: 'Driving License',\n      content:\n        'Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.'\n    },\n    {\n      id: 4,\n      title: 'Mutual Fund',\n      content:\n        'Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.'\n    }\n  ])\n  useEffect(() => {\n    axios\n      .get('/backendapi/documents/' + user._id, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      })\n      .then((res) => {\n        const resp = res.data\n        for (let l = 0; l < resp.length; l = l + 1) {\n          resp[l].desc = decryptdata(resp[l].desc)\n          resp[l].attname = decryptdata(resp[l].attname)\n          resp[l].alias = decryptdata(resp[l].alias)\n          resp[l].blobName = decryptdata(resp[l].blobName)\n          resp[l].filename = decryptdata(resp[l].filename)\n        }\n        setcollapseItems(resp)\n      })\n      .catch()\n  }, [])\n  // const showDocument = (d) => {\n  //   collapseItems[d].show = true\n  //   setcollapseItems(collapseItems)\n  // }\n  // const toggle = (tab) => {\n  //   if (active !== tab) {\n  //     setactive(tab)\n  //   }\n  // }\n  const toggleCollapse = (collapseIDNew) => {\n    setcollapseID(collapseID !== collapseIDNew ? collapseID : '')\n  }\n  const setfilesOndrop = (data) => {\n    setreset(false)\n    setfiles(\n      data.map((file) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })\n      )\n    )\n  }\n  const resetDropzone = () => {\n    setreset(true)\n  }\n  const submitDropzone = () => {\n    console.log('files', files)\n    const formData = new FormData()\n    //formData.append('file', encrypted)\n    formData.append('file', files[0])\n    axios\n      .post('/upload/api', formData, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\n        }\n      })\n      .then((res) => {\n        const data = res.data\n        data.user = user._id\n        data.type = 'Vault'\n        data.expiry = encryptdata(data.expiry)\n        data.desc = encryptdata(data.desc)\n        data.attname = encryptdata(data.attname)\n        data.alias = encryptdata(alias)\n        data.blobName = encryptdata(data.blobName)\n        data.filename = encryptdata(data.filename)\n        axios\n          .post('/backendapi/documents/add', data, {\n            headers: {\n              Authorization: 'Bearer ' + localStorage.getItem('authtoken')\n            }\n          })\n          .then((res) => {\n            console.log('eeeeeeeeeeeeeeeeeeeee', res.data)\n          })\n          .catch()\n      })\n      .catch()\n  }\n  const onEntered = (id) => {\n    if (id === collapseID) setstatus('Opened')\n  }\n  const onEntering = (id) => {\n    if (id === collapseID) setstatus('Opening...')\n  }\n  const onExited = (id) => {\n    if (id === collapseID) setstatus('Closed')\n  }\n  const onExiting = (id) => {\n    if (id === collapseID) setstatus('Closing...')\n  }\n\n  const accordionMarginItems = collapseItems.map((collapseItem, idx) => {\n    return (\n      <div className=\"collapse-margin\" key={collapseItem.id}>\n        <Card\n          onClick={() => toggleCollapse(collapseItem.id)}\n          className={classnames({\n            'collapse-collapsed':\n              status === 'Closed' && collapseID === collapseItem.id,\n            'collapse-shown':\n              status === 'Opened' && collapseID === collapseItem.id,\n            closing: status === 'Closing...' && collapseID === collapseItem.id,\n            opening: status === 'Opening...' && collapseID === collapseItem.id\n          })}\n        >\n          <CardHeader>\n            <CardTitle className=\"lead collapse-title collapsed\">\n              {collapseItem.title}\n            </CardTitle>\n            <ChevronDown size={15} className=\"collapse-icon\" />\n          </CardHeader>\n          <Collapse\n            isOpen={collapseItem.id === collapseID}\n            onEntering={() => onEntering(collapseItem.id)}\n            onEntered={() => onEntered(collapseItem.id)}\n            onExiting={() => onExiting(collapseItem.id)}\n            onExited={() => onExited(collapseItem.id)}\n          >\n            <CardBody>{collapseItem.content}</CardBody>\n          </Collapse>\n        </Card>\n      </div>\n    )\n  })\n\n  return (\n    <React.Fragment>\n      <h2 className=\"warning spacing nodisplay\">My Documents</h2>\n      <div key={Math.random()}></div>\n      <Row>\n        <Col sm=\"12\">\n          <TabContent activeTab={'2'}>\n            <TabPane tabId=\"1\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Upload any file, scans, documents</CardTitle>\n                </CardHeader>\n\n                <CardBody>\n                  <Row>\n                    <Col md=\"6\" sm=\"12\">\n                      <FormGroup className=\"form-label-group\">\n                        <Input\n                          type=\"text\"\n                          name=\"name\"\n                          id=\"nameMultiname\"\n                          placeholder=\"Attachment Name / Alias\"\n                          onChange={(e) => {\n                            setalias(e.target.value)\n                          }}\n                        />\n                        <Label\n                          className={\n                            themeConfig.theme === 'dark'\n                              ? 'dark-label'\n                              : 'light-label'\n                          }\n                          for=\"nameMultiname\"\n                        >\n                          Attachment Name / Alias\n                        </Label>\n                      </FormGroup>\n\n                      <FormGroup className=\"form-label-group\">\n                        <Input\n                          className=\"input-label\"\n                          type=\"text\"\n                          name=\"name\"\n                          id=\"nameMultiFile\"\n                          placeholder=\"File Name\"\n                        />\n                        <Label\n                          className={\n                            themeConfig.theme === 'dark'\n                              ? 'dark-label'\n                              : 'light-label'\n                          }\n                          for=\"nameMultiFile\"\n                        >\n                          File Name\n                        </Label>\n                      </FormGroup>\n\n                      <FormGroup className=\"form-label-group\">\n                        <Input\n                          className=\"input-label\"\n                          type=\"Date\"\n                          name=\"name\"\n                          id=\"nameMultiExpiry\"\n                          placeholder=\"Expiry Date\"\n                        />\n                        <Label\n                          className={\n                            themeConfig.theme === 'dark'\n                              ? 'dark-label'\n                              : 'light-label'\n                          }\n                          for=\"nameMultiExpiry\"\n                        >\n                          Expiry Date\n                        </Label>\n                      </FormGroup>\n                      <FormGroup className=\"form-label-group\">\n                        <Input\n                          className=\"input-label\"\n                          type=\"textarea\"\n                          name=\"name\"\n                          id=\"nameMultiDescription\"\n                          placeholder=\"Description\"\n                        />\n                        <Label\n                          className={\n                            themeConfig.theme === 'dark'\n                              ? 'dark-label'\n                              : 'light-label'\n                          }\n                          for=\"nameMultiDescription\"\n                        >\n                          Description\n                        </Label>\n                      </FormGroup>\n                      <FormGroup\n                        className=\"form-label-group last-row-form\"\n                        style={{ textAlign: 'right' }}\n                      >\n                        <Button.Ripple\n                          outline\n                          color=\"secondary\"\n                          type=\"reset\"\n                          className=\"button-label\"\n                          onClick={(e) => {\n                            resetDropzone()\n                          }}\n                        >\n                          Reset\n                        </Button.Ripple>{' '}\n                        <Button.Ripple\n                          color=\"warning\"\n                          // disabled={nominees.length === 0}\n                          type=\"reset\"\n                          className=\"button-label\"\n                          onClick={(e) => {\n                            submitDropzone(e)\n                          }}\n                        >\n                          {'  Add  '}\n                        </Button.Ripple>\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"6\" sm=\"12\">\n                      <ProgrammaticallyDropzone\n                        setfilesOndrop={setfilesOndrop}\n                        resetDropzone={reset}\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col sm=\"12\">\n                      <Card>\n                        <CardHeader>\n                          <CardTitle>My Documents</CardTitle>\n                        </CardHeader>\n                        <CardBody>\n                          <TabContent activeTab={'1'}>\n                            <TabPane tabId=\"1\">\n                              <div className=\"vx-collapse\">\n                                {accordionMarginItems}\n                              </div>\n                            </TabPane>\n                            <TabPane className=\"component-code\" tabId=\"2\">\n                              hey\n                            </TabPane>\n                          </TabContent>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Upload any file, scans, documents</CardTitle>\n                </CardHeader>\n\n                <CardBody>\n                  <Row>\n                    <Col md=\"6\" sm=\"12\">\n                      <FormGroup className=\"form-label-group\">\n                        <Input\n                          type=\"text\"\n                          name=\"name\"\n                          id=\"nameMultiname\"\n                          placeholder=\"Attachment Name / Alias\"\n                          onChange={(e) => setalias(e.target.value)}\n                        />\n                        <Label\n                          className={\n                            themeConfig.theme === 'dark'\n                              ? 'dark-label'\n                              : 'light-label'\n                          }\n                          for=\"nameMultiname\"\n                        >\n                          Attachment Name / Alias\n                        </Label>\n                      </FormGroup>\n\n                      <FormGroup className=\"form-label-group\">\n                        <Input\n                          className=\"input-label\"\n                          type=\"text\"\n                          name=\"name\"\n                          id=\"nameMultiFile\"\n                          placeholder=\"File Name\"\n                        />\n                        <Label\n                          className={\n                            themeConfig.theme === 'dark'\n                              ? 'dark-label'\n                              : 'light-label'\n                          }\n                          for=\"nameMultiFile\"\n                        >\n                          File Name\n                        </Label>\n                      </FormGroup>\n\n                      <FormGroup className=\"form-label-group\">\n                        <Input\n                          className=\"input-label\"\n                          type=\"Date\"\n                          name=\"name\"\n                          id=\"nameMultiExpiry\"\n                          placeholder=\"Expiry Date\"\n                        />\n                        <Label\n                          className={\n                            themeConfig.theme === 'dark'\n                              ? 'dark-label'\n                              : 'light-label'\n                          }\n                          for=\"nameMultiExpiry\"\n                        >\n                          Expiry Date\n                        </Label>\n                      </FormGroup>\n                      <FormGroup className=\"form-label-group\">\n                        <Input\n                          className=\"input-label\"\n                          type=\"textarea\"\n                          name=\"name\"\n                          id=\"nameMultiDescription\"\n                          placeholder=\"Description\"\n                        />\n                        <Label\n                          className={\n                            themeConfig.theme === 'dark'\n                              ? 'dark-label'\n                              : 'light-label'\n                          }\n                          for=\"nameMultiDescription\"\n                        >\n                          Description\n                        </Label>\n                      </FormGroup>\n                      <FormGroup\n                        className=\"form-label-group last-row-form\"\n                        style={{ textAlign: 'right' }}\n                      >\n                        <Button.Ripple\n                          outline\n                          color=\"secondary\"\n                          type=\"reset\"\n                          className=\"button-label\"\n                          onClick={(e) => {\n                            resetDropzone()\n                          }}\n                        >\n                          Reset\n                        </Button.Ripple>{' '}\n                        <Button.Ripple\n                          color=\"warning\"\n                          type=\"reset\"\n                          className=\"button-label\"\n                          onClick={(e) => {\n                            submitDropzone(e)\n                          }}\n                        >\n                          {'  Add  '}\n                        </Button.Ripple>\n                      </FormGroup>\n                    </Col>\n                    <Col md=\"6\" sm=\"12\">\n                      <ProgrammaticallyDropzone\n                        setfilesOndrop={setfilesOndrop}\n                        resetDropzone={reset}\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col sm=\"12\">\n                      <Card>\n                        <CardHeader>\n                          <CardTitle>My Documents</CardTitle>\n                        </CardHeader>\n                        <CardBody>\n                          <TabContent activeTab={'1'}>\n                            <TabPane tabId=\"1\">\n                              <div className=\"vx-collapse\">\n                                {accordionMarginItems}\n                              </div>\n                            </TabPane>\n                            <TabPane className=\"component-code\" tabId=\"2\">\n                              hey\n                            </TabPane>\n                          </TabContent>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </TabPane>\n\n            <TabPane tabId=\"3\">Coming soon .......!</TabPane>\n          </TabContent>\n        </Col>\n      </Row>\n    </React.Fragment>\n  )\n}\nexport default DocumentVault\n"],"sourceRoot":""}