{"version":3,"sources":["redux/actions/diary/index.js","views/Diary/DiarySidebar.js","views/Diary/DiaryList.js","views/Diary/TaskSidebar.js","views/Diary/Diary.js"],"names":["axios","defaults","baseURL","getTodos","routeParams","JSON","parse","localStorage","getItem","userData","dispatch","a","get","_id","params","headers","Authorization","then","response","type","todos","data","catch","err","console","log","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","connect","changeFilter","filter","history","push","props","Fragment","className","onClick","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","active","routerProps","location","pathname","state","app","todoApp","trashTask","getState","routeParam","post","searchTask","val","useState","open","setopen","setid","settodos","setvalue","useEffect","getdiaryLIst","routerFilter","match","todosArr","length","filteredTodos","undefined","renderTodos","map","i","today","Date","createdAt","style","border","padding","margin","key","handleUpdateTask","Modal","isOpen","backdrop","ModalBody","ModalFooter","Card","minHeight","CardBody","fontSize","toLocaleDateString","weekday","year","month","day","fontWeight","title","desc","wordBreak","whiteSpace","maxHeight","backgroundColor","borderTopRightRadius","e","stopPropagation","FormGroup","display","justifyContent","borderRadius","Input","width","placeholder","onChange","target","handleOnChange","colourOptions1","label","isFixed","updateTask","taskToUpdate","tags","ans","request","updateLabel","addNewTask","task","user","toast","success","url","blob","chunks","duration","h","m","s","audioDetails","setaudioDetails","newTask","setnewTask","ptype","setptype","settaskToUpdate","taskTitle","settaskTitle","taskDesc","settaskDesc","taskStatus","settaskStatus","taskStarred","settaskStarred","validUpDate","setvalidUpDate","taskImportant","settaskImportant","selectAssetRef","React","createRef","handleNewTaskTags","tag","tagsArr","includes","splice","indexOf","addTaskState","icon","checked","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","labelColor","classNamePrefix","ref","name","isClearable","onRecordingComplete","videoBlob","record","audioURL","showUIAudio","handleAudioStop","handleAudioUpload","file","handleRest","rows","textAlign","outline","handleUndoChanges","disabled","mql","window","matchMedia","Diary","setaddTask","sidebarOpen","setsidebarOpen","prevState","setprevState","onSetSidebarOpen","handleAddTask","status","Consumer","context","sidebar","docked","matches","sidebarClassName","touch","contentClassName","pullRight","direction","clearPrevState"],"mappings":"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","file":"static/js/27.0b524966.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { history } from '../../../history'\r\nimport { toast } from 'react-toastify'\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nexport const getTodos = (routeParams) => {\r\n  const logInUserData = JSON.parse(localStorage.getItem('logInUserData'))\r\n  if (!logInUserData) return\r\n  let userData = localStorage.getItem('logInUserData')\r\n    ? JSON.parse(localStorage.getItem('logInUserData'))\r\n    : {}\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get(`backendapi/diary/list?user=${userData._id}`, {\r\n        params: routeParams,\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // for (let data of response?.data) {\r\n        //   data.nomineeId = data?.nomineeId && decryptdata(data.nomineeId, true)\r\n        //   // data._id = data?._id && decryptdata(data._id,true)\r\n        //   // data.userId = data?.userId && decryptdata(data.userId,true)\r\n        //   data.name = data?.name && decryptdata(data.name, true)\r\n        //   data.relation = data?.relation && decryptdata(data.relation, true)\r\n        //   data.email = data?.email && decryptdata(data.email, true)\r\n        //   data.primaryContact =\r\n        //     data?.primaryContact && decryptdata(data.primaryContact, true)\r\n        //   data.secondaryContact =\r\n        //     data?.secondaryContact && decryptdata(data.secondaryContact, true)\r\n        //   data.address = data?.address && decryptdata(data.address, true)\r\n        // }\r\n        dispatch({\r\n          type: 'GET_TODOS',\r\n          todos: response.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = (todo) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'COMPLETE_TASK', id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'STAR_TASK', id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'IMPORTANT_TASK', id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = (id) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post('/api/app/todo/trash-todo', id, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => dispatch({ type: 'TRASH_TASK', id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = (todo) => {\r\n  console.log('updateTodo todo')\r\n  const request = axios.post('/api/apps/todo/update-todo', todo, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n    }\r\n  })\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then((response) => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: 'UPDATE_TODO',\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (\r\n  id,\r\n  title,\r\n  desc,\r\n  taskToUpdate,\r\n  isCompleted,\r\n  isImportant,\r\n  isStarred,\r\n  tags\r\n) => {\r\n  const ans = {\r\n    _id: id,\r\n    title,\r\n    desc,\r\n    taskToUpdate,\r\n    isCompleted,\r\n    isImportant,\r\n    isStarred,\r\n    tags\r\n  }\r\n  const request = axios.post('/backendapi/diary/update', ans, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n    }\r\n  })\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then((response) => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: 'UPDATE_TASK',\r\n          ans\r\n          // todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: 'UPDATE_LABEL', label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = (task) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    const user = JSON.parse(localStorage.getItem('logInUserData'))._id\r\n    task.user = user\r\n    axios\r\n      .post('/backendapi/diary/add', task, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        dispatch({ type: 'ADD_TASK', task })\r\n        dispatch(getTodos(params))\r\n        toast.success('Note Added Successfully!!')\r\n      })\r\n  }\r\n}\r\n\r\nexport const searchTask = (val) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'SEARCH_TASK',\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = (filter) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'CHANGE_FILTER', filter })\r\n    history.push(`/#/diary/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Layers, Star, Bookmark, Check, Trash } from 'react-feather'\r\nimport { connect } from 'react-redux'\r\nimport { changeFilter } from '../../redux/actions/diary/index'\r\nconst DiarySidebar = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <span\r\n        className=\"sidebar-close-icon\"\r\n        onClick={() => props.mainSidebar(false)}\r\n      >\r\n        <X size={15} />\r\n      </span>\r\n      <div className=\"todo-app-menu\">\r\n        <div className=\"add-task\">\r\n          <Button.Ripple\r\n            block\r\n            className=\"btn-block\"\r\n            color=\"warning\"\r\n            onClick={() => {\r\n              props.addTask('open')\r\n              props.mainSidebar(false)\r\n            }}\r\n          >\r\n            Add Notes\r\n          </Button.Ripple>\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"sidebar-menu-list\"\r\n          options={{\r\n            wheelPropagation: false\r\n          }}\r\n        >\r\n          <ListGroup className=\"font-medium-1\">\r\n            <ListGroupItem\r\n              className=\"border-0 pt-0\"\r\n              action\r\n              onClick={() => {\r\n                props.changeFilter('all')\r\n              }}\r\n              active={\r\n                props.routerProps.location.pathname === '/diary' ? true : false\r\n              }\r\n            >\r\n              <Layers size={22} />\r\n              <span className=\"align-middle ml-1\">All</span>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          <hr />\r\n          <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\r\n          <ListGroup className=\"font-medium-1\">\r\n            <ListGroupItem\r\n              className=\"border-0\"\r\n              onClick={() => {\r\n                props.changeFilter('important')\r\n              }}\r\n              active={\r\n                props.routerProps.location.pathname === '/diary/important'\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <Star size={22} />\r\n              <span className=\"align-middle ml-1\">Important</span>\r\n            </ListGroupItem>\r\n            <ListGroupItem\r\n              className=\"border-0\"\r\n              onClick={() => {\r\n                props.changeFilter('starred')\r\n              }}\r\n              active={\r\n                props.routerProps.location.pathname === '/diary/starred'\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <Bookmark size={22} />\r\n              <span className=\"align-middle ml-1\">Bookmark</span>\r\n            </ListGroupItem>\r\n            <ListGroupItem\r\n              className=\"border-0\"\r\n              onClick={() => {\r\n                props.changeFilter('completed')\r\n              }}\r\n              active={\r\n                props.routerProps.location.pathname === '/diary/completed'\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <Check size={22} />\r\n              <span className=\"align-middle ml-1\">Completed</span>\r\n            </ListGroupItem>\r\n            <ListGroupItem\r\n              className=\"border-0\"\r\n              onClick={() => {\r\n                props.changeFilter('trashed')\r\n              }}\r\n              active={\r\n                props.routerProps.location.pathname === '/diary/trashed'\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <Trash size={22} />\r\n              <span className=\"align-middle ml-1\">Trashed</span>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          <hr />\r\n          <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\r\n          <ListGroup className=\"font-medium-1\">\r\n            <ListGroupItem\r\n              className=\"border-0\"\r\n              onClick={() => {\r\n                props.changeFilter('personal')\r\n              }}\r\n              active={\r\n                props.routerProps.location.pathname === '/diary/personal'\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <span className=\"bullet bullet-primary align-middle\" />\r\n              <span className=\"align-middle ml-1\">Personal</span>\r\n            </ListGroupItem>\r\n            <ListGroupItem\r\n              className=\"border-0\"\r\n              onClick={() => {\r\n                props.changeFilter('professional')\r\n              }}\r\n              active={\r\n                props.routerProps.location.pathname === '/diary/professional'\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <span className=\"bullet bullet-warning align-middle\" />\r\n              <span className=\"align-middle ml-1\">Professional</span>\r\n            </ListGroupItem>\r\n            <ListGroupItem\r\n              className=\"border-0\"\r\n              onClick={() => {\r\n                props.changeFilter('others')\r\n              }}\r\n              active={\r\n                props.routerProps.location.pathname === '/diary/others'\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <span className=\"bullet bullet-success align-middle\" />\r\n              <span className=\"align-middle ml-1\">Others</span>\r\n            </ListGroupItem>\r\n            <ListGroupItem\r\n              className=\"border-0\"\r\n              onClick={() => {\r\n                props.changeFilter('todo')\r\n              }}\r\n              active={\r\n                props.routerProps.location.pathname === '/diary/todo'\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              <span className=\"bullet bullet-danger align-middle\" />\r\n              <span className=\"align-middle ml-1\">TO DO List</span>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default connect(null, { changeFilter })(DiarySidebar)\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Modal,\r\n  CardBody,\r\n  Card\r\n} from 'reactstrap'\r\nimport { Menu, Search, Bookmark, Star, Trash } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n} from '../../redux/actions/diary/index'\r\nconst DiaryList = (props) => {\r\n  const [open, setopen] = useState(false)\r\n  const [id, setid] = useState(null)\r\n  const [todos, settodos] = useState([])\r\n  const [value, setvalue] = useState('')\r\n  const { pathname } = props?.routerProps?.location\r\n\r\n  useEffect(() => {\r\n    if (props.app.todo.todos) {\r\n      settodos(props.app.todo.todos)\r\n    }\r\n  }, [props.app.todo])\r\n\r\n  useEffect(() => {\r\n    getdiaryLIst()\r\n  }, [])\r\n\r\n  const getdiaryLIst = async () => {\r\n    if (!pathname) return\r\n    await props.getTodos(pathname)\r\n    settodos(props?.app?.todo?.todos)\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n    setvalue(e.target.value)\r\n    props.searchTask(e.target.value)\r\n  }\r\n  let routerFilter = props.routerProps.match.params.filter\r\n  let todosArr = value.length ? props.app.todo.filteredTodos : todos\r\n\r\n  if (todosArr === undefined) {\r\n    return (\r\n      <div className=\"fallback-spinner vh-100\">\r\n        <div className=\"loading\">\r\n          <div className=\"effect-1 effects\"></div>\r\n          <div className=\"effect-2 effects\"></div>\r\n          <div className=\"effect-3 effects\"></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  let renderTodos =\r\n    todosArr.length > 0 ? (\r\n      todosArr.map((todo, i) => {\r\n        var options = {\r\n          weekday: 'long',\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        }\r\n        var today = new Date(todo.createdAt)\r\n        return (\r\n          <li\r\n            style={{ border: 'none', padding: '0', margin: '0 1.6rem' }}\r\n            className={`todo-item ${todo.isCompleted ? 'completed' : ''}`}\r\n            key={i}\r\n            onClick={() => {\r\n              props.handleUpdateTask(todo)\r\n            }}\r\n          >\r\n            <Modal\r\n              isOpen={open}\r\n              className=\"modal-dialog-centered\"\r\n              backdrop=\"static\"\r\n            >\r\n              <ModalBody>\r\n                Are you sure you want to delete this record?\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className=\"button-label\"\r\n                  onClick={() => {\r\n                    setopen(false)\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  color=\"danger\"\r\n                  onClick={() => {\r\n                    setopen(false)\r\n                    props.trashTask(id)\r\n                  }}\r\n                  className=\"button-label\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n            <Card className=\"mt-1 mb-0\" style={{ minHeight: '110px' }}>\r\n              <CardBody className=\"p-0 d-flex\">\r\n                <div id=\"left-content\" className=\"w-100 p-1\">\r\n                  <div id=\"top-content\" className=\"d-flex\">\r\n                    <p style={{ fontSize: '1rem' }}>\r\n                      {today.toLocaleDateString('en-US', options)}&nbsp;\r\n                      {'-'}\r\n                    </p>\r\n                    <p style={{ fontSize: '1.15rem', fontWeight: 'bold' }}>\r\n                      &nbsp;\r\n                      {todo.title}\r\n                    </p>\r\n                  </div>\r\n                  <div id=\"bottom-content\">\r\n                    {todo.desc.length > 0 ? (\r\n                      <p\r\n                        className=\"todo-desc mb-0\"\r\n                        style={{\r\n                          wordBreak: 'break-all',\r\n                          whiteSpace: 'normal',\r\n                          fontSize: '1.15rem'\r\n                        }}\r\n                      >\r\n                        {todo.desc}\r\n                      </p>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div id=\"options\">\r\n                  <div\r\n                    style={{ maxHeight: '110px' }}\r\n                    className=\"d-flex flex-column justify-content-between\"\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        padding: '0.5rem',\r\n                        backgroundColor: todo.isImportant\r\n                          ? 'var(--danger)'\r\n                          : '',\r\n                        borderTopRightRadius: '0.5rem'\r\n                      }}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        props.importantTask(todo)\r\n                      }}\r\n                    >\r\n                      <Star\r\n                        size={23}\r\n                        color={`${todo.isImportant ? 'white' : 'currentColor'}`}\r\n                        // className={`${todo.isImportant ? 'text-danger' : ''}`}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        padding: '0.5rem',\r\n                        backgroundColor: todo.isStarred ? 'var(--warning)' : ''\r\n                      }}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        props.starTask(todo)\r\n                      }}\r\n                    >\r\n                      <Bookmark\r\n                        size={23}\r\n                        color={`${todo.isStarred ? 'white' : 'currentColor'}`}\r\n                      />\r\n                    </div>\r\n                    {routerFilter !== 'trashed' ? (\r\n                      <div style={{ padding: '0.5rem' }}>\r\n                        <Trash\r\n                          size={23}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            setid(todo.id)\r\n                            setopen(true)\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </li>\r\n        )\r\n      })\r\n    ) : (\r\n      <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\r\n        No tasks at this time\r\n      </p>\r\n    )\r\n\r\n  return (\r\n    <div className=\"content-right h-100\">\r\n      <div className=\"todo-app-area h-100\">\r\n        <div className=\"todo-app-list-wrapper h-100\">\r\n          <div className=\"todo-app-list h-100\">\r\n            <div className=\"app-fixed-search\">\r\n              <div\r\n                className=\"sidebar-toggle d-inline-block d-lg-none\"\r\n                onClick={() => props.mainSidebar(true)}\r\n              >\r\n                <Menu size={24} />\r\n              </div>\r\n              <FormGroup\r\n                style={{\r\n                  display: 'flex',\r\n                  margin: 'auto',\r\n                  justifyContent: 'center'\r\n                }}\r\n                className=\"position-relative has-icon-left\"\r\n              >\r\n                <div style={{ borderRadius: '1.428rem' }}>\r\n                  <div className=\"form-control-position\">\r\n                    <Search size={15} />\r\n                  </div>\r\n                  <Input\r\n                    style={{\r\n                      width: '100%'\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={(e) => handleOnChange(e)}\r\n                    value={value}\r\n                  />\r\n                </div>\r\n              </FormGroup>\r\n            </div>\r\n            <PerfectScrollbar\r\n              className=\"todo-task-list\"\r\n              options={{\r\n                wheelPropagation: false\r\n              }}\r\n            >\r\n              <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n})(DiaryList)\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { X, Bookmark, Star, Tag, Check } from 'react-feather'\r\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport VideoRecorder from 'react-video-recorder'\r\nimport { Recorder } from 'react-voice-recorder'\r\nimport 'react-voice-recorder/dist/index.css'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  starTask,\r\n  completeTask,\r\n  importantTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n} from '../../redux/actions/diary/index'\r\nconst colourOptions1 = [\r\n  {\r\n    value: 'Attachment',\r\n    label: 'Attachment',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Scribble',\r\n    label: 'Scribble',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Text',\r\n    label: 'Text',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Video',\r\n    label: 'Video',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Voice',\r\n    label: 'Voice',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  }\r\n]\r\nconst TaskSidebar = (props) => {\r\n  const [audioDetails, setaudioDetails] = useState({\r\n    url: null,\r\n    blob: null,\r\n    chunks: null,\r\n    duration: {\r\n      h: 0,\r\n      m: 0,\r\n      s: 0\r\n    }\r\n  })\r\n  const [newTask, setnewTask] = useState({\r\n    title: '',\r\n    desc: '',\r\n    tags: [],\r\n    isCompleted: false,\r\n    isImportant: false,\r\n    isStarred: false\r\n  })\r\n  const [ptype, setptype] = useState('')\r\n  const [taskToUpdate, settaskToUpdate] = useState(null)\r\n  const [taskTitle, settaskTitle] = useState('')\r\n  const [taskDesc, settaskDesc] = useState('')\r\n  const [taskStatus, settaskStatus] = useState(false)\r\n  const [taskStarred, settaskStarred] = useState(false)\r\n  const [validUpDate, setvalidUpDate] = useState(false)\r\n  const [taskImportant, settaskImportant] = useState(false)\r\n  const selectAssetRef = React.createRef()\r\n  useEffect(() => {\r\n    if (props.taskToUpdate) {\r\n      const { title, id, desc, isCompleted, isStarred, isImportant } =\r\n        props.taskToUpdate\r\n      settaskToUpdate(props.taskToUpdate)\r\n      id !== null && setvalidUpDate(true)\r\n      settaskTitle(title)\r\n      settaskDesc(desc)\r\n      settaskStatus(isCompleted)\r\n      settaskStarred(isStarred)\r\n      settaskImportant(isImportant)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.taskToUpdate])\r\n  const handleAudioStop = (data) => {\r\n    setaudioDetails(data)\r\n  }\r\n  const handleAudioUpload = (file) => {\r\n    console.log(file)\r\n  }\r\n  const handleRest = () => {\r\n    const reset = {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n      }\r\n    }\r\n    setaudioDetails(reset)\r\n  }\r\n\r\n  const handleNewTaskTags = (tag) => {\r\n    let tagsArr = newTask.tags\r\n    if (tagsArr.includes(tag)) {\r\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\r\n    } else {\r\n      tagsArr.push(tag)\r\n    }\r\n    setnewTask({ ...newTask, tags: tag })\r\n  }\r\n  const renderTags = (taskArr) => {\r\n    return taskArr.map((tag, i) => (\r\n      <div className=\"chip mb-0 mr-50\" key={i}>\r\n        <div className=\"chip-body\">\r\n          <span className=\"chip-text\">\r\n            <span\r\n              className={`bullet bullet-${\r\n                tag === 'professional'\r\n                  ? 'warning'\r\n                  : tag === 'others'\r\n                  ? 'success'\r\n                  : tag === 'todo'\r\n                  ? 'danger'\r\n                  : 'primary'\r\n              } bullet-xs`}\r\n            />\r\n            <span className=\"text-capitalize ml-25\">{tag}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`task-sidebar ${props.addTaskState === true ? 'show' : ''}`}\r\n    >\r\n      <div className=\"task-header\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div className=\"task-type-title text-bold-600\">\r\n            <h3 style={{ color: 'var(--warning)' }}>\r\n              {props.taskToUpdate && props.taskToUpdate.id\r\n                ? 'Update Details'\r\n                : 'Enter Details'}\r\n            </h3>\r\n          </div>\r\n          <div className=\"close-icon\">\r\n            <X\r\n              className=\"cursor-pointer\"\r\n              size={20}\r\n              onClick={() => {\r\n                props.addTask('close')\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <PerfectScrollbar>\r\n        <div className=\"task-body\">\r\n          <div className=\"d-flex justify-content-between mb-2\">\r\n            <div className=\"mark-complete\">\r\n              {props.taskToUpdate && props.taskToUpdate.id && (\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  className=\"user-checkbox\"\r\n                  icon={<Check className=\"vx-icon\" size={15} />}\r\n                  label={''}\r\n                  checked={taskStatus}\r\n                  onChange={(e) => {\r\n                    props.completeTask(props.taskToUpdate)\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"task-actions\">\r\n              <Star\r\n                size={20}\r\n                className={`mr-50 ${\r\n                  (props.taskToUpdate !== null && taskImportant) ||\r\n                  newTask.isImportant\r\n                    ? 'text-success'\r\n                    : ''\r\n                }`}\r\n                onClick={() => {\r\n                  if (props.taskToUpdate !== null) {\r\n                    props.importantTask(props.taskToUpdate)\r\n                  } else {\r\n                    setnewTask({\r\n                      ...newTask,\r\n                      isImportant: !newTask.isImportant\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n              <Bookmark\r\n                size={20}\r\n                className={`mr-50 ${\r\n                  (props.taskToUpdate !== null && taskStarred) ||\r\n                  newTask.isStarred\r\n                    ? 'text-warning'\r\n                    : ''\r\n                }`}\r\n                onClick={() => {\r\n                  if (props.taskToUpdate !== null) {\r\n                    props.starTask(props.taskToUpdate)\r\n                  } else {\r\n                    setnewTask({\r\n                      ...newTask,\r\n                      isStarred: !newTask.isStarred\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n              <UncontrolledDropdown className=\"d-inline-block\">\r\n                <DropdownToggle tag=\"span\">\r\n                  <Tag className=\"mr-50\" size={20} />\r\n                </DropdownToggle>\r\n                <DropdownMenu tag=\"ul\" right>\r\n                  <DropdownItem tag=\"li\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      className=\"user-checkbox\"\r\n                      icon={<Check className=\"vx-icon\" size={12} />}\r\n                      label={'Personal'}\r\n                      checked={\r\n                        (props.taskToUpdate !== null &&\r\n                          props.taskToUpdate.tags.includes('personal')) ||\r\n                        newTask.tags.includes('personal')\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      size=\"sm\"\r\n                      onChange={(e) => {\r\n                        e.stopPropagation()\r\n                        if (props.taskToUpdate !== null)\r\n                          props.updateLabel(taskToUpdate.id, 'personal')\r\n                        else handleNewTaskTags('personal')\r\n                      }}\r\n                    />\r\n                  </DropdownItem>\r\n                  <DropdownItem tag=\"li\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      labelColor=\"#ff9f43\"\r\n                      className=\"user-checkbox\"\r\n                      icon={<Check className=\"vx-icon\" size={12} />}\r\n                      label={'Professional'}\r\n                      checked={\r\n                        (props.taskToUpdate !== null &&\r\n                          props.taskToUpdate.tags.includes('professional')) ||\r\n                        newTask.tags.includes('professional')\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      size=\"sm\"\r\n                      onClick={(e) => e.stopPropagation()}\r\n                      onChange={(e) => {\r\n                        e.stopPropagation()\r\n                        if (props.taskToUpdate !== null)\r\n                          props.updateLabel(taskToUpdate.id, 'professional')\r\n                        else handleNewTaskTags('professional')\r\n                      }}\r\n                    />\r\n                  </DropdownItem>\r\n                  <DropdownItem tag=\"li\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      className=\"user-checkbox\"\r\n                      icon={<Check className=\"vx-icon\" size={12} />}\r\n                      label={'Others'}\r\n                      labelColor=\"#25af63\"\r\n                      checked={\r\n                        (props.taskToUpdate !== null &&\r\n                          props.taskToUpdate.tags.includes('others')) ||\r\n                        newTask.tags.includes('others')\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      size=\"sm\"\r\n                      onClick={(e) => e.stopPropagation()}\r\n                      onChange={(e) => {\r\n                        e.stopPropagation()\r\n                        if (props.taskToUpdate !== null)\r\n                          props.updateLabel(taskToUpdate.id, 'others')\r\n                        else handleNewTaskTags('others')\r\n                      }}\r\n                    />\r\n                  </DropdownItem>\r\n                  <DropdownItem tag=\"li\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      className=\"user-checkbox\"\r\n                      labelColor=\"#ea5455\"\r\n                      icon={<Check className=\"vx-icon\" size={12} />}\r\n                      label={'TO DO List'}\r\n                      checked={\r\n                        (props.taskToUpdate !== null &&\r\n                          props.taskToUpdate.tags.includes('todo')) ||\r\n                        newTask.tags.includes('todo')\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      size=\"sm\"\r\n                      onClick={(e) => e.stopPropagation()}\r\n                      onChange={(e) => {\r\n                        e.stopPropagation()\r\n                        if (props.taskToUpdate !== null)\r\n                          props.updateLabel(taskToUpdate.id, 'todo')\r\n                        else handleNewTaskTags('todo')\r\n                      }}\r\n                    />\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </div>\r\n\r\n          <FormGroup className=\"form-label-group\">\r\n            <Select\r\n              className=\"React\"\r\n              classNamePrefix=\"select\"\r\n              // defaultValue={colourOptions1[0]}\r\n\r\n              ref={selectAssetRef}\r\n              name=\"color\"\r\n              options={colourOptions1}\r\n              isClearable={true}\r\n              placeholder=\"Select Message Type...\"\r\n              onChange={(e) => {\r\n                setptype(e ? e.value : '')\r\n              }}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              value={props.taskToUpdate !== null ? taskTitle : newTask.title}\r\n              onChange={(e) => {\r\n                if (props.taskToUpdate !== null) {\r\n                  settaskTitle(e.target.value)\r\n                } else {\r\n                  setnewTask({\r\n                    ...newTask,\r\n                    title: e.target.value\r\n                  })\r\n                }\r\n              }}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            {ptype === 'Video' && (\r\n              <VideoRecorder\r\n                onRecordingComplete={(videoBlob) => {\r\n                  // Do something with the video...\r\n                  console.log('videoBlob', videoBlob)\r\n                }}\r\n              />\r\n            )}\r\n            {ptype === 'Voice' && (\r\n              <Recorder\r\n                record={true}\r\n                title={'New recording'}\r\n                audioURL={audioDetails.url}\r\n                showUIAudio\r\n                handleAudioStop={(data) => handleAudioStop(data)}\r\n                handleAudioUpload={(data) => handleAudioUpload(data)}\r\n                handleRest={() => handleRest()}\r\n              />\r\n            )}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"textarea\"\r\n              placeholder=\"Description\"\r\n              rows=\"5\"\r\n              value={props.taskToUpdate !== null ? taskDesc : newTask.desc}\r\n              onChange={(e) => {\r\n                if (props.taskToUpdate !== null) {\r\n                  settaskDesc(e.target.value)\r\n                } else {\r\n                  setnewTask({\r\n                    ...newTask,\r\n                    desc: e.target.value\r\n                  })\r\n                }\r\n              }}\r\n            />\r\n          </FormGroup>\r\n          <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n            {props.taskToUpdate !== null &&\r\n            props.taskToUpdate.tags &&\r\n            props.taskToUpdate.tags.length > 0\r\n              ? renderTags(props.taskToUpdate.tags)\r\n              : null}\r\n          </div>\r\n          <div\r\n            className=\"d-flex justify-content-end\"\r\n            style={{ textAlign: 'right' }}\r\n          >\r\n            <Button.Ripple\r\n              outline\r\n              className=\"mr-1 mb-1 button-label\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                props.addTask('close')\r\n                props.handleUndoChanges()\r\n                setnewTask({\r\n                  title: '',\r\n                  desc: '',\r\n                  tags: [],\r\n                  isCompleted: false,\r\n                  isImportant: false,\r\n                  isStarred: false\r\n                })\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button.Ripple>{' '}\r\n            <Button.Ripple\r\n              className=\"mb-1 button-label\"\r\n              color=\"warning\"\r\n              onClick={() => {\r\n                console.log('taskToUpdate', taskToUpdate)\r\n                // toast.success('Note Added Successfully!!')\r\n\r\n                if (props.taskToUpdate !== null) {\r\n                  const { isCompleted, isImportant, isStarred, tags } =\r\n                    taskToUpdate\r\n                  props.updateTask(\r\n                    taskToUpdate._id,\r\n                    taskTitle,\r\n                    taskDesc,\r\n                    taskToUpdate,\r\n                    isCompleted,\r\n                    isImportant,\r\n                    isStarred,\r\n                    tags\r\n                  )\r\n                } else {\r\n                  props.addNewTask(newTask)\r\n                }\r\n                props.addTask('close')\r\n                setnewTask({\r\n                  title: '',\r\n                  desc: '',\r\n                  tags: [],\r\n                  isCompleted: false,\r\n                  isImportant: false,\r\n                  isStarred: false\r\n                })\r\n              }}\r\n              disabled={\r\n                (taskTitle.length && taskDesc) ||\r\n                (newTask.title && newTask.desc)\r\n                  ? false\r\n                  : true\r\n              }\r\n            >\r\n              {validUpDate ? 'Update' : 'Add'}\r\n            </Button.Ripple>\r\n          </div>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  completeTask,\r\n  importantTask,\r\n  starTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n})(TaskSidebar)\r\n","import React, { useState } from 'react'\r\nimport Sidebar from 'react-sidebar'\r\nimport { ContextLayout } from '../../utility/context/Layout'\r\nimport DiarySidebar from './DiarySidebar'\r\nimport DiaryList from './DiaryList'\r\nimport TaskSidebar from './TaskSidebar'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport '../../assets/scss/plugins/extensions/toastr.scss'\r\nimport '../../assets/scss/pages/app-todo.scss'\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nconst Diary = (props) => {\r\n  const [addTask, setaddTask] = useState(false)\r\n  const [sidebarOpen, setsidebarOpen] = useState(false)\r\n  const [taskToUpdate, settaskToUpdate] = useState(null)\r\n  const [prevState, setprevState] = useState(null)\r\n\r\n  const onSetSidebarOpen = (open) => {\r\n    setsidebarOpen(open)\r\n  }\r\n\r\n  const handleAddTask = (status) => {\r\n    if (status === 'open') setaddTask(true)\r\n    else {\r\n      setaddTask(false)\r\n      settaskToUpdate(null)\r\n    }\r\n  }\r\n  const handleUpdateTask = (todo) => {\r\n    if (todo !== undefined) {\r\n      setaddTask(true)\r\n      settaskToUpdate(todo)\r\n    } else {\r\n      settaskToUpdate(null)\r\n    }\r\n  }\r\n\r\n  const handleUndoChanges = () => {\r\n    setprevState(true)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <h2 className=\"warning spacing nodisplay\">Secret Diary</h2>\r\n      <div className=\"todo-application position-relative\">\r\n        <div\r\n          className={`app-content-overlay ${\r\n            addTask || sidebarOpen ? 'show' : ''\r\n          }`}\r\n          onClick={() => {\r\n            handleAddTask('close')\r\n            onSetSidebarOpen(false)\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {(context) => (\r\n            <Sidebar\r\n              sidebar={\r\n                <DiarySidebar\r\n                  routerProps={props}\r\n                  addTask={handleAddTask}\r\n                  mainSidebar={onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={mql.matches}\r\n              open={sidebarOpen}\r\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n              touch={false}\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === 'rtl'}\r\n            >\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <DiaryList\r\n          routerProps={props}\r\n          handleUpdateTask={handleUpdateTask}\r\n          mainSidebar={onSetSidebarOpen}\r\n          prevState={prevState}\r\n          clearPrevState={() => {\r\n            setprevState(false)\r\n          }}\r\n        />\r\n        <TaskSidebar\r\n          addTask={handleAddTask}\r\n          addTaskState={addTask}\r\n          taskToUpdate={taskToUpdate}\r\n          mainSidebar={onSetSidebarOpen}\r\n          handleUndoChanges={handleUndoChanges}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Diary\r\n"],"sourceRoot":""}