{"version":3,"sources":["../node_modules/reactstrap/es/Alert.js","redux/actions/diary/index.js","views/Diary/DiarySidebar.js","views/Diary/DiaryList.js","views/Diary/TaskSidebar.js","views/Diary/Diary.js","../node_modules/react-select/dist/react-select.browser.esm.js"],"names":["propTypes","children","PropTypes","node","className","string","closeClassName","closeAriaLabel","cssModule","object","color","fade","bool","isOpen","toggle","func","tag","tagPropType","transition","shape","Fade","innerRef","oneOfType","defaultProps","_objectSpread2","unmountOnExit","Alert","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","closeClasses","alertTransition","baseClass","timeout","React","createElement","_extends","in","role","type","onClick","axios","defaults","baseURL","getTodos","routeParams","user","JSON","parse","localStorage","getItem","_id","dispatch","a","get","params","then","result","console","log","data","todos","catch","err","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","DiarySidebar","Fragment","mainSidebar","size","Button","Ripple","block","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","this","routerProps","location","pathname","Component","connect","filter","history","push","DiaryList","state","handleUpdateTask","currentLocation","handleOnChange","e","setState","target","searchTask","match","app","routerFilter","todosArr","length","filteredTodos","renderTodos","map","i","today","Date","createdAt","key","title","tags","stopPropagation","trashTask","style","fontSize","toLocaleDateString","weekday","year","month","day","desc","FormGroup","Input","placeholder","onChange","routeParam","todoApp","getState","post","response","val","colourOptions1","label","isFixed","TaskSidebar","ptype","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","prevState","addTaskState","icon","checked","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","updateLabel","classNamePrefix","ref","selectAssetRef","name","isClearable","rows","outline","alert","updateTask","addNewTask","disabled","ans","task","mql","window","matchMedia","Diary","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","open","mediaQueryChanged","handleAddTask","status","undefined","handleUndoChanges","arr","addListener","removeListener","Consumer","context","sidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction","index","manageState","Select"],"mappings":"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","file":"static/js/32.9a568a08.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2({}, Fade.defaultProps, {}, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import axios from \"axios\"\nimport { history } from \"../../../history\"\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\n\nexport const getTodos = routeParams => {\n  const user = JSON.parse(localStorage.getItem('logInUserData'))._id;\n  routeParams.user = user;\n  return async dispatch => {\n    await axios\n      .get(\"backendapi/diary/list\", {\n        params: routeParams\n      })\n      .then(result => {\n        //backendapi/diary/list\n        console.log('qqqqqqqqqqqqqqqq',routeParams)\n        console.log('qqqqqqqqqqqqqqqq', result.data)\n        dispatch({\n          type: \"GET_TODOS\",\n          todos: result.data,\n          routeParams\n        })\n      })\n      .catch(err => console.log(err))\n  }\n}\nexport const completeTask = todo => {\n  return dispatch => {\n    dispatch({ type: \"COMPLETE_TASK\", id: todo.id, value: todo.isCompleted })\n  }\n}\n\nexport const starTask = todo => {\n  return dispatch => {\n    Promise.all([\n      dispatch({ type: \"STAR_TASK\", id: todo.id, value: todo.isStarred })\n    ])\n  }\n}\n\nexport const importantTask = todo => {\n  \n  return dispatch => {\n    Promise.all([\n      dispatch({ type: \"IMPORTANT_TASK\", id: todo.id, value: todo.isImportant })\n    ])\n  }\n}\n\nexport const trashTask = id => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    axios\n      .post(\"/api/app/todo/trash-todo\", id)\n      .then(response => dispatch({ type: \"TRASH_TASK\", id }))\n      .then(dispatch(getTodos(params)))\n  }\n}\n\nexport const updateTodo = todo => {\n  console.log('ssssssssssssssss todo',todo)\n  const request = axios.post(\"/api/apps/todo/update-todo\", todo)\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    request.then(response => {\n      Promise.all([\n        dispatch({\n          type: \"UPDATE_TODO\",\n          todos: response.data\n        })\n      ]).then(() => dispatch(getTodos(params)))\n    })\n  }\n}\n\nexport const updateTask = (id, title, desc) => {\n  const ans = {\n    _id: id, title, desc\n  }\n  const request = axios.post(\"/backendapi/diary/update\", ans)\n  return dispatch => {\n    dispatch({ type: \"UPDATE_TASK\", id, title, desc })\n  }\n}\n\nexport const updateLabel = (id, label) => {\n  return (dispatch, getState) => {\n    dispatch({ type: \"UPDATE_LABEL\", label, id })\n  }\n}\n\nexport const addNewTask = task => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    const user = JSON.parse(localStorage.getItem('logInUserData'))._id;\n    task.user = user;\n    axios.post(\"/backendapi/diary/add\", task).then(response => {\n      dispatch({ type: \"ADD_TASK\", task })\n      dispatch(getTodos(params))\n    })\n  }\n}\n\nexport const searchTask = val => {\n  return dispatch => {\n    dispatch({\n      type: \"SEARCH_TASK\",\n      val\n    })\n  }\n}\n\nexport const changeFilter = filter => {\n  return dispatch => {\n    dispatch({ type: \"CHANGE_FILTER\", filter })\n    history.push(`/#/diary/${filter}`)\n    dispatch(getTodos({ filter }))\n  }\n}\n","import React from \"react\"\nimport { Button, ListGroup, ListGroupItem } from \"reactstrap\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { X, Layers, Star, Info, Check, Trash } from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport { changeFilter } from \"../../redux/actions/diary/index\"\nclass DiarySidebar extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"todo-app-menu\">\n          <div className=\"add-task\">\n            <Button.Ripple\n              block\n              className=\"btn-block my-1\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.addTask(\"open\")\n                this.props.mainSidebar(false)\n              }}\n            >\n              Add Notes\n            </Button.Ripple>\n          </div>\n          <PerfectScrollbar\n            className=\"sidebar-menu-list\"\n            options={{\n              wheelPropagation: false\n            }}\n          >\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0 pt-0\"\n                action\n                onClick={() => {\n                  this.props.changeFilter(\"all\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/diary/all\"\n                    ? true\n                    : false\n                }\n              >\n                <Layers size={22} />\n                <span className=\"align-middle ml-1\">All</span>\n              </ListGroupItem>\n            </ListGroup>\n            <hr />\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"starred\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/diary/starred\"\n                    ? true\n                    : false\n                }\n              >\n                <Star size={22} />\n                <span className=\"align-middle ml-1\">Starred</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"important\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/diary/important\"\n                    ? true\n                    : false\n                }\n              >\n                <Info size={22} />\n                <span className=\"align-middle ml-1\">Important</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"completed\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/diary/completed\"\n                    ? true\n                    : false\n                }\n              >\n                <Check size={22} />\n                <span className=\"align-middle ml-1\">Completed</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"trashed\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/diary/trashed\"\n                    ? true\n                    : false\n                }\n              >\n                <Trash size={22} />\n                <span className=\"align-middle ml-1\">Trashed</span>\n              </ListGroupItem>\n            </ListGroup>\n            <hr />\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"frontend\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/diary/frontend\"\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-primary align-middle\" />\n                <span className=\"align-middle ml-1\">Frontend</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"backend\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/diary/backend\"\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-warning align-middle\" />\n                <span className=\"align-middle ml-1\">Backend</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"doc\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/diary/doc\"\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-success align-middle\" />\n                <span className=\"align-middle ml-1\">Doc</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter(\"bug\")\n                }}\n                active={\n                  this.props.routerProps.location.pathname === \"/diary/bug\"\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-danger align-middle\" />\n                <span className=\"align-middle ml-1\">Bug</span>\n              </ListGroupItem>\n            </ListGroup>\n          </PerfectScrollbar>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(null, { changeFilter })(DiarySidebar)\n","import React from \"react\"\nimport { FormGroup, Input, Alert } from \"reactstrap\"\nimport { Menu, Search, Check, Info, Star, Trash } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport { connect } from \"react-redux\"\nimport {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask\n} from \"../../redux/actions/diary/index\"\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\nclass DiaryList extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.app.todo.routeParam !== state.currentLocation) {\n      return {\n        todos: props.app.todo.todos\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    todos: [],\n    handleUpdateTask: null,\n    currentLocation: this.props.routerProps.location.pathname,\n    value: \"\"\n  }\n  async componentDidMount() {\n    await this.props.getTodos(this.props.routerProps.match.params)\n    this.setState({\n      todos: this.props.app.todo.todos,\n      handleUpdateTask: this.props.handleUpdateTask\n    })\n  }\n\n  handleOnChange = e => {\n    this.setState({ value: e.target.value })\n    this.props.searchTask(e.target.value)\n  }\n\n  \n\n  render() {\n    const { todos, handleUpdateTask, value } = this.state\n    let routerFilter = this.props.routerProps.match.params.filter\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\n    let renderTodos =\n      todosArr.length > 0 ? (\n        todosArr.map((todo, i) => {\n          var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n          var today  = new Date(todo.createdAt);\n          return (\n            <li\n              className={`todo-item ${todo.isCompleted ? \"completed\" : \"\"}`}\n              key={i}\n              onClick={() => {\n                handleUpdateTask(todo)\n              }}\n            >\n               <Alert className=\"mt-1\" color={todo.isImportant ? \"danger\" : \"primary\"}>\n              <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\n                <div className=\"todo-title-area d-flex align-items-center\">\n                  <div className=\"title-wrapper d-flex\">\n                    {/* <Checkbox\n                      color=\"primary\"\n                      className=\"user-checkbox\"\n                      icon={<Check className=\"vx-icon\" size={12} />}\n                      label={\"\"}\n                      checked={todo.isCompleted}\n                      size=\"sm\"\n                      onClick={e => {\n                        e.stopPropagation()\n                        this.props.completeTask(todo)\n                      }}\n                      onChange={e => e.stopPropagation()}\n                    /> */}\n                    <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\n                    \n                    \n                  </div>\n                  \n                  {todo.tags.length > 0 ? (\n                    <div className=\"chip-wrapper\">\n                      {todo.tags.map((tag, i) => (\n                        <div className=\"chip mb-0\" key={i}>\n                          <div className=\"chip-body\">\n                            <span className=\"chip-text\">\n                              <span\n                                className={`bullet bullet-${\n                                  tag === \"backend\"\n                                    ? \"warning\"\n                                    : tag === \"doc\"\n                                    ? \"success\"\n                                    : tag === \"bug\"\n                                    ? \"danger\"\n                                    : \"primary\"\n                                } bullet-xs`}\n                              />\n                              <span className=\"text-capitalize ml-25\">\n                                \n                                {tag}\n                              </span>\n                            </span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : null}\n                </div>\n               \n               \n                    \n                <div\n                  className={`todo-item-action d-flex ${\n                    routerFilter === \"trashed\" ? \"justify-content-end\" : \"\"\n                  }`}\n                >\n                  <div\n                    className={`todo-item-info d-inline-block ${\n                      routerFilter === \"trashed\" ? \"mr-1\" : \"mr-1 mr-sm-0\"\n                    }`}\n                    onClick={e => {\n                      e.stopPropagation()\n                      this.props.importantTask(todo)\n                    }}\n                  >\n                    <Info\n                      size={17}\n                      className={`${todo.isImportant ? \"text-danger\" : \"\"}`}\n                    />\n                  </div>\n                  <div\n                    className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\n                    onClick={e => {\n                      e.stopPropagation()\n                      this.props.starTask(todo)\n                    }}\n                  >\n                    <Star\n                      size={17}\n                      className={`${todo.isStarred ? \"text-warning\" : \"\"}`}\n                    />\n                  </div>\n                  {routerFilter !== \"trashed\" ? (\n                    <div\n                      className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\n                      onClick={e => {\n                        e.stopPropagation()\n                        this.props.trashTask(todo.id)\n                      }}\n                    >\n                      <Trash size={17} />\n                    </div>\n                  ) : null}\n                </div>\n           \n              </div>\n              <p style={{fontSize:'8px'}}>{today.toLocaleDateString(\"en-US\", options)}</p>\n              {todo.desc.length > 0 ? (\n                <p className=\"todo-desc truncate mb-0\">{todo.desc}</p>\n              ) : (\n                \"\"\n              )}\n              </Alert>\n            </li>\n          )\n        })\n      ) : (\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\n          No tasks at this time\n        </p>\n      )\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"todo-app-area\">\n          <div className=\"todo-app-list-wrapper\">\n            <div className=\"todo-app-list\">\n              <div className=\"app-fixed-search\">\n                <div\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\n                  onClick={() => this.props.mainSidebar(true)}\n                >\n                  <Menu size={24} />\n                </div>\n                <FormGroup className=\"position-relative has-icon-left m-0 d-inline-block d-lg-block\">\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    onChange={e => this.handleOnChange(e)}\n                    value={value}\n                  />\n                  <div className=\"form-control-position\">\n                    <Search size={15} />\n                  </div>\n                </FormGroup>\n              </div>\n              <PerfectScrollbar\n                className=\"todo-task-list\"\n                options={{\n                  wheelPropagation: false\n                }}\n              >\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\n              </PerfectScrollbar>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    app: state.todoApp\n  }\n}\nexport default connect(mapStateToProps, {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask\n})(DiaryList)\n","import React from \"react\";\nimport {\n  Input,\n  Button,\n  FormGroup,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { X, Info, Star, Tag, Check } from \"react-feather\";\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { connect } from \"react-redux\";\nimport {\n  starTask,\n  completeTask,\n  importantTask,\n  updateTask,\n  updateLabel,\n  addNewTask,\n} from \"../../redux/actions/diary/index\";\nconst colourOptions1 = [\n  {\n    value: \"Text\",\n    label: \"Text\",\n    color: \"#00B8D9\",\n    isFixed: true,\n  },\n  {\n    value: \"Scribble\",\n    label: \"Scribble\",\n    color: \"#00B8D9\",\n    isFixed: true,\n  },\n  {\n    value: \"Attachment\",\n    label: \"Attachment\",\n    color: \"#00B8D9\",\n    isFixed: true,\n  },\n  {\n    value: \"Voice\",\n    label: \"Voice\",\n    color: \"#0052CC\",\n    isFixed: true,\n  },\n  {\n    value: \"Video\",\n    label: \"Video\",\n    color: \"#0052CC\",\n    isFixed: true,\n  },\n];\nclass TaskSidebar extends React.Component {\n  // static getDerivedStateFromProps (props, state){\n  //   if (\n  //    ( props.taskToUpdate !== null &&\n  //     props.taskToUpdate.title !== state.taskTitle) ||\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\n  //   ) {\n  //     let todosArr = props.app.todo.todos\n  //     let receivedTask =\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\n  //     let taskToUpdate, taskTitle, taskDesc\n  //     filteredTask.map(task => {\n  //       return (\n  //         (taskToUpdate = task),\n  //         (taskTitle = task.title),\n  //         (taskDesc = task.desc)\n  //       )\n  //     })\n  //     return {\n  //       taskToUpdate,\n  //       taskTitle,\n  //       taskDesc\n  //     }\n  //   }\n  //   return null\n  // }\n\n  state = {\n    ptype: \"\",\n    taskToUpdate: null,\n    taskTitle: \"\",\n    taskDesc: \"\",\n    taskStatus: false,\n    taskStarred: false,\n    taskImportant: false,\n    newTask: {\n      title: \"\",\n      desc: \"\",\n      tags: [],\n      isCompleted: false,\n      isImportant: false,\n      isStarred: false,\n    },\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (this.props.taskToUpdate !== null &&\n        this.state.taskToUpdate !== this.props.taskToUpdate) ||\n      (this.props.taskToUpdate !== null &&\n        this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\n      (this.props.taskToUpdate !== null &&\n        this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\n      (this.props.taskToUpdate !== null &&\n        this.state.taskImportant !== this.props.taskToUpdate.isImportant)\n    ) {\n      this.setState({\n        taskToUpdate: this.props.taskToUpdate,\n        taskTitle: this.props.taskToUpdate.title,\n        taskDesc: this.props.taskToUpdate.desc,\n        taskStatus: this.props.taskToUpdate.isCompleted,\n        taskStarred: this.props.taskToUpdate.isStarred,\n        taskImportant: this.props.taskToUpdate.isImportant,\n      });\n    } else {\n      return;\n    }\n  }\n\n  handleNewTaskTags = (tag) => {\n    let tagsArr = this.state.newTask.tags;\n    if (tagsArr.includes(tag)) {\n      tagsArr.splice(tagsArr.indexOf(tag), 1);\n    } else {\n      tagsArr.push(tag);\n    }\n    this.setState({\n      ...this.state.newTask,\n      tags: tag,\n    });\n  };\n\n  renderTags = (taskArr) => {\n    return taskArr.map((tag, i) => (\n      <div className=\"chip mb-0 mr-50\" key={i}>\n        <div className=\"chip-body\">\n          <span className=\"chip-text\">\n            <span\n              className={`bullet bullet-${\n                tag === \"backend\"\n                  ? \"warning\"\n                  : tag === \"doc\"\n                  ? \"success\"\n                  : tag === \"bug\"\n                  ? \"danger\"\n                  : \"primary\"\n              } bullet-xs`}\n            />\n            <span className=\"text-capitalize ml-25\">{tag}</span>\n          </span>\n        </div>\n      </div>\n    ));\n  };\n\n  render() {\n    const {\n      taskToUpdate,\n      taskTitle,\n      taskDesc,\n      newTask,\n      taskStatus,\n    } = this.state;\n\n    return (\n      <div\n        className={`task-sidebar ${\n          this.props.addTaskState === true ? \"show\" : \"\"\n        }`}\n      >\n        <div className=\"task-header\">\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"task-type-title text-bold-600\">\n              <h3>\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\n                  ? \"Update Task\"\n                  : \"Add Task\"}\n              </h3>\n            </div>\n            <div className=\"close-icon\">\n              <X\n                className=\"cursor-pointer\"\n                size={20}\n                onClick={() => this.props.addTask(\"close\")}\n              />\n            </div>\n          </div>\n        </div>\n        <PerfectScrollbar>\n          <div className=\"task-body\">\n            <div className=\"d-flex justify-content-between mb-2\">\n              <div className=\"mark-complete\">\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && (\n                  <Checkbox\n                    color=\"primary\"\n                    className=\"user-checkbox\"\n                    icon={<Check className=\"vx-icon\" size={15} />}\n                    label={\"\"}\n                    checked={taskStatus}\n                    onChange={(e) => {\n                      this.props.completeTask(this.props.taskToUpdate);\n                    }}\n                  />\n                )}\n              </div>\n              <div className=\"task-actions\">\n                <Info\n                  size={20}\n                  className={`mr-50 ${\n                    (this.props.taskToUpdate !== null &&\n                      this.state.taskImportant) ||\n                    newTask.isImportant\n                      ? \"text-success\"\n                      : \"\"\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null) {\n                      this.props.importantTask(this.props.taskToUpdate);\n                    } else {\n                      this.setState({\n                        newTask: {\n                          ...this.state.newTask,\n                          isImportant: !this.state.newTask.isImportant,\n                        },\n                      });\n                    }\n                  }}\n                />\n                <Star\n                  size={20}\n                  className={`mr-50 ${\n                    (this.props.taskToUpdate !== null &&\n                      this.state.taskStarred) ||\n                    newTask.isStarred\n                      ? \"text-warning\"\n                      : \"\"\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null) {\n                      this.props.starTask(this.props.taskToUpdate);\n                    } else {\n                      this.setState({\n                        newTask: {\n                          ...this.state.newTask,\n                          isStarred: !this.state.newTask.isStarred,\n                        },\n                      });\n                    }\n                  }}\n                />\n                <UncontrolledDropdown className=\"d-inline-block\">\n                  <DropdownToggle tag=\"span\">\n                    <Tag className=\"mr-50\" size={20} />\n                  </DropdownToggle>\n                  <DropdownMenu tag=\"ul\" right>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Frontend\"}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\n                              \"frontend\"\n                            )) ||\n                          newTask.tags.includes(\"frontend\")\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"frontend\");\n                          else this.handleNewTaskTags(\"frontend\");\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Backend\"}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"backend\")) ||\n                          newTask.tags.includes(\"backend\")\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"backend\");\n                          else this.handleNewTaskTags(\"backend\");\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Doc\"}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"doc\")) ||\n                          newTask.tags.includes(\"doc\")\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"doc\");\n                          else this.handleNewTaskTags(\"doc\");\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={\"Bug\"}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\"bug\")) ||\n                          newTask.tags.includes(\"bug\")\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                          e.stopPropagation();\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, \"bug\");\n                          else this.handleNewTaskTags(\"bug\");\n                        }}\n                      />\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </div>\n            <FormGroup className=\"form-label-group\">\n              <Select\n                className=\"React\"\n                classNamePrefix=\"select\"\n                // defaultValue={colourOptions1[0]}\n\n                ref={this.state.selectAssetRef}\n                name=\"color\"\n                options={colourOptions1}\n                isClearable={true}\n                placeholder=\"Select Message Type...\"\n                onChange={(e) => {\n                  this.setState({\n                    ptype: e ? e.value : \"\",\n                  });\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\n                }\n                onChange={(e) => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.setState({\n                      taskTitle: e.target.value,\n                    });\n                  } else {\n                    this.setState({\n                      newTask: {\n                        ...this.state.newTask,\n                        title: e.target.value,\n                      },\n                    });\n                  }\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"textarea\"\n                placeholder=\"Description\"\n                rows=\"5\"\n                value={\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\n                }\n                onChange={(e) => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.setState({\n                      taskDesc: e.target.value,\n                    });\n                  } else {\n                    this.setState({\n                      newTask: {\n                        ...this.state.newTask,\n                        desc: e.target.value,\n                      },\n                    });\n                  }\n                }}\n              />\n            </FormGroup>\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\n              {this.props.taskToUpdate !== null &&\n              this.props.taskToUpdate.tags &&\n              this.props.taskToUpdate.tags.length > 0\n                ? this.renderTags(this.props.taskToUpdate.tags)\n                : null}\n            </div>\n\n            <hr className=\"my-2\" />\n            <div className=\"d-flex justify-content-end\">\n              <Button.Ripple\n                outline\n                className=\"mr-1 mb-1\"\n                color=\"secondary\"\n                onClick={() => {\n                  this.props.addTask(\"close\");\n                  this.setState({\n                    newTask: {\n                      title: \"\",\n                      desc: \"\",\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false,\n                    },\n                  });\n                }}\n              >\n                Cancel\n              </Button.Ripple>{\" \"}\n              <Button.Ripple\n                className=\"mb-1\"\n                color=\"warning\"\n                onClick={() => {\n                  console.log(\"taskToUpdate\", taskToUpdate);\n                  alert(\"hi\");\n\n                  if (this.props.taskToUpdate !== null) {\n                    this.props.updateTask(\n                      taskToUpdate._id,\n                      taskTitle,\n                      taskDesc\n                    );\n                  } else {\n                    this.props.addNewTask(this.state.newTask);\n                  }\n                  this.props.addTask(\"close\");\n                  this.setState({\n                    newTask: {\n                      title: \"\",\n                      desc: \"\",\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false,\n                    },\n                  });\n                }}\n                disabled={\n                  taskTitle.length > 0 || newTask.title.length > 0\n                    ? false\n                    : true\n                }\n              >\n                {taskToUpdate &&\n                taskToUpdate.id &&\n                this.props.taskToUpdate !== null\n                  ? \"Update\"\n                  : \"Add\"}\n              </Button.Ripple>\n            </div>\n          </div>\n        </PerfectScrollbar>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    app: state.todoApp,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  completeTask,\n  importantTask,\n  starTask,\n  updateTask,\n  updateLabel,\n  addNewTask,\n})(TaskSidebar);\n","import React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { ContextLayout } from \"../../utility/context/Layout\";\nimport DiarySidebar from \"./DiarySidebar\";\nimport DiaryList from \"./DiaryList\";\nimport TaskSidebar from \"./TaskSidebar\";\nimport \"../../assets/scss/pages/app-todo.scss\";\nconst mql = window.matchMedia(`(min-width: 992px)`);\n\nclass Diary extends React.Component {\n  state = {\n    addTask: false,\n    sidebarDocked: mql.matches,\n    sidebarOpen: false,\n    taskToUpdate: null,\n    prevState: null,\n  };\n  UNSAFE_componentWillMount() {\n    mql.addListener(this.mediaQueryChanged);\n  }\n\n  componentWillUnmount() {\n    mql.removeListener(this.mediaQueryChanged);\n  }\n\n  onSetSidebarOpen = (open) => {\n    this.setState({ sidebarOpen: open });\n  };\n\n  mediaQueryChanged = () => {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false });\n  };\n\n  handleAddTask = (status) => {\n    status === \"open\"\n      ? this.setState({ addTask: true })\n      : this.setState({ addTask: false, taskToUpdate: null });\n  };\n  handleUpdateTask = (todo) => {\n    if (todo !== undefined) {\n      this.setState({ addTask: true, taskToUpdate: todo });\n    } else {\n      this.setState({ taskToUpdate: null });\n    }\n  };\n\n  handleUndoChanges = (arr) => {\n    this.setState({\n      prevState: arr,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"warning\">Secret Diary</h2>\n        <div className=\"todo-application position-relative\">\n          <div\n            className={`app-content-overlay ${\n              this.state.addTask || this.state.sidebarOpen ? \"show\" : \"\"\n            }`}\n            onClick={() => {\n              this.handleAddTask(\"close\");\n              this.onSetSidebarOpen(false);\n            }}\n          />\n          <ContextLayout.Consumer>\n            {(context) => (\n              <Sidebar\n                sidebar={\n                  <DiarySidebar\n                    routerProps={this.props}\n                    addTask={this.handleAddTask}\n                    mainSidebar={this.onSetSidebarOpen}\n                  />\n                }\n                docked={this.state.sidebarDocked}\n                open={this.state.sidebarOpen}\n                sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\n                touch={false}\n                contentClassName=\"sidebar-children d-none\"\n                pullRight={context.state.direction === \"rtl\"}\n              >\n                \"\"\n              </Sidebar>\n            )}\n          </ContextLayout.Consumer>\n          <DiaryList\n            routerProps={this.props}\n            handleUpdateTask={this.handleUpdateTask}\n            mainSidebar={this.onSetSidebarOpen}\n            prevState={this.state.prevState}\n          />\n          <TaskSidebar\n            addTask={this.handleAddTask}\n            addTaskState={this.state.addTask}\n            taskToUpdate={this.state.taskToUpdate}\n            newTask={this.state.newTask}\n            mainSidebar={this.onSetSidebarOpen}\n            handleUndoChanges={this.handleUndoChanges}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Diary;\n","import '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport '@babel/runtime/helpers/esm/extends';\nimport '@babel/runtime/helpers/esm/toConsumableArray';\nimport '@babel/runtime/helpers/esm/objectSpread';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport React, { Component } from 'react';\nimport memoizeOne from 'memoize-one';\nimport { CacheProvider } from '@emotion/core';\nimport 'react-dom';\nimport 'prop-types';\nimport '@babel/runtime/helpers/esm/typeof';\nimport './chunk-39d3fda8.browser.esm.js';\nexport { y as components } from './chunk-80640036.browser.esm.js';\nimport { S as Select } from './base/dist/react-select-cac0a5ae.browser.esm.js';\nexport { c as createFilter, a as defaultTheme, m as mergeStyles } from './base/dist/react-select-cac0a5ae.browser.esm.js';\nimport '@emotion/css';\nimport '@babel/runtime/helpers/esm/taggedTemplateLiteral';\nimport 'react-input-autosize';\nimport { m as manageState } from './chunk-b36baf1a.browser.esm.js';\nimport createCache from '@emotion/cache';\n\nvar NonceProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NonceProvider, _Component);\n\n  function NonceProvider(props) {\n    var _this;\n\n    _classCallCheck(this, NonceProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NonceProvider).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"createEmotionCache\", function (nonce) {\n      return createCache({\n        nonce: nonce\n      });\n    });\n\n    _this.createEmotionCache = memoizeOne(_this.createEmotionCache);\n    return _this;\n  }\n\n  _createClass(NonceProvider, [{\n    key: \"render\",\n    value: function render() {\n      var emotionCache = this.createEmotionCache(this.props.nonce);\n      return React.createElement(CacheProvider, {\n        value: emotionCache\n      }, this.props.children);\n    }\n  }]);\n\n  return NonceProvider;\n}(Component);\n\nvar index = manageState(Select);\n\nexport default index;\nexport { NonceProvider };\n"],"sourceRoot":""}