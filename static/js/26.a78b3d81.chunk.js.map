{"version":3,"sources":["views/DocumentVault/AddAssets.js","views/DocumentVault/DocumentVault.js","components/@vuexy/checkbox/CheckboxesVuexy.js","views/ui-elements/cards/analytics/GoalOverview.js","redux/actions/data-list/index.js","assets/img/slider/banner-25.jpg"],"names":["colourOptions1","value","label","color","isFixed","colourOptions2","AddAssets","state","assetType","selectAssetRef","React","createRef","selectNomineeRef","selectCustomRef","nomineeOption","nominees","nomineeList","selectedTemplate","template","Custom","key","val","type","Notes","changeValue","e","k","idx","findIndex","x","console","log","setState","callAddAsset","preventDefault","user","JSON","parse","localStorage","getItem","nominee","as","assetDetails","assets","push","setItem","stringify","toast","success","clearAsset","clearCustomField","axios","post","_id","then","res","catch","addfield","fname","ftype","deletable","changeNominee","event","forEach","id","name","current","select","clearValue","this","props","getData","parsedFilter","Row","Col","lg","md","sm","Card","CardHeader","CardTitle","CardBody","Form","className","FormGroup","classNamePrefix","ref","options","isClearable","placeholder","onChange","undefined","Label","for","isMulti","Object","keys","includes","map","style","zIndex","float","marginBottom","marginRight","size","Input","ev","target","Button","Ripple","disabled","length","onClick","outline","dataList","data","temp","relation","Component","connect","ProgrammaticallyDropzone","useState","files","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","setfilesOndrop","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","thumbs","src","onError","img5","alt","useEffect","revokeObjectURL","resetDropzone","Assets","active","reset","activeTab","collapseID","status","collapseItems","title","content","toggle","tab","toggleCollapse","prevState","submitDropzone","onEntered","onEntering","onExited","onExiting","accordionMarginItems","collapseItem","classnames","closing","opening","Collapse","isOpen","Fragment","TabContent","TabPane","tabId","Nav","tabs","NavItem","NavLink","show","assetShow","CheckBoxesVuexy","defaultChecked","checked","icon","defaults","baseURL","params","dispatch","a","userData","get","response","totalPages","getSpendData","getInitialData","getSpendInitialData","filterData","deleteData","obj","updateData","getState","addData","module","exports"],"mappings":"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","file":"static/js/26.a78b3d81.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"../../assets/scss/plugins/extensions/toastr.scss\";\r\nimport { getData } from \"../../redux/actions/data-list/\";\r\nimport { HelpCircle } from \"react-feather\";\r\nimport GoalOverview from \"../ui-elements/cards/analytics/GoalOverview\";\r\nimport Select from \"react-select\";\r\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Check, Delete } from \"react-feather\";\r\nimport Axios from \"axios\";\r\n\r\nlet $primary = \"#7367F0\",\r\n  $success = \"#28C76F\",\r\n  $danger = \"#EA5455\",\r\n  $warning = \"#FF9F43\",\r\n  $primary_light = \"#9c8cfc\",\r\n  $warning_light = \"#FFC085\",\r\n  $danger_light = \"#f29292\",\r\n  $stroke_color = \"#b9c3cd\",\r\n  $label_color = \"#e7eef7\";\r\n\r\nconst colourOptions = [\r\n  { value: \"Aaquib\", label: \"Aaquib\", color: \"#00B8D9\", isFixed: true },\r\n  { value: \"Vipin\", label: \"Vipin\", color: \"#0052CC\", isFixed: true },\r\n  { value: \"Aqueel\", label: \"Aqueel\", color: \"#5243AA\", isFixed: true },\r\n  { value: \"Vatsal\", label: \"Vatsal\", color: \"#FF5630\", isFixed: false },\r\n  { value: \"Pritam\", label: \"Pritam\", color: \"#FF8B00\", isFixed: false },\r\n];\r\nconst colourOptions1 = [\r\n  {\r\n    value: \"Bank Details\",\r\n    label: \"Bank Details\",\r\n    color: \"#00B8D9\",\r\n    isFixed: true,\r\n  },\r\n  {\r\n    value: \"Fixed Deposit\",\r\n    label: \"Fixed Deposit\",\r\n    color: \"#0052CC\",\r\n    isFixed: true,\r\n  },\r\n  { value: \"Notes\", label: \"Notes\", color: \"#0052CC\", isFixed: true },\r\n  { value: \"Custom\", label: \"Custom\", color: \"#0052CC\", isFixed: true },\r\n];\r\n\r\nconst colourOptions2 = [\r\n  { value: \"Text\", label: \"Text\", color: \"#00B8D9\", isFixed: true },\r\n  { value: \"textarea\", label: \"Text Area\", color: \"#0052CC\", isFixed: true },\r\n  { value: \"Date\", label: \"Date\", color: \"#0052CC\", isFixed: true },\r\n  { value: \"Number\", label: \"Number\", color: \"#0052CC\", isFixed: true },\r\n  { value: \"File\", label: \"File\", color: \"#0052CC\", isFixed: true },\r\n];\r\n\r\nclass AddAssets extends React.Component {\r\n  state = {\r\n    assetType: \"\",\r\n    selectAssetRef: React.createRef(),\r\n    selectNomineeRef: React.createRef(),\r\n    selectCustomRef: React.createRef(),\r\n    nomineeOption: [],\r\n    nominees: [],\r\n    nomineeList: [],\r\n    selectedTemplate: [],\r\n    template: {\r\n      Custom: [\r\n        {\r\n          key: \"Asset Name\",\r\n          val: \"\",\r\n          type: \"Text\",\r\n        },\r\n      ],\r\n      Notes: [\r\n        {\r\n          key: \"Notes\",\r\n          val: \"\",\r\n          type: \"textarea\",\r\n        },\r\n        {\r\n          key: \"Notes End Date\",\r\n          val: \"\",\r\n          type: \"date\",\r\n        },\r\n      ],\r\n      \"Fixed Deposit\": [\r\n        {\r\n          key: \"Asset Name / Alias\",\r\n          val: \"\",\r\n          type: \"Text\",\r\n        },\r\n        {\r\n          key: \"Bank Accrount No\",\r\n          val: \"\",\r\n          type: \"Number\",\r\n        },\r\n        {\r\n          key: \"IFSC\",\r\n          val: \"\",\r\n          type: \"text\",\r\n        },\r\n        {\r\n          key: \"Amount\",\r\n          val: \"\",\r\n          type: \"Number\",\r\n        },\r\n        {\r\n          key: \"FD Nominee Registered at Bank\",\r\n          val: \"\",\r\n          type: \"text\",\r\n        },\r\n        {\r\n          key: \"FD Maturity Date\",\r\n          val: \"\",\r\n          type: \"Date\",\r\n        },\r\n        {\r\n          key: \"Attachments\",\r\n          val: \"\",\r\n          type: \"File\",\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.dataList.data.length !== state.nomineeList.length) {\r\n      const nomineeOption = state.nomineeOption;\r\n      props.dataList.data.forEach((e) => {\r\n        const temp = {\r\n          value: e._id,\r\n          label: e.name + \" - \" + e.relation,\r\n          color: \"#00B8D9\",\r\n          isFixed: false,\r\n        };\r\n        nomineeOption.push(temp);\r\n      });\r\n\r\n      return {\r\n        nomineeList: props.dataList.data,\r\n        nomineeOption: nomineeOption,\r\n      };\r\n    }\r\n\r\n    // Return null if the state hasn't changed\r\n    return null;\r\n  }\r\n  componentDidMount() {\r\n    this.props.getData(this.props.parsedFilter);\r\n    // this.props.getInitialData()\r\n  }\r\n\r\n  changeValue = (e, k) => {\r\n    const selectedTemplate = this.state.selectedTemplate;\r\n    const idx = selectedTemplate.findIndex((x) => x.key === k.key);\r\n    console.log(\"ZZZZZZZZZZZ\", e, idx);\r\n    selectedTemplate[idx].val = e;\r\n    this.setState({ selectedTemplate });\r\n  };\r\n\r\n  callAddAsset = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state.selectedTemplate);\r\n    const user = JSON.parse(localStorage.getItem(\"logInUserData\"));\r\n    console.log(\"sssssssssssssssss\", this.state.nominee);\r\n    const as = {\r\n      assetType: this.state.assetType,\r\n      assetDetails: this.state.selectedTemplate,\r\n      nominees: this.state.nominees,\r\n    };\r\n    user.assets.push(as);\r\n    localStorage.setItem(\"logInUserData\", JSON.stringify(user));\r\n    toast.success(\"Asset addedd successfully!\");\r\n    this.clearAsset();\r\n    this.clearCustomField();\r\n    axios\r\n      .post(\"/backendapi/adddetails\", { _id: user._id, assets: user.assets })\r\n      .then((res) => {})\r\n      .catch();\r\n  };\r\n  addfield = () => {\r\n    const selectedTemplate = this.state.selectedTemplate;\r\n    selectedTemplate.push({\r\n      key: this.state.fname,\r\n      val: \"\",\r\n      type: this.state.ftype,\r\n      deletable: true,\r\n    });\r\n    console.log(\"selectedTemplate\", selectedTemplate);\r\n    this.setState({ selectedTemplate, fname: \"\", ftype: \"\" });\r\n  };\r\n  changeNominee = (event) => {\r\n    const nominees = this.state.nominees;\r\n    event.forEach((e) => {\r\n      nominees.push({ id: e.value, name: e.label });\r\n      console.log(\"ssssssssssssssssssssss2\", e);\r\n    });\r\n    this.setState({ nominees });\r\n\r\n    // console.log(event.target);\r\n    // console.log(event.target.value);\r\n  };\r\n\r\n  clearAsset = () => {\r\n    this.state.selectAssetRef.current.select.clearValue();\r\n    this.state.selectNomineeRef.current.select.clearValue();\r\n    this.setState({ assetType: \"\", selectedTemplate: [], nominees: [] });\r\n  };\r\n  clearCustomField = () => {\r\n    this.setState({ fname: \"\", ftype: \"\" });\r\n    this.state.selectCustomRef.current.select.clearValue();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <ToastContainer />\r\n        <Col lg=\"8\" md=\"6\" sm=\"12\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Add New Asset</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Form className=\"mt-2\">\r\n                <Row>\r\n                  <Col md=\"6\" sm=\"12\">\r\n                    <FormGroup className=\"form-label-group\">\r\n                      <Select\r\n                        className=\"React\"\r\n                        classNamePrefix=\"select\"\r\n                        //defaultValue={colourOptions1[0]}\r\n\r\n                        ref={this.state.selectAssetRef}\r\n                        name=\"color\"\r\n                        options={colourOptions1}\r\n                        isClearable={true}\r\n                        placeholder=\"Select Investment Type...\"\r\n                        onChange={(e) => {\r\n                          {\r\n                            this.setState({\r\n                              fname: \"\",\r\n                              ftype: \"\",\r\n                              assetType: e ? e.value : undefined,\r\n                              selectedTemplate: e\r\n                                ? this.state.template[e.value]\r\n                                : {},\r\n                            });\r\n                          }\r\n                        }}\r\n                      />\r\n                      <Label for=\"nameMulti\">Asset Type</Label>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\" sm=\"12\">\r\n                    <FormGroup className=\"form-label-group\">\r\n                      <Select\r\n                        //defaultValue={[colourOptions[2], colourOptions[3]]}\r\n                        isMulti\r\n                        name=\"nominee\"\r\n                        options={this.state.nomineeOption}\r\n                        ref={this.state.selectNomineeRef}\r\n                        className=\"React\"\r\n                        classNamePrefix=\"select\"\r\n                        placeholder=\"Select Nominees...\"\r\n                        id=\"nominee\"\r\n                        onChange={this.changeNominee}\r\n                        //onChange={(e) => {{this.setState({nominee: e ? e.value : undefined})}} }\r\n                      />\r\n                      <Label>Nominee</Label>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  {/* {this.state.assetType  &&\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"nameMulti\"\r\n                    placeholder=\"First Name\"\r\n                  />\r\n                  <Label for=\"nameMulti\">First Name</Label>\r\n                </FormGroup>\r\n              </Col>}\r\n              {this.state.assetType  &&\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"lastname\"\r\n                    id=\"lastNameMulti\"\r\n                    placeholder=\"Last Name\"\r\n                  />\r\n                  <Label for=\"lastNameMulti\">Last Name</Label>\r\n                </FormGroup>\r\n              </Col>}\r\n              {this.state.assetType === \"Fixed Deposit\"  &&\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    id=\"cityMulti\"\r\n                    placeholder=\"Fixed Deposit Account Number\"\r\n                  />\r\n                  <Label for=\"cityMulti\">Fixed Deposit Account Number</Label>\r\n                </FormGroup>\r\n              </Col>} */}\r\n                  {Object.keys(this.state.template).includes(\r\n                    this.state.assetType\r\n                  ) &&\r\n                    this.state.template[this.state.assetType].map((e) => {\r\n                      return (\r\n                        <Col md=\"6\" sm=\"12\">\r\n                          <FormGroup className=\"form-label-group\">\r\n                            {e.deletable && (\r\n                              <Delete\r\n                                style={{\r\n                                  zIndex: 999,\r\n                                  float: \"right\",\r\n                                  marginBottom: \"-8px\",\r\n                                  marginRight: \"-5px\",\r\n                                }}\r\n                                className=\"primary\"\r\n                                size={15}\r\n                              />\r\n                            )}\r\n                            <Input\r\n                              type={e.type}\r\n                              name=\"city\"\r\n                              id=\"cityMulti\"\r\n                              placeholder={e.key}\r\n                              onChange={(ev) => {\r\n                                this.changeValue(\r\n                                  ev.target ? ev.target.value : ev.value,\r\n                                  e\r\n                                );\r\n                              }}\r\n                            />\r\n                            <Label for=\"cityMulti\">{e.key}</Label>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                  {/* {this.state.assetType === \"Fixed Deposit\" &&\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"country\"\r\n                    id=\"CountryMulti\"\r\n                    placeholder=\"Bank Name\"\r\n                  />\r\n                  <Label for=\"CountryMulti\">Bank Name</Label>\r\n                </FormGroup>\r\n              </Col>}\r\n              {this.state.assetType === \"Bank Details\"  &&\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"city\"\r\n                    id=\"cityMulti\"\r\n                    placeholder=\"Bank Account Number\"\r\n                  />\r\n                  <Label for=\"cityMulti\">Bank Account Number</Label>\r\n                </FormGroup>\r\n              </Col>}\r\n              {this.state.assetType === \"Bank Details\" &&\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"country\"\r\n                    id=\"CountryMulti\"\r\n                    placeholder=\"Bank Name\"\r\n                  />\r\n                  <Label for=\"CountryMulti\">Bank Name</Label>\r\n                </FormGroup>\r\n              </Col>}\r\n              {this.state.assetType === \"Property\" &&\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"country\"\r\n                    id=\"CountryMulti\"\r\n                    placeholder=\"Property Location\"\r\n                  />\r\n                  <Label for=\"CountryMulti\">Property Location</Label>\r\n                </FormGroup>\r\n              </Col>} */}\r\n                  {/* <Col md=\"6\" sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"company\"\r\n                    id=\"CompanyMulti\"\r\n                    placeholder=\"Company\"\r\n                  />\r\n                  <Label for=\"CompanyMulti\">Company</Label>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"Email\"\r\n                    id=\"EmailMulti\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <Label for=\"EmailMulti\">Email</Label>\r\n                </FormGroup>\r\n              </Col> */}\r\n                  {/* <Col sm=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    icon={<Check className=\"vx-icon\" size={16} />}\r\n                    label=\"Remember Me\"\r\n                    defaultChecked={false}\r\n                  />\r\n                </FormGroup>\r\n              </Col> */}\r\n                  <Col sm=\"12\">\r\n                    <FormGroup className=\"form-label-group\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"mr-1 mb-1\"\r\n                        disabled={this.state.nominees.length === 0}\r\n                        onClick={(e) => {\r\n                          this.callAddAsset(e);\r\n                        }}\r\n                      >\r\n                        Submit\r\n                      </Button.Ripple>\r\n                      <Button.Ripple\r\n                        outline\r\n                        color=\"warning\"\r\n                        type=\"reset\"\r\n                        className=\"mb-1\"\r\n                        onClick={(e) => {\r\n                          this.clearAsset();\r\n                        }}\r\n                      >\r\n                        Reset\r\n                      </Button.Ripple>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"6\" sm=\"12\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Add Custum Field</CardTitle>\r\n              <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  <FormGroup className=\"form-label-group\">\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"Email\"\r\n                      disabled={this.state.assetType === \"\"}\r\n                      id=\"EmailMulti\"\r\n                      value={this.state.fname}\r\n                      placeholder=\"Enter Field Name\"\r\n                      onChange={(e) => {\r\n                        this.setState({ fname: e.target.value });\r\n                      }}\r\n                    />\r\n                    <Label for=\"EmailMulti\">Enter Field Name</Label>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col sm=\"12\">\r\n                  <FormGroup\r\n                    className=\"form-label-group\"\r\n                    disabled={this.state.assetType === undefined}\r\n                  >\r\n                    <Select\r\n                      className=\"React\"\r\n                      ref={this.state.selectCustomRef}\r\n                      disabled={this.state.assetType === undefined}\r\n                      classNamePrefix=\"select\"\r\n                      isClearable={true}\r\n                      //defaultValue={colourOptions1[0]}\r\n                      name=\"color\"\r\n                      options={colourOptions2}\r\n                      placeholder=\"Select Field Type...\"\r\n                      onChange={(e) =>\r\n                        this.setState({ ftype: e ? e.value : \" \" })\r\n                      }\r\n                    />\r\n                    <Label for=\"nameMulti\">Field Type</Label>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <FormGroup className=\"form-label-group\">\r\n                    <Button.Ripple\r\n                      color=\"primary\"\r\n                      disabled={this.state.assetType === undefined}\r\n                      type=\"submit\"\r\n                      className=\"mr-1 mb-1\"\r\n                      onClick={(e) => this.addfield()}\r\n                    >\r\n                      {\"<- Add\"}\r\n                    </Button.Ripple>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <FormGroup className=\"form-label-group\">\r\n                    <Button.Ripple\r\n                      outline\r\n                      color=\"warning\"\r\n                      type=\"reset\"\r\n                      className=\"mb-1\"\r\n                      disabled={this.state.assetType === undefined}\r\n                      onClick={(e) => {\r\n                        this.clearCustomField();\r\n                      }}\r\n                    >\r\n                      Reset\r\n                    </Button.Ripple>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* <Chart\r\n            options={this.state.options}\r\n            series={this.state.series}\r\n            type=\"radialBar\"\r\n            height={260}\r\n          /> */}\r\n            </CardBody>\r\n            {/* <div className=\"d-flex mt-2\">\r\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\r\n            <p className=\"mb-50\">Completed</p>\r\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\r\n          </div>\r\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\r\n            <p className=\"mb-50\">In Progress</p>\r\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\r\n          </div>\r\n        </div> */}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataList: state.dataList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getData })(AddAssets);\r\n\r\n//export default AddAssets\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  FormGroup,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  CardHeader,\r\n  Collapse,\r\n  CardBody,\r\n  CardTitle,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Eye, Code, ChevronDown } from \"react-feather\";\r\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport classnames from \"classnames\";\r\nimport AddAssets from \"./AddAssets\";\r\nimport GoalOverview from \"../ui-elements/cards/analytics/GoalOverview\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport img5 from \"../../assets/img/slider/banner-25.jpg\";\r\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\";\r\n\r\nlet $primary = \"#7367F0\",\r\n  $success = \"#28C76F\",\r\n  $danger = \"#EA5455\",\r\n  $warning = \"#FF9F43\",\r\n  $primary_light = \"#9c8cfc\",\r\n  $warning_light = \"#FFC085\",\r\n  $danger_light = \"#f29292\",\r\n  $stroke_color = \"#b9c3cd\",\r\n  $label_color = \"#e7eef7\";\r\n\r\nfunction ProgrammaticallyDropzone(props) {\r\n  const [files, setFiles] = useState([]);\r\n  const { getRootProps, getInputProps, open } = useDropzone({\r\n    //accept: \"image/*\",\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    onDrop: (acceptedFiles) => {\r\n      props.setfilesOndrop(acceptedFiles);\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  const thumbs = files.map((file) => (\r\n    // <div style={{display: 'flex', flexDirection: 'column'}}> \r\n    //   <div>\r\n    //   <span> {file.name}</span>\r\n    //   </div>\r\n    <div className=\"dz-thumb\" key={file.name}>\r\n      \r\n      <div className=\"dz-thumb-inner\">\r\n       \r\n        <img src={file.preview} className=\"dz-img\" onError={(e)=> { e.target.src = img5}} alt={file.name} />\r\n        < br />\r\n        <span> {file.name}</span>\r\n      </div>\r\n    </div>\r\n    // </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (props.resetDropzone) {\r\n      setFiles([]);\r\n    }\r\n  }, [props.resetDropzone]);\r\n\r\n  return (\r\n    <section>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        <p className=\"mx-1\" onClick={open}>\r\n          Drag 'n' drop some files here, or Click to Select files\r\n        </p>\r\n      </div>\r\n      {/* <br />\r\n      <Button.Ripple\r\n        color=\"warning\"\r\n        outline\r\n        className=\"mr-1 mb-1 btn-block\"\r\n        size=\"lg\"\r\n        block\r\n        onClick={open}\r\n      >\r\n        Select File\r\n      </Button.Ripple> */}\r\n      {thumbs.length ? (\r\n        <aside className=\"thumb-container-documents\">{thumbs}</aside>\r\n      ) : (\r\n        <div {...getRootProps({ className: \"dropzone-dummy\" })}>\r\n          <p className=\"mx-1\">Preview Selected files</p>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nclass Assets extends React.Component {\r\n  state = {\r\n    active: \"2\",\r\n    files: [],\r\n    reset: false,\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\",\r\n    collapseItems: [\r\n      {\r\n        id: 1,\r\n        title: \"10th Marksheet\",\r\n        content: (\r\n          <div>\r\n            <Row>\r\n              <Col md=\"6\" sm=\"12\">\r\n                >Hey 1\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                >Hey 2\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"Girlfiends pics\",\r\n        content:\r\n          \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\",\r\n      },\r\n      {\r\n        id: 3,\r\n        title: \"Driving License\",\r\n        content:\r\n          \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\",\r\n      },\r\n      {\r\n        id: 4,\r\n        title: \"Mutual Fund\",\r\n        content:\r\n          \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.active !== tab) {\r\n      this.setState({ active: tab });\r\n    }\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\",\r\n    }));\r\n  };\r\n\r\n  setfilesOndrop = (data) => {\r\n    this.setState({ reset: false });\r\n    this.setState({\r\n      files: data.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        })\r\n      ),\r\n    });\r\n  };\r\n\r\n  resetDropzone = () => {\r\n    this.setState({ reset: true });\r\n  };\r\n\r\n  submitDropzone = () => {\r\n    console.log(\"files\", this.state.files);\r\n  };\r\n\r\n  onEntered = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" });\r\n  };\r\n\r\n  onEntering = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" });\r\n  };\r\n\r\n  onExited = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" });\r\n  };\r\n\r\n  onExiting = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" });\r\n  };\r\n\r\n  render() {\r\n    const accordionMarginItems = this.state.collapseItems.map(\r\n      (collapseItem) => {\r\n        return (\r\n          <div className=\"collapse-margin\" key={collapseItem.id}>\r\n            <Card\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n              className={classnames({\r\n                \"collapse-collapsed\":\r\n                  this.state.status === \"Closed\" &&\r\n                  this.state.collapseID === collapseItem.id,\r\n                \"collapse-shown\":\r\n                  this.state.status === \"Opened\" &&\r\n                  this.state.collapseID === collapseItem.id,\r\n                closing:\r\n                  this.state.status === \"Closing...\" &&\r\n                  this.state.collapseID === collapseItem.id,\r\n                opening:\r\n                  this.state.status === \"Opening...\" &&\r\n                  this.state.collapseID === collapseItem.id,\r\n              })}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n                <ChevronDown size={15} className=\"collapse-icon\" />\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={() => this.onEntering(collapseItem.id)}\r\n                onEntered={() => this.onEntered(collapseItem.id)}\r\n                onExiting={() => this.onExiting(collapseItem.id)}\r\n                onExited={() => this.onExited(collapseItem.id)}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          </div>\r\n        );\r\n      }\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2 className=\"warning\">My Documents</h2>\r\n        {/* <Breadcrumbs\r\n          breadCrumbTitle=\"My Vault\"\r\n          breadCrumbParent=\"Document\"\r\n          breadCrumbActive=\"Vault\"\r\n        /> */}\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            {/* <Nav pills>\r\n      <NavItem>\r\n        <NavLink\r\n          className={classnames({\r\n            active: this.state.active === \"1\"\r\n          })}\r\n          onClick={() => {\r\n            this.toggle(\"1\")\r\n          }}\r\n        >\r\n          Add\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink\r\n          className={classnames({\r\n            active: this.state.active === \"2\"\r\n          })}\r\n          onClick={() => {\r\n            this.toggle(\"2\")\r\n          }}\r\n        >\r\n          Upload Files\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled>Record Audio/Video</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink\r\n          className={classnames({\r\n            active: this.state.active === \"3\"\r\n          })}\r\n          onClick={() => {\r\n            this.toggle(\"3\")\r\n          }}\r\n        >\r\n          Bulk Upload\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav> */}\r\n            <TabContent activeTab={this.state.active}>\r\n              <TabPane tabId=\"1\">\r\n                {/* <AddAssets /> */}\r\n                {/* <Row>\r\n      <Col lg=\"8\" md=\"6\" sm=\"12\"><AddAssets /></Col>\r\n      <Col lg=\"4\" md=\"6\" sm=\"12\">\r\n            <GoalOverview strokeColor={$stroke_color} success={$success} />\r\n          </Col>\r\n          </Row> */}\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Upload any file, scans, documents</CardTitle>\r\n                  </CardHeader>\r\n\r\n                  <CardBody>\r\n                    <Row>\r\n                      <Col md=\"6\" sm=\"12\">\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"nameMulti\"\r\n                            placeholder=\"Attachment Name / Alias\"\r\n                          />\r\n                          <Label for=\"nameMulti\">Attachment Name / Alias</Label>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"nameMulti\"\r\n                            placeholder=\"File Name\"\r\n                          />\r\n                          <Label for=\"nameMulti\">File Name</Label>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            type=\"Date\"\r\n                            name=\"name\"\r\n                            id=\"nameMulti\"\r\n                            placeholder=\"Expiry Date\"\r\n                          />\r\n                          <Label for=\"nameMulti\">Expiry Date</Label>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            type=\"textarea\"\r\n                            name=\"name\"\r\n                            id=\"nameMulti\"\r\n                            placeholder=\"Description\"\r\n                          />\r\n                          <Label for=\"nameMulti\">Description</Label>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"form-label-group last-row-form\">\r\n                          <Button.Ripple\r\n                            outline\r\n                            color=\"secondary\"\r\n                            type=\"reset\"\r\n                            className=\"mb-1\"\r\n                            onClick={(e) => {\r\n                              this.resetDropzone();\r\n                            }}\r\n                          >\r\n                            Reset\r\n                          </Button.Ripple>{\" \"}\r\n                          <Button.Ripple\r\n                            color=\"warning\"\r\n                            // disabled={this.state.nominees.length === 0}\r\n                            type=\"reset\"\r\n                            className=\"mr-1 mb-1\"\r\n                            onClick={(e) => {\r\n                              this.submitDropzone(e);\r\n                            }}\r\n                          >\r\n                            {\"Add Document \"}\r\n                          </Button.Ripple>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\" sm=\"12\">\r\n                        <ProgrammaticallyDropzone\r\n                          setfilesOndrop={this.setfilesOndrop}\r\n                          resetDropzone={this.state.reset}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col sm=\"12\">\r\n                        <Card>\r\n                          <CardHeader>\r\n                            <CardTitle>My Documents</CardTitle>\r\n                            <div className=\"views\">\r\n                              <Nav tabs>\r\n                                <NavItem>\r\n                                  <NavLink\r\n                                    className={classnames({\r\n                                      active: this.state.activeTab === \"1\",\r\n                                    })}\r\n                                    onClick={this.props.show}\r\n                                    // onClick={() => {\r\n                                    //   this.toggleTab(\"1\")\r\n                                    //   this.props.show()\r\n                                    // }}\r\n                                  >\r\n                                    <Eye\r\n                                      size={15}\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          assetShow: !this.state.assetShow,\r\n                                        });\r\n                                        this.state.assetShow = !this.state\r\n                                          .assetShow;\r\n                                      }}\r\n                                    />\r\n                                  </NavLink>\r\n                                </NavItem>\r\n                                {/* <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem> */}\r\n                              </Nav>\r\n                            </div>\r\n                          </CardHeader>\r\n                          <CardBody>\r\n                            {/* <p>My Documents</p> */}\r\n                            <TabContent activeTab={this.state.activeTab}>\r\n                              <TabPane tabId=\"1\">\r\n                                <div className=\"vx-collapse\">\r\n                                  {accordionMarginItems}\r\n                                </div>\r\n                              </TabPane>\r\n                              <TabPane className=\"component-code\" tabId=\"2\">\r\n                                hey\r\n                              </TabPane>\r\n                            </TabContent>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </TabPane>\r\n              <TabPane tabId=\"3\">Coming soon .......!</TabPane>\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Assets;\r\n","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import React from \"react\"\r\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\r\nimport Chart from \"react-apexcharts\"\r\nimport { HelpCircle } from \"react-feather\"\r\n\r\nclass GoalOverview extends React.Component {\r\n  state = {\r\n    options: {\r\n      chart: {\r\n        sparkline: {\r\n          enabled: true\r\n        },\r\n        dropShadow: {\r\n          enabled: true,\r\n          blur: 3,\r\n          left: 1,\r\n          top: 1,\r\n          opacity: 0.1\r\n        }\r\n      },\r\n      colors: [this.props.success],\r\n      plotOptions: {\r\n        radialBar: {\r\n          size: 110,\r\n          startAngle: -140,\r\n          endAngle: 150,\r\n          hollow: {\r\n            size: \"77%\"\r\n          },\r\n          track: {\r\n            background: this.props.strokeColor,\r\n            strokeWidth: \"50%\"\r\n          },\r\n          dataLabels: {\r\n            name: {\r\n              show: false\r\n            },\r\n            value: {\r\n              offsetY: 18,\r\n              color: this.props.strokeColor,\r\n              fontSize: \"4rem\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      fill: {\r\n        type: \"gradient\",\r\n        gradient: {\r\n          shade: \"dark\",\r\n          type: \"horizontal\",\r\n          shadeIntensity: 0.5,\r\n          gradientToColors: [\"#00b5b5\"],\r\n          inverseColors: true,\r\n          opacityFrom: 1,\r\n          opacityTo: 1,\r\n          stops: [0, 100]\r\n        }\r\n      },\r\n      stroke: {\r\n        lineCap: \"round\"\r\n      }\r\n    },\r\n    series: [83]\r\n  }\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Goal Overview</CardTitle>\r\n          <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Chart\r\n            options={this.state.options}\r\n            series={this.state.series}\r\n            type=\"radialBar\"\r\n            height={260}\r\n          />\r\n        </CardBody>\r\n        <div className=\"d-flex mt-2\">\r\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\r\n            <p className=\"mb-50\">Completed</p>\r\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\r\n          </div>\r\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\r\n            <p className=\"mb-50\">In Progress</p>\r\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\nexport default GoalOverview\r\n","import axios from \"axios\"\r\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\nexport const getData = params => {\r\n  return async dispatch => {\r\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \r\n    await axios.get(\"/backendapi/nominee/list/\"+userData._id, params).then(response => {\r\n      console.log('aaquib  123', response.data);\r\n      console.log('aaquib  123',params);\r\n      dispatch({\r\n        type: \"GET_DATA\",\r\n        data: response.data,\r\n        totalPages: response.length,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getSpendData = params => {\r\n  return async dispatch => {\r\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \r\n    await axios.get(\"/backendapi/spend/list/\"+userData._id, params).then(response => {\r\n      console.log('aaquib  123', response.data);\r\n      console.log('aaquib  123',params);\r\n      dispatch({\r\n        type: \"GET_DATA\",\r\n        data: response.data,\r\n        totalPages: response.length,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \r\n  return async dispatch => {\r\n    await axios.get(\"/backendapi/nominee/list/\"+userData._id).then(response => {\r\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getSpendInitialData = () => {\r\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \r\n  return async dispatch => {\r\n    await axios.get(\"/backendapi/spend/list/\"+userData._id).then(response => {\r\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\r\n    })\r\n  }\r\n}\r\n\r\nexport const filterData = value => {\r\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\r\n}\r\n\r\nexport const deleteData = obj => {\r\n  return dispatch => {\r\n    console.log('DELETE DATA :',obj);\r\n    axios\r\n      .post(\"/backendapi/nominee/delete\", obj\r\n      )\r\n      .then(response => {\r\n        dispatch({ type: \"DELETE_DATA\", obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateData = obj => {\r\n  console.log('Aaquib 123', obj);\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .post(\"/api/datalist/update-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"UPDATE_DATA\", obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const addData = obj => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().dataList.params\r\n    axios\r\n      .post(\"/api/datalist/add-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"ADD_DATA\", obj })\r\n        dispatch(getData(params))\r\n      })\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/banner-25.a47593fc.jpg\";"],"sourceRoot":""}