{"version":3,"sources":["views/Liability/LiabilitiesOption.js","views/Liability/AddLiability.js","views/Liability/Liability.js"],"names":["options","Custom","key","val","type","Notes","mandatory","Insurance","Warranty","Ponzi","Receipt","params","effect","grabCursor","autoplay","delay","disableOnInteraction","cubeEffect","shadow","slideShadows","shadowOffset","shadowScale","pagination","el","colourOptions2","value","label","color","isFixed","AddLiability","state","messages","props","fname","ftype","liabilityShow","liabilityList","liabilityType","active","selectAssetRef","React","createRef","selectNomineeRef","selectCustomRef","nomineeOption","nominees","nomineeList","modal","selectedTemplate","isAddAssetButtonDisabled","template","liabilityOption","colourOptions1","colorOption","deletecus","e","temp3","filter","x","setState","getAssets","user","JSON","parse","localStorage","getItem","splice","length","liabilities","forEach","i","nomin","n","idx","name","cont","Row","liabilityDetails","map","Col","md","sm","FormText","ast","id","title","content","push","reverse","toggleModal","prevState","changeValue","k","findIndex","addAssetsButtonValidation","f","callAddLiability","preventDefault","as","axios","post","_id","encryptdata","stringify","headers","Authorization","then","res","getData","parsedFilter","catch","setItem","toast","success","clearLiability","clearCustomField","addfield","temp","deletable","changeNominee","event","current","select","clearValue","handleChange","undefined","animateLabel","document","getElementById","classList","remove","add","this","lg","style","width","window","screen","TabContent","activeTab","TabPane","tabId","Card","CardHeader","CardTitle","subHeading","CardBody","Form","FormGroup","className","classNamePrefix","ref","isClearable","placeholder","liabilityOptionText","onChange","Label","for","isMulti","Object","keys","includes","position","right","top","size","onClick","Input","ev","target","themeConfig","theme","marginTop","display","Button","outline","onMouseEnter","onMouseLeave","backgroundColor","textAlign","marginBottom","Ripple","disabled","AssetAccordion","heading","collapseItems","show","assetShow","backgroundImage","img1","backgroundSize","img2","img3","img4","img5","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","dataList","data","relation","Component","connect","customizer","language","Liability","Fragment"],"mappings":"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","file":"static/js/30.7c8acdc6.chunk.js","sourcesContent":["const options = {\r\n    Custom: [\r\n      {\r\n        key: 'Liability Name',\r\n        val: '',\r\n        type: 'Text'\r\n      }\r\n    ],\r\n    Notes: [\r\n      {\r\n        key: 'Notes *',\r\n        val: '',\r\n        type: 'textarea',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Expiry Date',\r\n        val: '',\r\n        type: 'Date'\r\n      }\r\n    ],\r\n    'Credit Card': [\r\n      {\r\n        key: 'Bank Name *',\r\n        val: '',\r\n        type: 'Text',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Card Limit',\r\n        val: '',\r\n        type: 'Number'\r\n      }\r\n    ],\r\n    'Loan Amount': [\r\n      {\r\n        key: 'Bank Name *',\r\n        val: '',\r\n        type: 'Text',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Loan Account Number *',\r\n        val: '',\r\n        type: 'Number',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Loan Amount *',\r\n        val: '',\r\n        type: 'Number',\r\n        mandatory: true\r\n      }\r\n    ],\r\n    Insurance: [\r\n      {\r\n        key: 'Bank Name *',\r\n        val: '',\r\n        type: 'Text',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Policy Number *',\r\n        val: '',\r\n        type: 'Number',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Policy Amount *',\r\n        val: '',\r\n        type: 'Number',\r\n        mandatory: true\r\n      }\r\n    ],\r\n    Warranty: [\r\n      {\r\n        key: 'Object Name *',\r\n        val: '',\r\n        type: 'Text',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Warranty Period *',\r\n        val: '',\r\n        type: 'Text',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Bill Amount *',\r\n        val: '',\r\n        type: 'Number',\r\n        mandatory: true\r\n      }\r\n    ],\r\n    Ponzi: [\r\n      {\r\n        key: 'Description *',\r\n        val: '',\r\n        type: 'Text',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Return Period *',\r\n        val: '',\r\n        type: 'Text',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Amount *',\r\n        val: '',\r\n        type: 'Number',\r\n        mandatory: true\r\n      }\r\n    ],\r\n    Receipt: [\r\n      {\r\n        key: 'Object Name *',\r\n        val: '',\r\n        type: 'Text',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Description *',\r\n        val: '',\r\n        type: 'Text',\r\n        mandatory: true\r\n      },\r\n      {\r\n        key: 'Expiry',\r\n        val: '',\r\n        type: 'Date'\r\n      }\r\n    ]\r\n  }\r\n\r\n  export default options","import React from 'react'\r\nimport { encryptdata } from '../../utility/context/SecurityTool'\r\nimport {\r\n  Card,\r\n  FormText,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  TabContent,\r\n  TabPane,\r\n  Label\r\n} from 'reactstrap'\r\nimport Swiper from 'react-id-swiper'\r\nimport 'swiper/css/swiper.css'\r\nimport AssetAccordion from '../Portfolio/AssetAccordion'\r\nimport options from './LiabilitiesOption'\r\nimport '../../assets/scss/plugins/extensions/swiper.scss'\r\nimport img1 from '../../assets/img/slider/banner-31.jpg'\r\nimport img2 from '../../assets/img/slider/banner-22.jpg'\r\nimport img3 from '../../assets/img/slider/banner-23.jpg'\r\nimport img4 from '../../assets/img/slider/banner-24.jpg'\r\nimport img5 from '../../assets/img/slider/banner-25.jpg'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport '../../assets/scss/plugins/extensions/toastr.scss'\r\nimport '../../assets/scss/plugins/extensions/dropzone.scss'\r\nimport { getData } from '../../redux/actions/data-list/'\r\nimport Select from 'react-select'\r\nimport themeConfig from '../../configs/themeConfig'\r\nimport { Delete } from 'react-feather'\r\n\r\nconst params = {\r\n  effect: 'cube',\r\n  grabCursor: true,\r\n  autoplay: {\r\n    delay: 2000,\r\n    disableOnInteraction: true\r\n  },\r\n  cubeEffect: {\r\n    shadow: true,\r\n    slideShadows: true,\r\n    shadowOffset: 20,\r\n    shadowScale: 0.94\r\n  },\r\n  pagination: {\r\n    el: '.swiper-pagination'\r\n  }\r\n}\r\n\r\nconst colourOptions2 = [\r\n  { value: 'Text', label: 'Text', color: '#00B8D9', isFixed: true },\r\n  { value: 'textarea', label: 'Text Area', color: '#0052CC', isFixed: true },\r\n  { value: 'Date', label: 'Date', color: '#0052CC', isFixed: true },\r\n  { value: 'Number', label: 'Number', color: '#0052CC', isFixed: true },\r\n  { value: 'File', label: 'File', color: '#0052CC', isFixed: true }\r\n]\r\n\r\nclass AddLiability extends React.Component {\r\n  state = {\r\n    messages: this.props.messages,\r\n    fname: '',\r\n    ftype: '',\r\n    liabilityShow: true,\r\n    liabilityList: [],\r\n    liabilityType: '',\r\n    active: '1',\r\n    selectAssetRef: React.createRef(),\r\n    selectNomineeRef: React.createRef(),\r\n    selectCustomRef: React.createRef(),\r\n    nomineeOption: [],\r\n    nominees: [],\r\n    nomineeList: [],\r\n    modal: false,\r\n    selectedTemplate: [],\r\n    isAddAssetButtonDisabled: true,\r\n    template: this.props.messages?.liabilityOption\r\n      ? this.props.messages?.liabilityOption\r\n      : options,\r\n    colourOptions1: [\r\n      {\r\n        value: 'Loan Amount',\r\n        label: this.props.messages?.colorOption?.['Loan Amount']\r\n          ? this.props.messages?.colorOption?.['Loan Amount']\r\n          : 'Loan Amount',\r\n        color: '#00B8D9',\r\n        isFixed: true\r\n      },\r\n      {\r\n        value: 'Credit Card',\r\n        label: this.props.messages?.colorOption?.['Credit Card']\r\n          ? this.props.messages?.colorOption?.['Credit Card']\r\n          : 'Credit Card',\r\n        color: '#0052CC',\r\n        isFixed: true\r\n      },\r\n      {\r\n        value: 'Insurance',\r\n        label: this.props.messages?.colorOption?.['Insurance']\r\n          ? this.props.messages?.colorOption?.['Insurance']\r\n          : 'Insurance',\r\n        color: '#0052CC',\r\n        isFixed: true\r\n      },\r\n      {\r\n        value: 'Warranty',\r\n        label: this.props.messages?.colorOption?.['Warranty']\r\n          ? this.props.messages?.colorOption?.['Warranty']\r\n          : 'Warranty',\r\n        color: '#0052CC',\r\n        isFixed: true\r\n      },\r\n\r\n      {\r\n        value: 'Ponzi',\r\n        label: this.props.messages?.colorOption?.['Ponzi']\r\n          ? this.props.messages?.colorOption?.['Ponzi']\r\n          : 'Ponzi',\r\n        color: '#0052CC',\r\n        isFixed: true\r\n      },\r\n      {\r\n        value: 'Receipt',\r\n        label: this.props.messages?.colorOption?.['Receipt']\r\n          ? this.props.messages?.colorOption?.['Receipt']\r\n          : 'Receipt',\r\n        color: '#0052CC',\r\n        isFixed: true\r\n      },\r\n\r\n      {\r\n        value: 'Notes',\r\n        label: this.props.messages?.colorOption?.['Notes']\r\n          ? this.props.messages?.colorOption?.['Notes']\r\n          : 'Notes',\r\n        color: '#0052CC',\r\n        isFixed: true\r\n      },\r\n\r\n      {\r\n        value: 'Custom',\r\n        label: this.props.messages?.colorOption?.['Custom']\r\n          ? this.props.messages?.colorOption?.['Custom']\r\n          : 'Custom',\r\n        color: '#0052CC',\r\n        isFixed: true\r\n      }\r\n    ]\r\n  }\r\n  componentWillMount() {\r\n    this.getAssets()\r\n  }\r\n\r\n  deletecus = (e) => {\r\n    const temp3 = this.state.selectedTemplate.filter((x) => {\r\n      return e.key !== x.key\r\n    })\r\n    this.setState({ selectedTemplate: temp3 })\r\n  }\r\n\r\n  getAssets = () => {\r\n    const user = JSON.parse(localStorage.getItem('logInUserData'))\r\n    const { liabilityList } = this.state\r\n    liabilityList.splice(0, liabilityList.length)\r\n\r\n    user?.liabilities?.length &&\r\n      user.liabilities.forEach((e, i) => {\r\n        let nomin = ''\r\n        e.nominees.forEach((n, idx) => {\r\n          if (idx === e.nominees.length - 1) {\r\n            nomin = nomin + n.name\r\n          } else {\r\n            nomin = nomin + n.name + ', '\r\n          }\r\n        })\r\n        const cont = (\r\n          <div>\r\n            <Row>\r\n              {e.liabilityDetails.map((x) => {\r\n                if (x.val !== '') {\r\n                  return (\r\n                    <Col md=\"6\" sm=\"12\">\r\n                      <FormText>\r\n                        <b>{x.key} :</b>{' '}\r\n                        {this.state.liabilityShow ? x.val : '***********'}\r\n                      </FormText>\r\n                    </Col>\r\n                  )\r\n                } else return ''\r\n              })}\r\n              <Col md=\"6\" sm=\"12\">\r\n                <FormText>\r\n                  <b>Nominees :</b>{' '}\r\n                  {this.state.liabilityShow ? nomin : '*******************'}\r\n                </FormText>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )\r\n        const ast = {\r\n          id: i + 1,\r\n          title: e.liabilityType,\r\n          content: cont\r\n        }\r\n        liabilityList.push(ast)\r\n      })\r\n    this.setState({ liabilityList: liabilityList?.reverse() })\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.dataList.data.length !== state.nomineeList.length) {\r\n      const nomineeOption = state.nomineeOption\r\n      props.dataList.data.forEach((e) => {\r\n        const temp = {\r\n          value: e._id,\r\n          label: e.name + ' - ' + e.relation,\r\n          color: '#00B8D9',\r\n          isFixed: false\r\n        }\r\n        nomineeOption.push(temp)\r\n      })\r\n\r\n      return {\r\n        nomineeList: props.dataList.data,\r\n        nomineeOption: nomineeOption\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  componentDidMount() {\r\n    this.props.getData(this.props.parsedFilter)\r\n    this.getAssets()\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal\r\n    }))\r\n  }\r\n\r\n  changeValue = (e, k) => {\r\n    const selectedTemplate = this.state.selectedTemplate\r\n    const idx = selectedTemplate.findIndex((x) => x.key === k.key)\r\n    if (e.length < 50) {\r\n      selectedTemplate[idx].val = e\r\n      this.setState({ selectedTemplate }, this.addAssetsButtonValidation)\r\n    }\r\n  }\r\n\r\n  addAssetsButtonValidation = () => {\r\n    let isAddAssetButtonDisabled = false\r\n    this.state.selectedTemplate.forEach((f) => {\r\n      if (f.mandatory && !f.val) {\r\n        isAddAssetButtonDisabled = true\r\n      }\r\n    })\r\n    this.setState({\r\n      isAddAssetButtonDisabled: isAddAssetButtonDisabled\r\n    })\r\n  }\r\n\r\n  callAddLiability = (e) => {\r\n    e.preventDefault()\r\n    const user = JSON.parse(localStorage.getItem('logInUserData'))\r\n    const as = {\r\n      liabilityType: this.state.liabilityType,\r\n      liabilityDetails: this.state.selectedTemplate,\r\n      nominees: this.state.nominees\r\n    }\r\n    user.liabilities.push(as)\r\n    axios\r\n      .post(\r\n        '/backendapi/adddetails',\r\n        {\r\n          _id: user._id,\r\n          liabilities: encryptdata(JSON.stringify(user.liabilities))\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n          }\r\n        }\r\n      )\r\n      .then((res) => {\r\n        this.props.getData(this.props.parsedFilter)\r\n        this.getAssets()\r\n      })\r\n      .catch()\r\n    localStorage.setItem('logInUserData', JSON.stringify(user))\r\n    toast.success('Liability addedd successfully!')\r\n    this.clearLiability()\r\n    this.clearCustomField()\r\n    this.setState({ isAddAssetButtonDisabled: true })\r\n  }\r\n  addfield = () => {\r\n    if (this.state.liabilityType !== '') {\r\n      const selectedTemplate = this.state.selectedTemplate\r\n      const size = this.state.selectedTemplate.length\r\n      let temp = ''\r\n      if (selectedTemplate[size - 1].key === 'Attachments') {\r\n        temp =\r\n          this.state.selectedTemplate.length &&\r\n          selectedTemplate.splice(this.state.selectedTemplate?.length - 1, 0, {\r\n            key: this.state.fname,\r\n            val: '',\r\n            type: this.state.ftype,\r\n            deletable: true\r\n          })\r\n        this.setState({ temp, fname: '', ftype: '' })\r\n      } else {\r\n        selectedTemplate.push({\r\n          key: this.state.fname,\r\n          val: '',\r\n          type: this.state.ftype,\r\n          deletable: true\r\n        })\r\n        this.setState({ selectedTemplate, fname: '', ftype: '' })\r\n      }\r\n      this.toggleModal()\r\n    }\r\n  }\r\n  changeNominee = (event) => {\r\n    const nominees = []\r\n    event &&\r\n      event.forEach((e) => {\r\n        nominees.push({ id: e.value, name: e.label })\r\n      })\r\n    !event && this.setState({ isAddAssetButtonDisabled: true })\r\n    this.setState({ nominees })\r\n  }\r\n\r\n  clearLiability = () => {\r\n    this.state.selectAssetRef.current.select.clearValue()\r\n    this.state.selectNomineeRef.current.select.clearValue()\r\n    this.setState({ liabilityType: '', selectedTemplate: [], nominees: [] })\r\n  }\r\n  clearCustomField = () => {\r\n    this.setState({ fname: '', ftype: '' })\r\n    this.state.selectCustomRef.current &&\r\n      this.state.selectCustomRef.current.select.clearValue()\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      isAddAssetButtonDisabled: true,\r\n      fname: '',\r\n      ftype: '',\r\n      liabilityType: e ? e.value : undefined,\r\n      selectedTemplate: e ? this.state.template[e.value] : {}\r\n    })\r\n  }\r\n\r\n  animateLabel = (value) => {\r\n    if (value) {\r\n      document.getElementById('buttonLabel').classList.remove('no-display')\r\n      document.getElementById('buttonLabel').classList.add('button-text')\r\n    } else {\r\n      document.getElementById('buttonLabel').classList.add('no-display')\r\n      document.getElementById('buttonLabel').classList.remove('button-text')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { messages } = this.props\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col lg=\"8\" md=\"6\" sm=\"12\">\r\n            <div style={{ width: window.screen.width < 500 ? '100%' : '150%' }}>\r\n              <Row>\r\n                <Col sm=\"12\">\r\n                  <TabContent activeTab={this.state.active}>\r\n                    <TabPane tabId=\"1\">\r\n                      <Row>\r\n                        <ToastContainer />\r\n                        <Col lg=\"8\" md=\"6\" sm=\"12\">\r\n                          <Card>\r\n                            <CardHeader>\r\n                              <CardTitle>\r\n                                {messages?.subHeading\r\n                                  ? messages.subHeading\r\n                                  : 'Add New Liability'}\r\n                              </CardTitle>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                              <Form>\r\n                                <Row>\r\n                                  <Col md=\"6\" sm=\"12\">\r\n                                    <FormGroup className=\"form-label-group\">\r\n                                      <Select\r\n                                        className=\"React\"\r\n                                        classNamePrefix=\"select\"\r\n                                        ref={this.state.selectAssetRef}\r\n                                        name=\"color\"\r\n                                        options={this.state.colourOptions1}\r\n                                        isClearable={true}\r\n                                        placeholder={\r\n                                          messages?.liabilityOptionText\r\n                                            ? messages?.liabilityOptionText\r\n                                            : 'Select Liability Type...'\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                          this.handleChange(e)\r\n                                        }}\r\n                                      />\r\n                                      <Label for=\"nameMulti\">\r\n                                        Liability Type\r\n                                      </Label>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                  <Col md=\"6\" sm=\"12\">\r\n                                    <FormGroup className=\"form-label-group\">\r\n                                      <Select\r\n                                        isMulti\r\n                                        name=\"nominee\"\r\n                                        options={this.state.nomineeOption}\r\n                                        ref={this.state.selectNomineeRef}\r\n                                        className=\"React\"\r\n                                        classNamePrefix=\"select\"\r\n                                        placeholder={\r\n                                          messages?.nomineeOption\r\n                                            ? messages?.nomineeOption\r\n                                            : 'Select Nominees...'\r\n                                        }\r\n                                        id=\"nominee\"\r\n                                        onChange={this.changeNominee}\r\n                                      />\r\n                                      <Label>Nominee</Label>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  {Object.keys(this.state.template).includes(\r\n                                    this.state.liabilityType\r\n                                  ) &&\r\n                                    this.state.selectedTemplate.map((e, i) => {\r\n                                      return (\r\n                                        <Col md=\"6\" sm=\"12\" key={i}>\r\n                                          <FormGroup className=\"form-label-group\">\r\n                                            {e.deletable && (\r\n                                              <Delete\r\n                                                style={{\r\n                                                  position: 'absolute',\r\n                                                  right: '-5px',\r\n                                                  top: '-7px'\r\n                                                }}\r\n                                                className=\"primary\"\r\n                                                size={15}\r\n                                                onClick={() => {\r\n                                                  this.deletecus(e)\r\n                                                }}\r\n                                              />\r\n                                            )}\r\n                                            <Input\r\n                                              type={e.type}\r\n                                              name=\"city\"\r\n                                              id=\"cityMulti\"\r\n                                              className=\"input-label\"\r\n                                              placeholder={e.key}\r\n                                              value={e.val}\r\n                                              onChange={(ev) => {\r\n                                                this.changeValue(\r\n                                                  ev.target\r\n                                                    ? ev.target.value\r\n                                                    : ev.value,\r\n                                                  e\r\n                                                )\r\n                                              }}\r\n                                            />\r\n                                            <Label\r\n                                              for=\"cityMulti\"\r\n                                              className={\r\n                                                themeConfig.theme === 'dark'\r\n                                                  ? 'dark-label'\r\n                                                  : 'light-label'\r\n                                              }\r\n                                            >\r\n                                              {e.key}\r\n                                            </Label>\r\n                                          </FormGroup>\r\n                                        </Col>\r\n                                      )\r\n                                    })}\r\n                                </Row>\r\n                                <Row style={{ marginTop: '15px' }}>\r\n                                  <Col\r\n                                    md=\"6\"\r\n                                    sm=\"12\"\r\n                                    style={{ display: 'flex' }}\r\n                                  >\r\n                                    {this.state.liabilityType && (\r\n                                      <>\r\n                                        <Button\r\n                                          color=\"white\"\r\n                                          outline\r\n                                          onClick={this.toggleModal}\r\n                                          className=\"add-button\"\r\n                                          id=\"addButton\"\r\n                                          onMouseEnter={() =>\r\n                                            this.animateLabel(true)\r\n                                          }\r\n                                          onMouseLeave={() =>\r\n                                            this.animateLabel(false)\r\n                                          }\r\n                                          style={{\r\n                                            backgroundColor: 'var(--warning)'\r\n                                          }}\r\n                                        >\r\n                                          +\r\n                                        </Button>\r\n                                        <div className=\"label-div\">\r\n                                          <span\r\n                                            id=\"buttonLabel\"\r\n                                            className=\"no-display\"\r\n                                          >\r\n                                            Add a Custom Field\r\n                                          </span>\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                  </Col>\r\n                                  <Col sm=\"6\">\r\n                                    <FormGroup\r\n                                      className=\"action-right\"\r\n                                      style={{\r\n                                        textAlign: 'right',\r\n                                        marginBottom: '0px'\r\n                                      }}\r\n                                    >\r\n                                      <Button.Ripple\r\n                                        outline\r\n                                        color=\"secondary\"\r\n                                        type=\"reset\"\r\n                                        className=\"button-label\"\r\n                                        onClick={(e) => {\r\n                                          this.clearLiability()\r\n                                        }}\r\n                                      >\r\n                                        Reset\r\n                                      </Button.Ripple>{' '}\r\n                                      <Button.Ripple\r\n                                        color=\"warning\"\r\n                                        type=\"submit\"\r\n                                        className=\"button-label\"\r\n                                        disabled={\r\n                                          this.state.nominees.length === 0 ||\r\n                                          !this.state.liabilityType ||\r\n                                          this.state.isAddAssetButtonDisabled\r\n                                        }\r\n                                        onClick={(e) => {\r\n                                          this.callAddLiability(e)\r\n                                        }}\r\n                                      >\r\n                                        {'Add'}\r\n                                      </Button.Ripple>\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Form>\r\n                            </CardBody>\r\n                          </Card>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                        <ToastContainer />\r\n                        <Col md=\"8\">\r\n                          <AssetAccordion\r\n                            heading={\r\n                              messages?.subHeading\r\n                                ? messages.subHeading\r\n                                : 'Liabilities List'\r\n                            }\r\n                            collapseItems={this.state.liabilityList}\r\n                            show={() => {\r\n                              this.setState({\r\n                                liabilityShow: !this.state.liabilityShow\r\n                              })\r\n                              this.getAssets()\r\n                            }}\r\n                            assetShow={this.state.liabilityShow}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </TabPane>\r\n                  </TabContent>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col lg=\"4\" md=\"6\" sm=\"12\">\r\n            <div className=\"swipermobile\">\r\n              <Swiper {...params}>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img1})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img2})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img3})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img4})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img5})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n              </Swiper>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          {/* To add a */}\r\n          <Col sm=\"12\">\r\n            <Modal\r\n              isOpen={this.state.modal}\r\n              toggle={this.toggleModal}\r\n              className=\"modal-dialog-centered\"\r\n            >\r\n              <ModalHeader toggle={this.toggleModal}>\r\n                Add Custom Field\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"Email\"\r\n                    disabled={this.state.liabilityType === ''}\r\n                    id=\"EmailMulti\"\r\n                    value={this.state.fname}\r\n                    placeholder=\"Enter Field Name\"\r\n                    onChange={(e) => {\r\n                      this.setState({ fname: e.target.value })\r\n                    }}\r\n                  />\r\n                  <Label for=\"EmailMulti\">Enter Field Name</Label>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  className=\"form-label-group\"\r\n                  disabled={this.state.liabilityType === undefined}\r\n                >\r\n                  <Select\r\n                    className=\"React\"\r\n                    ref={this.state.selectCustomRef}\r\n                    disabled={this.state.liabilityType === undefined}\r\n                    classNamePrefix=\"select\"\r\n                    isClearable={true}\r\n                    name=\"color\"\r\n                    options={colourOptions2}\r\n                    placeholder=\"Select Field Type...\"\r\n                    onChange={(e) =>\r\n                      this.setState({ ftype: e ? e.value : ' ' })\r\n                    }\r\n                  />\r\n                  <Label for=\"nameMulti\">Field Type</Label>\r\n                </FormGroup>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Button.Ripple\r\n                    outline\r\n                    color=\"secondary\"\r\n                    type=\"reset\"\r\n                    className=\"mb-1 button-label\"\r\n                    disabled={this.state.liabilityType === undefined}\r\n                    onClick={(e) => {\r\n                      this.clearCustomField()\r\n                    }}\r\n                  >\r\n                    Reset\r\n                  </Button.Ripple>{' '}\r\n                  <Button.Ripple\r\n                    color=\"warning\"\r\n                    disabled={this.state.liabilityType === undefined}\r\n                    type=\"submit\"\r\n                    className=\"button-label\"\r\n                    onClick={(e) => this.addfield()}\r\n                  >\r\n                    {'Add'}\r\n                  </Button.Ripple>\r\n                </FormGroup>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataList: state.dataList\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getData })(AddLiability)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col, TabContent, TabPane } from 'reactstrap'\r\nimport AddLiability from './AddLiability'\r\nimport '../../assets/scss/plugins/extensions/dropzone.scss'\r\nconst Liability = (props) => {\r\n  const { messages } = props\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className=\"warning spacing nodisplay\">\r\n        {messages?.heading ? messages.heading : 'Liabilties'}\r\n      </h2>\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <TabContent activeTab={'1'}>\r\n            <TabPane tabId=\"1\">\r\n              <AddLiability messages={messages} />\r\n            </TabPane>\r\n          </TabContent>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  const { customizer } = state?.customizer\r\n  return {\r\n    messages: customizer?.language?.Liability\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Liability)\r\n"],"sourceRoot":""}