{"version":3,"sources":["views/Portfolio/Portfolio.js"],"names":["params","effect","grabCursor","autoplay","delay","disableOnInteraction","cubeEffect","shadow","slideShadows","shadowOffset","shadowScale","pagination","el","Portfolio","state","assetShow","liabilityShow","assetList","liabilityList","getAssets","user","JSON","parse","localStorage","getItem","splice","length","assets","forEach","e","i","nomin","nominees","n","idx","name","cont","assetDetails","map","x","val","md","sm","key","ast","id","title","assetType","content","push","liabilities","console","log","liabilityDetails","liabilityType","setState","reverse","this","props","getData","Fragment","className","lg","heading","collapseItems","show","page","style","backgroundImage","img1","backgroundSize","img2","img3","img4","img5","React","Component","connect"],"mappings":"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","file":"static/js/43.9c9e738a.chunk.js","sourcesContent":["import React from 'react'\nimport AssetAccordion from './AssetAccordion'\nimport { Row, Col, FormText } from 'reactstrap'\nimport 'swiper/css/swiper.css'\nimport '../../assets/scss/plugins/extensions/swiper.scss'\nimport img1 from '../../assets/img/slider/banner-31.jpg'\nimport img2 from '../../assets/img/slider/banner-22.jpg'\nimport img3 from '../../assets/img/slider/banner-23.jpg'\nimport img4 from '../../assets/img/slider/banner-24.jpg'\nimport img5 from '../../assets/img/slider/banner-25.jpg'\nimport Swiper from 'react-id-swiper'\nimport 'swiper/css/swiper.css'\nimport { getData } from '../../redux/actions/data-list/'\nimport { connect } from 'react-redux'\nconst params = {\n  effect: 'cube',\n  grabCursor: true,\n  autoplay: {\n    delay: 2000,\n    disableOnInteraction: true\n  },\n  cubeEffect: {\n    shadow: true,\n    slideShadows: true,\n    shadowOffset: 20,\n    shadowScale: 0.94\n  },\n  pagination: {\n    el: '.swiper-pagination'\n  }\n}\n\nclass Portfolio extends React.Component {\n  state = {\n    assetShow: false,\n    liabilityShow: false,\n    assetList: [],\n    liabilityList: []\n  }\n\n  componentWillMount() {\n    this.props.getData()\n    this.getAssets()\n  }\n\n  getAssets = () => {\n    const user = JSON.parse(localStorage.getItem('logInUserData'))\n    const { assetList, liabilityList } = this.state\n    assetList.splice(0, assetList.length)\n    liabilityList.splice(0, liabilityList.length)\n    user?.assets?.length &&\n      user.assets.forEach((e, i) => {\n        let nomin = ''\n        e?.nominees?.length &&\n          e.nominees.forEach((n, idx) => {\n            if (idx === e.nominees.length - 1) {\n              nomin = nomin + n.name\n            } else {\n              nomin = nomin + n.name + ', '\n            }\n          })\n        const cont = (\n          <div>\n            <Row>\n              {e?.assetDetails?.map((x) => {\n                if (x.val !== '') {\n                  return (\n                    <Col md=\"6\" sm=\"12\">\n                      <FormText>\n                        <b>{x.key} :</b>{' '}\n                        {this.state.assetShow ? x.val : '***********'}\n                      </FormText>\n                    </Col>\n                  )\n                }\n              })}\n              <Col md=\"6\" sm=\"12\">\n                <FormText>\n                  <b>Nominees :</b>{' '}\n                  {this.state.assetShow ? nomin : '*******************'}\n                </FormText>\n              </Col>\n            </Row>\n          </div>\n        )\n        const ast = {\n          id: i + 1,\n          title: e.assetType,\n          content: cont\n        }\n        assetList.push(ast)\n      })\n    user?.liabilities?.length &&\n      user.liabilities.forEach((e, i) => {\n        console.log('ffffffffffffffff', i, e)\n        let nomin = ''\n        e.nominees.forEach((n, idx) => {\n          if (idx === e.nominees.length - 1) {\n            nomin = nomin + n.name\n          } else {\n            nomin = nomin + n.name + ', '\n          }\n        })\n        const cont = (\n          <div>\n            <Row>\n              {e.liabilityDetails.map((x) => {\n                if (x.val !== '') {\n                  return (\n                    <Col md=\"6\" sm=\"12\">\n                      <FormText>\n                        <b>{x.key} :</b>{' '}\n                        {this.state.liabilityShow ? x.val : '***********'}\n                      </FormText>\n                    </Col>\n                  )\n                }\n              })}\n              <Col md=\"6\" sm=\"12\">\n                <FormText>\n                  <b>Nominees :</b>{' '}\n                  {this.state.liabilityShow ? nomin : '*******************'}\n                </FormText>\n              </Col>\n            </Row>\n          </div>\n        )\n        const ast = {\n          id: i + 1,\n          title: e.liabilityType,\n          content: cont\n        }\n        liabilityList.push(ast)\n      })\n    console.log(assetList)\n    this.setState({\n      assetList: assetList?.reverse(),\n      liabilityList: liabilityList?.reverse()\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2 className=\"warning spacing nodisplay\">Portfolio</h2>\n        <Row>\n          <Col lg=\"8\" md=\"6\" sm=\"12\">\n            <Row className=\"match-height\">\n              <Col md=\"12\">\n                <AssetAccordion\n                  heading=\"Assets List\"\n                  collapseItems={this.state.assetList}\n                  show={() => {\n                    this.setState({ assetShow: !this.state.assetShow })\n                    this.getAssets()\n                  }}\n                  assetShow={this.state.assetShow}\n                  page=\"portfolio\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"match-height\">\n              <Col md=\"12\">\n                <AssetAccordion\n                  heading=\"Liabilities List\"\n                  collapseItems={this.state.liabilityList}\n                  show={() => {\n                    this.setState({ liabilityShow: !this.state.liabilityShow })\n                    this.getAssets()\n                  }}\n                  assetShow={this.state.liabilityShow}\n                  page=\"portfolio\"\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col lg=\"4\" md=\"6\" sm=\"12\">\n            <div className=\"swipermobile\">\n              <Swiper {...params}>\n                <div\n                  style={{\n                    backgroundImage: `url(${img1})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n                <div\n                  style={{\n                    backgroundImage: `url(${img2})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n                <div\n                  style={{\n                    backgroundImage: `url(${img3})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n                <div\n                  style={{\n                    backgroundImage: `url(${img4})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n                <div\n                  style={{\n                    backgroundImage: `url(${img5})`,\n                    backgroundSize: 'contain'\n                  }}\n                ></div>\n              </Swiper>\n            </div>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(null, { getData })(Portfolio)\n"],"sourceRoot":""}