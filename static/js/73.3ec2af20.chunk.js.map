{"version":3,"sources":["redux/actions/data-list/index.js","views/Nominee/DataListSidebar.js","views/Nominee/NomineeListConfig.js","views/Nominee/NomineeList.js","components/@vuexy/checkbox/CheckboxesVuexy.js","components/@vuexy/chips/ChipComponent.js"],"names":["getData","params","dispatch","a","axios","get","then","response","type","data","totalPages","getInitialData","filterData","value","deleteData","obj","post","updateData","getState","addData","dataList","DataListSidebar","state","relation","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","props","Object","keys","dataParams","length","page","perPage","handleSidebar","prevProps","prevState","this","setState","show","className","classnames","size","onClick","options","wheelPropagation","thumbView","FormGroup","src","alt","htmlFor","color","hidden","onChange","e","URL","createObjectURL","target","files","Button","Label","for","Input","placeholder","relation1","email","conatct1","conatct2","address","outline","Component","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","deleteRow","CustomHeader","UncontrolledDropdown","DropdownToggle","DropdownMenu","tag","right","DropdownItem","index","total","handleRowsPerPage","handleFilter","DataListConfig","currentPage","columns","selector","sortable","minWidth","cell","title","text","parsedFilter","handleCurrentData","handleDelete","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","undefined","history","push","boolean","urlPrefix","parseInt","handlePagination","height","Progress","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","icon","label","filteredData","connect","NomineeList","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","NomineeListConfig","queryString","parse","location","search","React","CheckBoxesVuexy","defaultChecked","checked","disabled","Chip","closeChip","closest","remove","avatarImg","avatarText","avatarIcon","avatarColor","width","closable","closableIcon"],"mappings":"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","file":"static/js/73.3ec2af20.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport const getData = params => {\n  return async dispatch => {\n    await axios.get(\"/api/datalist/data\", params).then(response => {\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data.data,\n        totalPages: response.data.totalPages,\n        params\n      })\n    })\n  }\n}\n\nexport const getInitialData = () => {\n  return async dispatch => {\n    await axios.get(\"/api/datalist/initial-data\").then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const filterData = value => {\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\n}\n\nexport const deleteData = obj => {\n  return dispatch => {\n    axios\n      .post(\"/api/datalist/delete-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"DELETE_DATA\", obj })\n      })\n  }\n}\n\nexport const updateData = obj => {\n  return (dispatch, getState) => {\n    axios\n      .post(\"/api/datalist/update-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"UPDATE_DATA\", obj })\n      })\n  }\n}\n\nexport const addData = obj => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post(\"/api/datalist/add-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"ADD_DATA\", obj })\n        dispatch(getData(params))\n      })\n  }\n}\n","import React, { Component } from \"react\"\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\nimport { X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport classnames from \"classnames\"\n\nclass DataListSidebar extends Component {\n  state = {\n    relation: '',\n    id: \"\",\n    name: \"\",\n    category: \"Audio\",\n    order_status: \"pending\",\n    price: \"\",\n    img: \"\",\n    popularity: {\n      popValue: \"\"\n    }\n  }\n\n  addNew = false\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== null && prevProps.data === null) {\n      if (this.props.data.id !== prevState.id) {\n        this.setState({ id: this.props.data.id })\n      }\n      if (this.props.data.name !== prevState.name) {\n        this.setState({ name: this.props.data.name })\n      }\n      if (this.props.data.relation !== prevState.relation) {\n        this.setState({ relation: this.props.data.relation })\n      }\n      if (this.props.data.popularity.popValue !== prevState.popularity) {\n        this.setState({\n          popularity: {\n            ...this.state.popularity,\n            popValue: this.props.data.popularity.popValue\n          }\n        })\n      }\n      if (this.props.data.order_status !== prevState.order_status) {\n        this.setState({ order_status: this.props.data.order_status })\n      }\n      if (this.props.data.price !== prevState.price) {\n        this.setState({ price: this.props.data.price })\n      }\n      if (this.props.data.img !== prevState.img) {\n        this.setState({ img: this.props.data.img })\n      }\n    }\n    if (this.props.data === null && prevProps.data !== null) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        category: \"Audio\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    if (this.addNew) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        category: \"Audio\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    this.addNew = false\n  }\n\n  handleSubmit = obj => {\n    if (this.props.data !== null) {\n      this.props.updateData(obj)\n    } else {\n      this.addNew = true\n      this.props.addData(obj)\n    }\n    let params = Object.keys(this.props.dataParams).length\n      ? this.props.dataParams\n      : { page: 1, perPage: 4 }\n    this.props.handleSidebar(false, true)\n    this.props.getData(params)\n  }\n\n  render() {\n    let { show, handleSidebar, data } = this.props\n    let { name, relation,category, order_status, price, popularity, img } = this.state\n    return (\n      <div\n        className={classnames(\"data-list-sidebar\", {\n          show: show\n        })}>\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\n          <h4>{data !== null ? \"UPDATE NOMINEE DETAILS\" : \"ADD NEW NOMINEE\"}</h4>\n          <X size={20} onClick={() => handleSidebar(false, true)} />\n        </div>\n        <PerfectScrollbar\n          className=\"data-list-fields px-2 mt-3\"\n          options={{ wheelPropagation: false }}>\n          {this.props.thumbView && img.length ? (\n            <FormGroup className=\"text-center\">\n              <img className=\"img-fluid\" src={img} alt={name} />\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\n                <label\n                  className=\"btn btn-flat-primary\"\n                  htmlFor=\"update-image\"\n                  color=\"primary\">\n                  Upload Image\n                  <input\n                    type=\"file\"\n                    id=\"update-image\"\n                    hidden\n                    onChange={e =>\n                      this.setState({\n                        img: URL.createObjectURL(e.target.files[0])\n                      })\n                    }\n                  />\n                </label>\n                <Button\n                  color=\"flat-danger\"\n                  onClick={() => this.setState({ img: \"\" })}>\n                  Remove Image\n                </Button>\n              </div>\n            </FormGroup>\n          ) : null}\n          <FormGroup>\n            <Label for=\"data-name\">Name</Label>\n            <Input\n              type=\"text\"\n              value={name}\n              placeholder=\"Nominee Name\"\n              onChange={e => this.setState({ name: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-category\">Relation</Label>\n            <Input\n              type=\"select\"\n              id=\"data-category\"\n              value={relation}\n              onChange={e => this.setState({ relation: e.target.value })}>\n              <option>Son</option>\n              <option>Daughter</option>\n              <option>Husband</option>\n              <option>Wide</option>\n              <option>Son-in-law</option>\n              <option>Daughter-in-law</option>\n              <option>Cousin</option>\n              <option>Friend</option>\n              <option>Colluege</option>\n              <option>others</option>\n            </Input>\n          </FormGroup>\n          {relation === \"others\" && <FormGroup>\n            {/* <Label for=\"data-name\">Relation </Label> */}\n            <Input\n              type=\"text\"\n              value={this.state.relation1}\n              placeholder=\"Relation Name\"\n              onChange={e => this.setState({ relation1: e.target.value })}\n              id=\"data-name\"\n            />\n            </FormGroup>}\n            <FormGroup>\n            <Label for=\"data-name\">Email </Label>\n            <Input\n              type=\"text\"\n              value={this.state.email}\n              placeholder=\"Enter nominee email\"\n              onChange={e => this.setState({ email: e.target.value })}\n              id=\"data-name\"\n            />\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"data-price\">Contact No</Label>\n            <Input\n              type=\"number\"\n              value={this.state.conatct1}\n              onChange={e => this.setState({ conatct1: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"Enter primary contact No\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-price\">Secondary Contact No</Label>\n            <Input\n              type=\"number\"\n              value={this.state.conatct2}\n              onChange={e => this.setState({ conatct2: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"Enter secondry contact No\"\n            />\n          </FormGroup>\n            <FormGroup>\n            <Label for=\"data-name\">Address </Label>\n            <Input\n              type=\"textarea\"\n              value={this.state.address}\n              placeholder=\"Adress\"\n              onChange={e => this.setState({ address: e.target.value })}\n              id=\"data-name\"\n            />\n            </FormGroup>\n          {/* <FormGroup>\n            <Label for=\"data-popularity\">Popularity</Label>\n            <Input\n              type=\"number\"\n              value={popularity.popValue}\n              id=\"data-popularity\"\n              placeholder=\"0 - 100%\"\n              onChange={e =>\n                this.setState({\n                  popularity: { popularity, popValue: e.target.value }\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-status\">Order Status</Label>\n            <Input\n              type=\"select\"\n              id=\"data-status\"\n              value={order_status}\n              onChange={e => this.setState({ order_status: e.target.value })}>\n              <option>pending</option>\n              <option>canceled</option>\n              <option>delivered</option>\n              <option>on hold</option>\n            </Input>\n          </FormGroup> */}\n          \n          {this.props.thumbView && img.length <= 0 ? (\n            <label\n              className=\"btn btn-primary\"\n              htmlFor=\"upload-image\"\n              color=\"primary\">\n              Upload Image\n              <input\n                type=\"file\"\n                id=\"upload-image\"\n                hidden\n                onChange={e =>\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\n                }\n              />\n            </label>\n          ) : null}\n        </PerfectScrollbar>\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\n            {data !== null ? \"Update\" : \"Submit\"}\n          </Button>\n          <Button\n            className=\"ml-1\"\n            color=\"danger\"\n            outline\n            onClick={() => handleSidebar(false, true)}>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\nexport default DataListSidebar\n","import React, { Component } from \"react\"\nimport {\n  Button,\n  Progress,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport classnames from \"classnames\"\nimport ReactPaginate from \"react-paginate\"\nimport { history } from \"../../history\"\nimport {\n  Edit,\n  Trash,\n  ChevronDown,\n  Plus,\n  Check,\n  ChevronLeft,\n  ChevronRight\n} from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport {\n  getData,\n  getInitialData,\n  deleteData,\n  updateData,\n  addData,\n  filterData\n} from \"../../redux/actions/data-list/\"\nimport Sidebar from \"./DataListSidebar\"\nimport Chip from \"../../components/@vuexy/chips/ChipComponent\"\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\n\nimport \"../../assets/scss/plugins/extensions/react-paginate.scss\"\nimport \"../../assets/scss/pages/data-list.scss\"\n\nconst chipColors = {\n  \"on hold\": \"warning\",\n  delivered: \"success\",\n  pending: \"primary\",\n  canceled: \"danger\"\n}\n\nconst selectedStyle = {\n  rows: {\n    selectedHighlighStyle: {\n      backgroundColor: \"rgba(115,103,240,.05)\",\n      color: \"#7367F0 !important\",\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\n      \"&:hover\": {\n        transform: \"translateY(0px) !important\"\n      }\n    }\n  }\n}\n\nconst ActionsComponent = props => {\n  return (\n    <div className=\"data-list-action\">\n      <Edit\n        className=\"cursor-pointer mr-1\"\n        size={20}\n        onClick={() => {\n          return props.currentData(props.row)\n        }}\n      />\n      <Trash\n        className=\"cursor-pointer\"\n        size={20}\n        onClick={() => {\n          props.deleteRow(props.row)\n        }}\n      />\n    </div>\n  )\n}\n\nconst CustomHeader = props => {\n  return (\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\n      <div className=\"actions-left d-flex flex-wrap\">\n        <UncontrolledDropdown className=\"data-list-dropdown mr-1\">\n          <DropdownToggle className=\"p-1\" color=\"primary\">\n            <span className=\"align-middle mr-1\">Actions</span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\n            <DropdownItem tag=\"a\">Print</DropdownItem>\n            <DropdownItem tag=\"a\">Export</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <Button\n          className=\"add-new-btn\"\n          color=\"primary\"\n          onClick={() => props.handleSidebar(true, true)}\n          outline>\n          <Plus size={15} />\n          <span className=\"align-middle\">Add New Nominee</span>\n        </Button>\n      </div>\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\n            <span className=\"align-middle mx-50\">\n              {`${props.index[0]} - ${props.index[1]} of ${props.total}`}\n            </span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\n              4\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\n              10\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\n              15\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\n              20\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <div className=\"filter-section\">\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass DataListConfig extends Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.dataList.data.length !== state.data.length ||\n      state.currentPage !== props.parsedFilter.page\n    ) {\n      return {\n        data: props.dataList.data,\n        allData: props.dataList.filteredData,\n        totalPages: props.dataList.totalPages,\n        currentPage: parseInt(props.parsedFilter.page) - 1,\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\n        totalRecords: props.dataList.totalRecords,\n        sortIndex: props.dataList.sortIndex\n      }\n    }\n\n    // Return null if the state hasn't changed\n    return null\n  }\n\n  state = {\n    data: [],\n    totalPages: 0,\n    currentPage: 0,\n    columns: [\n      {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n        minWidth: \"200px\",\n        cell: row => (\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n            {row.name}\n          </p>\n        )\n      },\n      {\n        name: \"Relation\",\n        selector: \"category\",\n        sortable: true\n      },\n      {\n        name: \"Email\",\n        minWidth: \"200px\",\n        selector: \"popularity\",\n        sortable: true,\n        // cell: row => (\n        //   <Progress\n        //     className=\"w-100 mb-0\"\n        //     color={row.popularity.color}\n        //     value={row.popularity.popValue}\n        //   />\n        //)\n      },\n      {\n        name: \"Contact\",\n        selector: \"price\",\n        minWidth: \"150px\",\n        sortable: true,\n        //cell: row => `$${row.price}`\n      },\n      {\n        name: \" \",\n        selector: \"order_status\",\n        sortable: true,\n        cell: row => (\n          <Chip\n            className=\"m-0\"\n            color={row.order_status === \"Unused\" ? \"primary\" : \"success\"}\n            text={row.order_status}\n          />\n        )\n      },\n      \n      {\n        name: \"Actions\",\n        sortable: true,\n        cell: row => (\n          <ActionsComponent\n            row={row}\n            getData={this.props.getData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        )\n      }\n    ],\n    allData: [],\n    value: \"\",\n    rowsPerPage: 4,\n    sidebar: false,\n    currentData: null,\n    selected: [],\n    totalRecords: 0,\n    sortIndex: [],\n    addNew: \"\"\n  }\n\n  thumbView = this.props.thumbView\n\n  componentDidMount() {\n    this.props.getData(this.props.parsedFilter)\n    this.props.getInitialData()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.thumbView) {\n      this.thumbView = false\n      let columns = [\n        {\n          name: \"Image\",\n          selector: \"img\",\n          minWidth: \"220px\",\n          cell: row => <img src={row.img} height=\"100\" alt={row.name} />\n        },\n        {\n          name: \"Name\",\n          selector: \"name\",\n          sortable: true,\n          minWidth: \"250px\",\n          cell: row => (\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n              {row.name}\n            </p>\n          )\n        },\n        {\n          name: \"Category\",\n          selector: \"category\",\n          sortable: true\n        },\n        {\n          name: \"Popularity\",\n          selector: \"popularity\",\n          sortable: true,\n          cell: row => (\n            <Progress\n              className=\"w-100 mb-0\"\n              color={row.popularity.color}\n              value={row.popularity.popValue}\n            />\n          )\n        },\n        {\n          name: \"Order Status\",\n          selector: \"order_status\",\n          sortable: true,\n          cell: row => (\n            <Chip\n              className=\"m-0\"\n              color={chipColors[row.order_status]}\n              text={row.order_status}\n            />\n          )\n        },\n        {\n          name: \"Price\",\n          selector: \"price\",\n          sortable: true,\n          cell: row => `$${row.price}`\n        },\n        {\n          name: \"Actions\",\n          sortable: true,\n          cell: row => (\n            <ActionsComponent\n              row={row}\n              getData={this.props.getData}\n              parsedFilter={this.props.parsedFilter}\n              currentData={this.handleCurrentData}\n              deleteRow={this.handleDelete}\n            />\n          )\n        }\n      ]\n      this.setState({ columns })\n    }\n  }\n\n  handleFilter = e => {\n    this.setState({ value: e.target.value })\n    this.props.filterData(e.target.value)\n  }\n\n  handleRowsPerPage = value => {\n    let { parsedFilter, getData } = this.props\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\n    history.push(`/data-list/list-view?page=${page}&perPage=${value}`)\n    this.setState({ rowsPerPage: value })\n    getData({ page: parsedFilter.page, perPage: value })\n  }\n\n  handleSidebar = (boolean, addNew = false) => {\n    this.setState({ sidebar: boolean })\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\n  }\n\n  handleDelete = row => {\n    this.props.deleteData(row)\n    this.props.getData(this.props.parsedFilter)\n    if (this.state.data.length - 1 === 0) {\n      let urlPrefix = this.props.thumbView\n        ? \"/data-list/thumb-view/\"\n        : \"/data-list/list-view/\"\n      history.push(\n        `${urlPrefix}list-view?page=${parseInt(\n          this.props.parsedFilter.page - 1\n        )}&perPage=${this.props.parsedFilter.perPage}`\n      )\n      this.props.getData({\n        page: this.props.parsedFilter.page - 1,\n        perPage: this.props.parsedFilter.perPage\n      })\n    }\n  }\n\n  handleCurrentData = obj => {\n    this.setState({ currentData: obj })\n    this.handleSidebar(true)\n  }\n\n  handlePagination = page => {\n    let { parsedFilter, getData } = this.props\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\n    let urlPrefix = this.props.thumbView\n      ? \"/data-list/thumb-view/\"\n      : \"/data-list/list-view/\"\n    history.push(\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\n    )\n    getData({ page: page.selected + 1, perPage: perPage })\n    this.setState({ currentPage: page.selected })\n  }\n\n  render() {\n    let {\n      columns,\n      data,\n      allData,\n      totalPages,\n      value,\n      rowsPerPage,\n      currentData,\n      sidebar,\n      totalRecords,\n      sortIndex\n    } = this.state\n    return (\n      <div\n        className={`data-list ${\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\n        }`}>\n        <DataTable\n          columns={columns}\n          data={value.length ? allData : data}\n          pagination\n          paginationServer\n          paginationComponent={() => (\n            <ReactPaginate\n              previousLabel={<ChevronLeft size={15} />}\n              nextLabel={<ChevronRight size={15} />}\n              breakLabel=\"...\"\n              breakClassName=\"break-me\"\n              pageCount={totalPages}\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\n              activeClassName=\"active\"\n              forcePage={\n                this.props.parsedFilter.page\n                  ? parseInt(this.props.parsedFilter.page - 1)\n                  : 0\n              }\n              onPageChange={page => this.handlePagination(page)}\n            />\n          )}\n          noHeader\n          subHeader\n          selectableRows\n          responsive\n          pointerOnHover\n          selectableRowsHighlight\n          onSelectedRowsChange={data =>\n            this.setState({ selected: data.selectedRows })\n          }\n          customStyles={selectedStyle}\n          subHeaderComponent={\n            <CustomHeader\n              handleSidebar={this.handleSidebar}\n              handleFilter={this.handleFilter}\n              handleRowsPerPage={this.handleRowsPerPage}\n              rowsPerPage={rowsPerPage}\n              total={totalRecords}\n              index={sortIndex}\n            />\n          }\n          sortIcon={<ChevronDown />}\n          selectableRowsComponent={Checkbox}\n          selectableRowsComponentProps={{\n            color: \"primary\",\n            icon: <Check className=\"vx-icon\" size={12} />,\n            label: \"\",\n            size: \"sm\"\n          }}\n        />\n        <Sidebar\n          show={sidebar}\n          data={currentData}\n          updateData={this.props.updateData}\n          addData={this.props.addData}\n          handleSidebar={this.handleSidebar}\n          thumbView={this.props.thumbView}\n          getData={this.props.getData}\n          dataParams={this.props.parsedFilter}\n          addNew={this.state.addNew}\n        />\n        <div\n          className={classnames(\"data-list-overlay\", {\n            show: sidebar\n          })}\n          onClick={() => this.handleSidebar(false, true)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state.dataList\n  }\n}\n\nexport default connect(mapStateToProps, {\n  getData,\n  deleteData,\n  updateData,\n  addData,\n  getInitialData,\n  filterData\n})(DataListConfig)\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport NomineeListConfig from \"./NomineeListConfig\"\nimport queryString from \"query-string\"\nclass NomineeList extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Manage Nominees\"\n          breadCrumbParent=\"Nominee\"\n          breadCrumbActive=\"List\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <NomineeListConfig parsedFilter={queryString.parse(this.props.location.search)}/>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default NomineeList\n","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React from \"react\"\nimport { X } from \"react-feather\"\nclass Chip extends React.Component {\n  closeChip = e => {\n    e.target.closest(\".chip\").remove()\n  }\n\n  render() {\n    return (\n      <div\n        className={`chip ${this.props.className} ${\n          this.props.color ? `chip-${this.props.color}` : null\n        }`}\n      >\n        <div className=\"chip-body\">\n          {(!this.props.avatarImg && this.props.avatarText) ||\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\n            <div\n              className={`avatar ${\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\n              }`}\n            >\n              <div className=\"avatar-content\">\n                {this.props.avatarText ? this.props.avatarText : null}\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\n              </div>\n            </div>\n          ) : this.props.avatarImg ? (\n            <div className=\"avatar\">\n              <img\n                src={this.props.avatarImg}\n                alt=\"chipImg\"\n                height=\"20\"\n                width=\"20\"\n              />\n            </div>\n          ) : null}\n          <div className=\"chip-text\">{this.props.text}</div>\n          {this.props.closable ? (\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Chip\n"],"sourceRoot":""}