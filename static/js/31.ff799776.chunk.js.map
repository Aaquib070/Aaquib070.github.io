{"version":3,"sources":["views/ContactUs/ContactUs.js","assets/img/slider/banner-31.jpg","assets/img/slider/banner-25.jpg","assets/img/slider/banner-22.jpg","assets/img/slider/banner-23.jpg","assets/img/slider/banner-24.jpg"],"names":["params","effect","grabCursor","autoplay","delay","disableOnInteraction","cubeEffect","shadow","slideShadows","shadowOffset","shadowScale","pagination","el","colourOptions1","value","label","color","isFixed","ConatactUs","state","addTask","taskStatus","isCompleted","taskImportant","importantTask","taskStarred","starTask","newTask","title","desc","tags","isImportant","isStarred","updateLabel","selectAssetRef","ptype","audioDetails","taskToUpdate","completeTask","setState","this","taskTitle","taskDesc","Fragment","className","lg","md","sm","classNamePrefix","ref","name","options","isClearable","placeholder","onChange","e","type","target","onRecordingComplete","videoBlob","console","log","record","audioURL","url","showUIAudio","handleAudioStop","data","handleAudioUpload","handleRest","rows","length","renderTags","style","textAlign","Ripple","outline","onClick","updateTask","_id","addNewTask","disabled","id","position","marginLeft","backgroundImage","img1","backgroundSize","img2","img3","img4","img5","React","Component","module","exports"],"mappings":"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","file":"static/js/31.ff799776.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport 'swiper/css/swiper.css'\r\nimport '../../assets/scss/plugins/extensions/swiper.scss'\r\nimport img1 from '../../assets/img/slider/banner-31.jpg'\r\nimport img2 from '../../assets/img/slider/banner-22.jpg'\r\nimport img3 from '../../assets/img/slider/banner-23.jpg'\r\nimport img4 from '../../assets/img/slider/banner-24.jpg'\r\nimport img5 from '../../assets/img/slider/banner-25.jpg'\r\nimport Swiper from 'react-id-swiper'\r\nimport 'swiper/css/swiper.css'\r\nimport Select from 'react-select'\r\nimport VideoRecorder from 'react-video-recorder'\r\nimport { Recorder } from 'react-voice-recorder'\r\nimport { Input, Button, FormGroup } from 'reactstrap'\r\nconst params = {\r\n  effect: 'cube',\r\n  grabCursor: true,\r\n  autoplay: {\r\n    delay: 2000,\r\n    disableOnInteraction: true\r\n  },\r\n  cubeEffect: {\r\n    shadow: true,\r\n    slideShadows: true,\r\n    shadowOffset: 20,\r\n    shadowScale: 0.94\r\n  },\r\n  pagination: {\r\n    el: '.swiper-pagination'\r\n  }\r\n}\r\nconst colourOptions1 = [\r\n  {\r\n    value: 'Text',\r\n    label: 'Text',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Attachment',\r\n    label: 'Attachment',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Voice',\r\n    label: 'Voice',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Video',\r\n    label: 'Video',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  }\r\n]\r\n\r\nclass ConatactUs extends React.Component {\r\n  state = {\r\n    addTask: '',\r\n    taskStatus: '',\r\n    isCompleted: '',\r\n    taskImportant: '',\r\n    importantTask: '',\r\n    taskStarred: '',\r\n    starTask: '',\r\n    newTask: {\r\n      title: '',\r\n      desc: '',\r\n      tags: [],\r\n      isCompleted: false,\r\n      isImportant: false,\r\n      isStarred: false\r\n    },\r\n    updateLabel: '',\r\n    selectAssetRef: '',\r\n    ptype: '',\r\n    audioDetails: '',\r\n    taskToUpdate: ''\r\n  }\r\n  completeTask = (value) => {\r\n    this.setState({ isCompleted: value })\r\n  }\r\n  render() {\r\n    const { newTask, taskTitle, taskDesc, taskToUpdate } = this.state\r\n    return (\r\n      <React.Fragment>\r\n        <h2 className=\"warning spacing\">Sender</h2>\r\n        <Row>\r\n          <Col lg=\"8\" md=\"6\" sm=\"12\">\r\n            <Row className=\"match-height\">\r\n              {/* <PerfectScrollbar>\r\n              </PerfectScrollbar> */}\r\n              <Col md=\"12\">\r\n                <FormGroup className=\"form-label-group\">\r\n                  <Select\r\n                    className=\"React\"\r\n                    classNamePrefix=\"select\"\r\n                    // defaultValue={colourOptions1[0]}\r\n\r\n                    ref={this.state.selectAssetRef}\r\n                    name=\"color\"\r\n                    options={colourOptions1}\r\n                    isClearable={true}\r\n                    placeholder=\"Select Message Type...\"\r\n                    onChange={(e) => {\r\n                      this.setState({\r\n                        ptype: e ? e.value : ''\r\n                      })\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    value={\r\n                      this.state.taskToUpdate !== null\r\n                        ? taskTitle\r\n                        : newTask.title\r\n                    }\r\n                    onChange={(e) => {\r\n                      if (this.state.taskToUpdate !== null) {\r\n                        this.setState({\r\n                          taskTitle: e.target.value\r\n                        })\r\n                      } else {\r\n                        this.setState({\r\n                          newTask: {\r\n                            ...this.state.newTask,\r\n                            title: e.target.value\r\n                          }\r\n                        })\r\n                      }\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n                {this.state.ptype === 'Video' && (\r\n                  <VideoRecorder\r\n                    onRecordingComplete={(videoBlob) => {\r\n                      // Do something with the video...\r\n                      console.log('videoBlob', videoBlob)\r\n                    }}\r\n                  />\r\n                )}\r\n                {this.state.ptype === 'Voice' && (\r\n                  // <div className=\"WroCl\">\r\n                  <Recorder\r\n                    record={true}\r\n                    title={'New recording'}\r\n                    audioURL={this.state.audioDetails.url}\r\n                    showUIAudio\r\n                    handleAudioStop={(data) => this.handleAudioStop(data)}\r\n                    handleAudioUpload={(data) => this.handleAudioUpload(data)}\r\n                    handleRest={() => this.handleRest()}\r\n                  />\r\n                  // </div>\r\n                )}\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    placeholder=\"Description\"\r\n                    rows=\"5\"\r\n                    value={\r\n                      this.state.taskToUpdate !== null ? taskDesc : newTask.desc\r\n                    }\r\n                    onChange={(e) => {\r\n                      if (this.state.taskToUpdate !== null) {\r\n                        this.setState({\r\n                          taskDesc: e.target.value\r\n                        })\r\n                      } else {\r\n                        this.setState({\r\n                          newTask: {\r\n                            ...this.state.newTask,\r\n                            desc: e.target.value\r\n                          }\r\n                        })\r\n                      }\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n                <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n                  {this.state.taskToUpdate !== null &&\r\n                  this.state.taskToUpdate?.tags &&\r\n                  this.state.taskToUpdate?.tags.length > 0\r\n                    ? this.renderTags(this.state.taskToUpdate?.tags)\r\n                    : null}\r\n                </div>\r\n                <div\r\n                  className=\"d-flex justify-content-end\"\r\n                  style={{ textAlign: 'right' }}\r\n                >\r\n                  <Button.Ripple\r\n                    outline\r\n                    className=\"mr-1 mb-1 button-label\"\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      this.state.addTask('close')\r\n                      this.setState({\r\n                        newTask: {\r\n                          title: '',\r\n                          desc: '',\r\n                          tags: [],\r\n                          isCompleted: false,\r\n                          isImportant: false,\r\n                          isStarred: false\r\n                        }\r\n                      })\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button.Ripple>{' '}\r\n                  <Button.Ripple\r\n                    className=\"mb-1 button-label\"\r\n                    color=\"warning\"\r\n                    onClick={() => {\r\n                      console.log('taskToUpdate', taskToUpdate)\r\n                      //toast.success('Note Added Successfully!!')\r\n                      const { isCompleted, isImportant, isStarred, tags } =\r\n                        taskToUpdate\r\n                      if (this.state.taskToUpdate !== null) {\r\n                        this.state.updateTask(\r\n                          taskToUpdate?._id,\r\n                          taskTitle,\r\n                          taskDesc,\r\n                          taskToUpdate,\r\n                          isCompleted,\r\n                          isImportant,\r\n                          isStarred,\r\n                          tags\r\n                        )\r\n                      } else {\r\n                        this.state.addNewTask(this.state.newTask)\r\n                      }\r\n                      this.state.addTask('close')\r\n                      this.setState({\r\n                        newTask: {\r\n                          title: '',\r\n                          desc: '',\r\n                          tags: [],\r\n                          isCompleted: false,\r\n                          isImportant: false,\r\n                          isStarred: false\r\n                        }\r\n                      })\r\n                    }}\r\n                    disabled={\r\n                      taskTitle?.length > 0 || newTask?.title?.length > 0\r\n                        ? false\r\n                        : true\r\n                    }\r\n                  >\r\n                    {taskToUpdate &&\r\n                    taskToUpdate?.id &&\r\n                    this.state.taskToUpdate !== null\r\n                      ? 'Update'\r\n                      : 'Add'}\r\n                  </Button.Ripple>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col lg=\"4\" md=\"6\" sm=\"12\">\r\n            <div style={{ position: 'fixed', marginLeft: '60px' }}>\r\n              <Swiper {...params}>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img1})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img2})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img3})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img4})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url(${img5})`,\r\n                    backgroundSize: 'contain'\r\n                  }}\r\n                ></div>\r\n              </Swiper>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ConatactUs\r\n","module.exports = __webpack_public_path__ + \"static/media/banner-31.d54fc4be.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-25.a47593fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-22.702fed4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-23.b74d240c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-24.d3fb51a8.jpg\";"],"sourceRoot":""}