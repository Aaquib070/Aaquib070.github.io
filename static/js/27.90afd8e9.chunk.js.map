{"version":3,"sources":["redux/actions/diary/index.js","views/Diary/DiarySidebar.js","views/Diary/DiaryList.js","views/Diary/TaskSidebar.js","views/Diary/Diary.js","components/@vuexy/checkbox/CheckboxesVuexy.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js","../node_modules/reactstrap/es/Alert.js"],"names":["axios","defaults","baseURL","getTodos","routeParams","user","JSON","parse","localStorage","getItem","_id","dispatch","a","get","params","then","result","console","log","data","type","todos","catch","err","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","DiarySidebar","Fragment","className","onClick","props","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","this","routerProps","location","pathname","React","Component","connect","filter","history","push","DiaryList","state","handleUpdateTask","currentLocation","handleOnChange","e","setState","target","searchTask","match","app","prevState","clearPrevState","getdiaryLIst","routerFilter","todosArr","length","filteredTodos","undefined","renderTodos","map","i","today","Date","createdAt","style","border","padding","key","Alert","title","tags","tag","stopPropagation","trashTask","fontSize","toLocaleDateString","weekday","year","month","day","desc","wordBreak","whiteSpace","FormGroup","display","margin","justifyContent","borderRadius","Input","width","placeholder","onChange","routeParam","todoApp","getState","post","response","val","colourOptions1","label","isFixed","TaskSidebar","audioDetails","url","blob","chunks","duration","h","m","s","ptype","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleAudioStop","handleAudioUpload","file","handleRest","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","addTaskState","icon","checked","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","updateLabel","labelColor","classNamePrefix","ref","selectAssetRef","name","isClearable","onRecordingComplete","videoBlob","record","audioURL","showUIAudio","handleReset","rows","textAlign","outline","handleUndoChanges","updateTask","addNewTask","disabled","ans","task","toast","success","mql","window","matchMedia","Diary","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","open","mediaQueryChanged","handleAddTask","status","Consumer","context","sidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction","CheckBoxesVuexy","defaultChecked","defaultStyles","position","top","left","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","_this","call","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","saveSidebarWidth","componentDidUpdate","isTouching","ev","targetTouches","identifier","clientX","ind","touchWidth","touchSidebarWidth","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","Math","abs","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","root","role","rootId","hasBoxShadow","shadow","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","createElement","sidebarId","overlayClassName","overlayId","contentId","children","defaultProps","defineProperty","module","exports","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","enumerable","forEach","propTypes","PropTypes","string","closeClassName","closeAriaLabel","cssModule","object","fade","bool","isOpen","toggle","func","tagPropType","shape","Fade","innerRef","oneOfType","_objectSpread2","unmountOnExit","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","closeClasses","alertTransition","baseClass","timeout","_extends","in"],"mappings":"yYAGAA,IAAMC,SAASC,QAAU,kCAGlB,IAAMC,EAAW,SAACC,GACvB,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,kBAAkBC,IAE/D,OADAN,EAAYC,KAAOA,EACnB,uCAAO,WAAOM,GAAP,SAAAC,EAAA,sEACCZ,IACHa,IAAI,wBAAyB,CAC5BC,OAAQV,IAETW,MAAK,SAACC,GAELC,QAAQC,IAAI,mBAAoBd,GAChCa,QAAQC,IAAI,mBAAoBF,EAAOG,MACvCR,EAAS,CACPS,KAAM,YACNC,MAAOL,EAAOG,KACdf,mBAGHkB,OAAM,SAACC,GAAD,OAASN,QAAQC,IAAIK,MAfzB,2CAAP,uDAkBWC,EAAe,SAACC,GAC3B,OAAO,SAACd,GACNA,EAAS,CAAES,KAAM,gBAAiBM,GAAID,EAAKC,GAAIC,MAAOF,EAAKG,gBAIlDC,EAAW,SAACJ,GACvB,OAAO,SAACd,GACNmB,QAAQC,IAAI,CACVpB,EAAS,CAAES,KAAM,YAAaM,GAAID,EAAKC,GAAIC,MAAOF,EAAKO,gBAKhDC,EAAgB,SAACR,GAC5B,OAAO,SAACd,GACNmB,QAAQC,IAAI,CACVpB,EAAS,CAAES,KAAM,iBAAkBM,GAAID,EAAKC,GAAIC,MAAOF,EAAKS,kBCtC5DC,E,uKACM,IAAD,OACP,OACE,kBAAC,IAAMC,SAAP,KACE,0BACEC,UAAU,qBACVC,QAAS,kBAAM,EAAKC,MAAMC,aAAY,KAEtC,kBAAC,IAAD,CAAGC,KAAM,MAEX,yBAAKJ,UAAU,iBACb,yBAAKA,UAAU,YACb,kBAACK,EAAA,EAAOC,OAAR,CACEC,OAAK,EACLP,UAAU,YACVQ,MAAM,UACNP,QAAS,WACP,EAAKC,MAAMO,QAAQ,QACnB,EAAKP,MAAMC,aAAY,KAN3B,cAYF,kBAAC,IAAD,CACEH,UAAU,oBACVU,QAAS,CACPC,kBAAkB,IAGpB,kBAACC,EAAA,EAAD,CAAWZ,UAAU,iBACnB,kBAACa,EAAA,EAAD,CACEb,UAAU,gBACVc,QAAM,EACNb,QAAS,WACP,EAAKC,MAAMa,aAAa,QAE1BC,OAC+C,WAA7CC,KAAKf,MAAMgB,YAAYC,SAASC,UAKlC,kBAAC,IAAD,CAAQhB,KAAM,KACd,0BAAMJ,UAAU,qBAAhB,SAGJ,6BACA,wBAAIA,UAAU,mBAAd,WACA,kBAACY,EAAA,EAAD,CAAWZ,UAAU,iBACnB,kBAACa,EAAA,EAAD,CACEb,UAAU,WACVC,QAAS,WACP,EAAKC,MAAMa,aAAa,cAE1BC,OAEE,qBADAC,KAAKf,MAAMgB,YAAYC,SAASC,UAMlC,kBAAC,IAAD,CAAMhB,KAAM,KACZ,0BAAMJ,UAAU,qBAAhB,cAEF,kBAACa,EAAA,EAAD,CACEb,UAAU,WACVC,QAAS,WACP,EAAKC,MAAMa,aAAa,YAE1BC,OAC+C,mBAA7CC,KAAKf,MAAMgB,YAAYC,SAASC,UAKlC,kBAAC,IAAD,CAAUhB,KAAM,KAChB,0BAAMJ,UAAU,qBAAhB,aAEF,kBAACa,EAAA,EAAD,CACEb,UAAU,WACVC,QAAS,WACP,EAAKC,MAAMa,aAAa,cAE1BC,OAEE,qBADAC,KAAKf,MAAMgB,YAAYC,SAASC,UAMlC,kBAAC,IAAD,CAAOhB,KAAM,KACb,0BAAMJ,UAAU,qBAAhB,cAEF,kBAACa,EAAA,EAAD,CACEb,UAAU,WACVC,QAAS,WACP,EAAKC,MAAMa,aAAa,YAE1BC,OAC+C,mBAA7CC,KAAKf,MAAMgB,YAAYC,SAASC,UAKlC,kBAAC,IAAD,CAAOhB,KAAM,KACb,0BAAMJ,UAAU,qBAAhB,aAGJ,6BACA,wBAAIA,UAAU,mBAAd,UACA,kBAACY,EAAA,EAAD,CAAWZ,UAAU,iBACnB,kBAACa,EAAA,EAAD,CACEb,UAAU,WACVC,QAAS,WACP,EAAKC,MAAMa,aAAa,aAE1BC,OAC+C,oBAA7CC,KAAKf,MAAMgB,YAAYC,SAASC,UAKlC,0BAAMpB,UAAU,uCAChB,0BAAMA,UAAU,qBAAhB,aAEF,kBAACa,EAAA,EAAD,CACEb,UAAU,WACVC,QAAS,WACP,EAAKC,MAAMa,aAAa,iBAE1BC,OAEE,wBADAC,KAAKf,MAAMgB,YAAYC,SAASC,UAMlC,0BAAMpB,UAAU,uCAChB,0BAAMA,UAAU,qBAAhB,iBAEF,kBAACa,EAAA,EAAD,CACEb,UAAU,WACVC,QAAS,WACP,EAAKC,MAAMa,aAAa,WAE1BC,OAC+C,kBAA7CC,KAAKf,MAAMgB,YAAYC,SAASC,UAKlC,0BAAMpB,UAAU,uCAChB,0BAAMA,UAAU,qBAAhB,WAEF,kBAACa,EAAA,EAAD,CACEb,UAAU,WACVC,QAAS,WACP,EAAKC,MAAMa,aAAa,SAE1BC,OAC+C,gBAA7CC,KAAKf,MAAMgB,YAAYC,SAASC,UAKlC,0BAAMpB,UAAU,sCAChB,0BAAMA,UAAU,qBAAhB,uB,GAvKWqB,IAAMC,WAiLlBC,cAAQ,KAAM,CAAER,aD5CH,SAACS,GAC3B,OAAO,SAAClD,GACNA,EAAS,CAAES,KAAM,gBAAiByC,WAClCC,IAAQC,KAAR,mBAAyBF,IACzBlD,EAASR,EAAS,CAAE0D,eCwCTD,CAAgCzB,G,6CC1KzC6B,E,4MASJC,MAAQ,CACN5C,MAAO,GACP6C,iBAAkB,KAClBC,gBAAiB,EAAK5B,MAAMgB,YAAYC,SAASC,SACjD9B,MAAO,I,EAoBTyC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAE3C,MAAO0C,EAAEE,OAAO5C,QAChC,EAAKY,MAAMiC,WAAWH,EAAEE,OAAO5C,Q,uLAnBzB2B,KAAKf,MAAMpC,SAASmD,KAAKf,MAAMgB,YAAYkB,MAAM3D,Q,OACvDwC,KAAKgB,SAAS,CACZjD,MAAOiC,KAAKf,MAAMmC,IAAIjD,KAAKJ,MAC3B6C,iBAAkBZ,KAAKf,MAAM2B,mB,sJAIP3B,GACpBe,KAAKf,MAAMoC,YACbrB,KAAKgB,SAAS,CAAEjD,MAAOkB,EAAMmC,IAAIjD,KAAKJ,QACtCiC,KAAKf,MAAMqC,oB,0CAIbtB,KAAKuB,iB,+BAQG,IAAD,SACoCvB,KAAKW,MAAxC5C,EADD,EACCA,MAAO6C,EADR,EACQA,iBAAkBvC,EAD1B,EAC0BA,MAC7BmD,EAAexB,KAAKf,MAAMgB,YAAYkB,MAAM3D,OAAO+C,OACnDkB,EAAWpD,EAAMqD,OAAS1B,KAAKf,MAAMmC,IAAIjD,KAAKwD,cAAgB5D,EAElE,QAAiB6D,IAAbH,GAA8C,IAApBA,EAASC,OACrC,OACE,yBAAK3C,UAAU,2BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,uBAKvB,IAAI8C,EACFJ,EAASC,OAAS,EAChBD,EAASK,KAAI,SAAC3D,EAAM4D,GAClB,IAMIC,EAAQ,IAAIC,KAAK9D,EAAK+D,WAC1B,OACE,wBACEC,MAAO,CAAEC,OAAQ,OAAQC,QAAS,YAClCtD,UAAS,oBAAeZ,EAAKG,YAAc,YAAc,IACzDgE,IAAKP,EACL/C,QAAS,WACP4B,EAAiBzC,KAGnB,kBAACoE,EAAA,EAAD,CACExD,UAAU,OACVQ,MAAOpB,EAAKS,YAAc,SAAW,WAErC,yBAAKG,UAAU,2DACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,0BAA0BZ,EAAKqE,QAG9CrE,EAAKsE,KAAKf,OAAS,EAClB,yBAAK3C,UAAU,gBACZZ,EAAKsE,KAAKX,KAAI,SAACY,EAAKX,GAAN,OACb,yBAAKhD,UAAU,YAAYuD,IAAKP,GAC9B,yBAAKhD,UAAU,aACb,0BAAMA,UAAU,aACd,0BACEA,UAAS,wBACC,YAAR2D,EACI,UACQ,QAARA,EACA,UACQ,QAARA,EACA,SACA,UAPG,gBAUX,0BAAM3D,UAAU,yBACb2D,UAOX,MAGN,yBACE3D,UAAS,kCACU,YAAjByC,EAA6B,sBAAwB,KAGvD,yBACEzC,UAAS,wCACU,YAAjByC,EAA6B,OAAS,gBAExCxC,QAAS,SAAC+B,GACRA,EAAE4B,kBACF,EAAK1D,MAAMN,cAAcR,KAG3B,kBAAC,IAAD,CACEgB,KAAM,GACNJ,UAAS,UAAKZ,EAAKS,YAAc,cAAgB,OAGrD,yBACEG,UAAU,iDACVC,QAAS,SAAC+B,GACRA,EAAE4B,kBACF,EAAK1D,MAAMV,SAASJ,KAGtB,kBAAC,IAAD,CACEgB,KAAM,GACNJ,UAAS,UAAKZ,EAAKO,UAAY,eAAiB,OAGlC,YAAjB8C,EACC,yBACEzC,UAAU,+CACVC,QAAS,SAAC+B,GACRA,EAAE4B,kBACF,EAAK1D,MAAM2D,UAAUzE,EAAKC,MAG5B,kBAAC,IAAD,CAAOe,KAAM,MAEb,OAGR,uBAAGgD,MAAO,CAAEU,SAAU,QACnBb,EAAMc,mBAAmB,QAnGpB,CACZC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,aAiGA/E,EAAKgF,KAAKzB,OAAS,EAClB,uBACE3C,UAAU,iBACVoD,MAAO,CAAEiB,UAAW,YAAaC,WAAY,WAE5ClF,EAAKgF,MAGR,QAOV,uBAAGpE,UAAU,oDAAb,yBAKJ,OACE,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,oBACb,yBACEA,UAAU,0CACVC,QAAS,kBAAM,EAAKC,MAAMC,aAAY,KAEtC,kBAAC,IAAD,CAAMC,KAAM,MAEd,kBAACmE,EAAA,EAAD,CACEnB,MAAO,CACLoB,QAAS,OACTC,OAAQ,OACRC,eAAgB,UAElB1E,UAAU,mCAEV,yBAAKoD,MAAO,CAAEuB,aAAc,aAC1B,yBAAK3E,UAAU,yBACb,kBAAC,IAAD,CAAQI,KAAM,MAEhB,kBAACwE,EAAA,EAAD,CACExB,MAAO,CACLyB,MAAO,QAET9F,KAAK,OACL+F,YAAY,YACZC,SAAU,SAAC/C,GAAD,OAAO,EAAKD,eAAeC,IACrC1C,MAAOA,OAKf,kBAAC,IAAD,CACEU,UAAU,iBACVU,QAAS,CACPC,kBAAkB,IAGpB,wBAAIX,UAAU,0BAA0B8C,W,gDA3NtB5C,EAAO0B,GACrC,OAAI1B,EAAMmC,IAAIjD,KAAK4F,aAAepD,EAAME,gBAC/B,CACL9C,MAAOkB,EAAMmC,IAAIjD,KAAKJ,OAGnB,S,GAPaqC,IAAMC,WA0OfC,eALS,SAACK,GACvB,MAAO,CACLS,IAAKT,EAAMqD,WAGyB,CACtCnH,WACAqB,eACAK,WACAI,gBACAiE,UF3MuB,SAACxE,GACxB,OAAO,SAACf,EAAU4G,GAChB,IAAMzG,EAASyG,IAAWD,QAAQ7F,KAAK4F,WACvCrH,IACGwH,KAAK,2BAA4B9F,GACjCX,MAAK,SAAC0G,GAAD,OAAc9G,EAAS,CAAES,KAAM,aAAcM,UAClDX,KAAKJ,EAASR,EAASW,OEsM5B0D,WF3HwB,SAACkD,GACzB,OAAO,SAAC/G,GACNA,EAAS,CACPS,KAAM,cACNsG,WEiHS9D,CAOZI,G,iGCpOG2D,I,OAAiB,CACrB,CACEhG,MAAO,OACPiG,MAAO,OACP/E,MAAO,UACPgF,SAAS,GAEX,CACElG,MAAO,WACPiG,MAAO,WACP/E,MAAO,UACPgF,SAAS,GAEX,CACElG,MAAO,aACPiG,MAAO,aACP/E,MAAO,UACPgF,SAAS,GAEX,CACElG,MAAO,QACPiG,MAAO,QACP/E,MAAO,UACPgF,SAAS,GAEX,CACElG,MAAO,QACPiG,MAAO,QACP/E,MAAO,UACPgF,SAAS,KAGPC,G,4MACJ7D,MAAQ,CACN8D,aAAc,CACZC,IAAK,KACLC,KAAM,KACNC,OAAQ,KACRC,SAAU,CACRC,EAAG,EACHC,EAAG,EACHC,EAAG,IAGPC,MAAO,GACPC,aAAc,KACdC,UAAW,GACXC,SAAU,GACVC,YAAY,EACZC,aAAa,EACbC,eAAe,EACfC,QAAS,CACPhD,MAAO,GACPW,KAAM,GACNV,KAAM,GACNnE,aAAa,EACbM,aAAa,EACbF,WAAW,I,EA2Bf+G,gBAAkB,SAAC5H,GACjBF,QAAQC,IAAIC,GACZ,EAAKmD,SAAS,CAAEyD,aAAc5G,K,EAEhC6H,kBAAoB,SAACC,GACnBhI,QAAQC,IAAI+H,I,EAEdC,WAAa,WAWX,EAAK5E,SAAS,CAAEyD,aAVF,CACZC,IAAK,KACLC,KAAM,KACNC,OAAQ,KACRC,SAAU,CACRC,EAAG,EACHC,EAAG,EACHC,EAAG,O,EAMTa,kBAAoB,SAACnD,GACnB,IAAIoD,EAAU,EAAKnF,MAAM6E,QAAQ/C,KAC7BqD,EAAQC,SAASrD,GACnBoD,EAAQE,OAAOF,EAAQG,QAAQvD,GAAM,GAErCoD,EAAQrF,KAAKiC,GAEf,EAAK1B,SAAL,2BACK,EAAKL,MAAM6E,SADhB,IAEE/C,KAAMC,M,EAIVwD,WAAa,SAACC,GACZ,OAAOA,EAAQrE,KAAI,SAACY,EAAKX,GAAN,OACjB,yBAAKhD,UAAU,kBAAkBuD,IAAKP,GACpC,yBAAKhD,UAAU,aACb,0BAAMA,UAAU,aACd,0BACEA,UAAS,wBACC,iBAAR2D,EACI,UACQ,WAARA,EACA,UACQ,SAARA,EACA,SACA,UAPG,gBAUX,0BAAM3D,UAAU,yBAAyB2D,U,iEAzEhC0D,EAAW/E,IAEG,OAA5BrB,KAAKf,MAAMiG,cACVlF,KAAKW,MAAMuE,eAAiBlF,KAAKf,MAAMiG,cACZ,OAA5BlF,KAAKf,MAAMiG,cACVlF,KAAKW,MAAM0E,aAAerF,KAAKf,MAAMiG,aAAa5G,aACvB,OAA5B0B,KAAKf,MAAMiG,cACVlF,KAAKW,MAAM2E,cAAgBtF,KAAKf,MAAMiG,aAAaxG,WACxB,OAA5BsB,KAAKf,MAAMiG,cACVlF,KAAKW,MAAM4E,gBAAkBvF,KAAKf,MAAMiG,aAAatG,cAEvDoB,KAAKgB,SAAS,CACZkE,aAAclF,KAAKf,MAAMiG,aACzBC,UAAWnF,KAAKf,MAAMiG,aAAa1C,MACnC4C,SAAUpF,KAAKf,MAAMiG,aAAa/B,KAClCkC,WAAYrF,KAAKf,MAAMiG,aAAa5G,YACpCgH,YAAatF,KAAKf,MAAMiG,aAAaxG,UACrC6G,cAAevF,KAAKf,MAAMiG,aAAatG,gB,+BA+DnC,IAAD,SAELoB,KAAKW,MADCuE,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,SAAUI,EADpC,EACoCA,QAASH,EAD7C,EAC6CA,WAGpD,OACE,yBAAKtG,UAAS,uBAAkBiB,KAAKf,MAAMoH,aAAe,OAAS,KACjE,yBAAKtH,UAAU,eACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,iCACb,wBAAIoD,MAAO,CAAE5C,MAAO,mBACjBS,KAAKf,MAAMiG,cAAgBlF,KAAKf,MAAMiG,aAAa9G,GAChD,iBACA,kBAGR,yBAAKW,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,iBACVI,KAAM,GACNH,QAAS,WACP,EAAKC,MAAMO,QAAQ,eAO7B,kBAAC,IAAD,KACE,yBAAKT,UAAU,aACb,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,iBACZiB,KAAKf,MAAMiG,cAAgBlF,KAAKf,MAAMiG,aAAa9G,IAClD,kBAAC,IAAD,CACEmB,MAAM,UACNR,UAAU,gBACVuH,KAAM,kBAAC,IAAD,CAAOvH,UAAU,UAAUI,KAAM,KACvCmF,MAAO,GACPiC,QAASlB,EACTvB,SAAU,SAAC/C,GACT,EAAK9B,MAAMf,aAAa,EAAKe,MAAMiG,kBAK3C,yBAAKnG,UAAU,gBACb,kBAAC,IAAD,CACEI,KAAM,GACNJ,UAAS,gBACsB,OAA5BiB,KAAKf,MAAMiG,cACVlF,KAAKW,MAAM4E,eACbC,EAAQ5G,YACJ,eACA,IAENI,QAAS,WACyB,OAA5B,EAAKC,MAAMiG,aACb,EAAKjG,MAAMN,cAAc,EAAKM,MAAMiG,cAEpC,EAAKlE,SAAS,CACZwE,QAAQ,2BACH,EAAK7E,MAAM6E,SADT,IAEL5G,aAAc,EAAK+B,MAAM6E,QAAQ5G,mBAM3C,kBAAC,IAAD,CACEO,KAAM,GACNJ,UAAS,gBACsB,OAA5BiB,KAAKf,MAAMiG,cACVlF,KAAKW,MAAM2E,aACbE,EAAQ9G,UACJ,eACA,IAENM,QAAS,WACyB,OAA5B,EAAKC,MAAMiG,aACb,EAAKjG,MAAMV,SAAS,EAAKU,MAAMiG,cAE/B,EAAKlE,SAAS,CACZwE,QAAQ,2BACH,EAAK7E,MAAM6E,SADT,IAEL9G,WAAY,EAAKiC,MAAM6E,QAAQ9G,iBAMzC,kBAAC8H,EAAA,EAAD,CAAsBzH,UAAU,kBAC9B,kBAAC0H,EAAA,EAAD,CAAgB/D,IAAI,QAClB,kBAAC,IAAD,CAAK3D,UAAU,QAAQI,KAAM,MAE/B,kBAACuH,EAAA,EAAD,CAAchE,IAAI,KAAKiE,OAAK,GAC1B,kBAACC,EAAA,EAAD,CAAclE,IAAI,MAChB,kBAAC,IAAD,CACEnD,MAAM,UACNR,UAAU,gBACVuH,KAAM,kBAAC,IAAD,CAAOvH,UAAU,UAAUI,KAAM,KACvCmF,MAAO,WACPiC,WAC+B,OAA5BvG,KAAKf,MAAMiG,cACVlF,KAAKf,MAAMiG,aAAazC,KAAKsD,SAC3B,aAEJP,EAAQ/C,KAAKsD,SAAS,aAIxB5G,KAAK,KACL2E,SAAU,SAAC/C,GACTA,EAAE4B,kBAC8B,OAA5B,EAAK1D,MAAMiG,aACb,EAAKjG,MAAM4H,YAAY3B,EAAa9G,GAAI,YACrC,EAAKyH,kBAAkB,gBAIlC,kBAACe,EAAA,EAAD,CAAclE,IAAI,MAChB,kBAAC,IAAD,CACEnD,MAAM,UACNuH,WAAW,UACX/H,UAAU,gBACVuH,KAAM,kBAAC,IAAD,CAAOvH,UAAU,UAAUI,KAAM,KACvCmF,MAAO,eACPiC,WAC+B,OAA5BvG,KAAKf,MAAMiG,cACVlF,KAAKf,MAAMiG,aAAazC,KAAKsD,SAC3B,iBAEJP,EAAQ/C,KAAKsD,SAAS,iBAIxB5G,KAAK,KACLH,QAAS,SAAC+B,GAAD,OAAOA,EAAE4B,mBAClBmB,SAAU,SAAC/C,GACTA,EAAE4B,kBAC8B,OAA5B,EAAK1D,MAAMiG,aACb,EAAKjG,MAAM4H,YACT3B,EAAa9G,GACb,gBAEC,EAAKyH,kBAAkB,oBAIlC,kBAACe,EAAA,EAAD,CAAclE,IAAI,MAChB,kBAAC,IAAD,CACEnD,MAAM,UACNR,UAAU,gBACVuH,KAAM,kBAAC,IAAD,CAAOvH,UAAU,UAAUI,KAAM,KACvCmF,MAAO,SACPwC,WAAW,UACXP,WAC+B,OAA5BvG,KAAKf,MAAMiG,cACVlF,KAAKf,MAAMiG,aAAazC,KAAKsD,SAAS,WACxCP,EAAQ/C,KAAKsD,SAAS,WAIxB5G,KAAK,KACLH,QAAS,SAAC+B,GAAD,OAAOA,EAAE4B,mBAClBmB,SAAU,SAAC/C,GACTA,EAAE4B,kBAC8B,OAA5B,EAAK1D,MAAMiG,aACb,EAAKjG,MAAM4H,YAAY3B,EAAa9G,GAAI,UACrC,EAAKyH,kBAAkB,cAIlC,kBAACe,EAAA,EAAD,CAAclE,IAAI,MAChB,kBAAC,IAAD,CACEnD,MAAM,UACNR,UAAU,gBACV+H,WAAW,UACXR,KAAM,kBAAC,IAAD,CAAOvH,UAAU,UAAUI,KAAM,KACvCmF,MAAO,aACPiC,WAC+B,OAA5BvG,KAAKf,MAAMiG,cACVlF,KAAKf,MAAMiG,aAAazC,KAAKsD,SAAS,SACxCP,EAAQ/C,KAAKsD,SAAS,SAIxB5G,KAAK,KACLH,QAAS,SAAC+B,GAAD,OAAOA,EAAE4B,mBAClBmB,SAAU,SAAC/C,GACTA,EAAE4B,kBAC8B,OAA5B,EAAK1D,MAAMiG,aACb,EAAKjG,MAAM4H,YAAY3B,EAAa9G,GAAI,QACrC,EAAKyH,kBAAkB,gBAS1C,kBAACvC,EAAA,EAAD,CAAWvE,UAAU,oBACnB,kBAAC,IAAD,CACEA,UAAU,QACVgI,gBAAgB,SAGhBC,IAAKhH,KAAKW,MAAMsG,eAChBC,KAAK,QACLzH,QAAS4E,GACT8C,aAAa,EACbtD,YAAY,yBACZC,SAAU,SAAC/C,GACT,EAAKC,SAAS,CACZiE,MAAOlE,EAAIA,EAAE1C,MAAQ,SAK7B,kBAACiF,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CACE7F,KAAK,OACL+F,YAAY,QACZxF,MAC8B,OAA5B2B,KAAKf,MAAMiG,aAAwBC,EAAYK,EAAQhD,MAEzDsB,SAAU,SAAC/C,GACuB,OAA5B,EAAK9B,MAAMiG,aACb,EAAKlE,SAAS,CACZmE,UAAWpE,EAAEE,OAAO5C,QAGtB,EAAK2C,SAAS,CACZwE,QAAQ,2BACH,EAAK7E,MAAM6E,SADT,IAELhD,MAAOzB,EAAEE,OAAO5C,cAON,UAArB2B,KAAKW,MAAMsE,OACV,kBAAC,IAAD,CACEmC,oBAAqB,SAACC,GAEpB1J,QAAQC,IAAI,YAAayJ,MAIT,UAArBrH,KAAKW,MAAMsE,OACV,kBAAC,IAAD,CACEqC,QAAQ,EACR9E,MAAO,gBACP+E,SAAUvH,KAAKW,MAAM8D,aAAaC,IAClC8C,aAAW,EACX/B,gBAAiB,SAAC5H,GAAD,OAAU,EAAK4H,gBAAgB5H,IAChD6H,kBAAmB,SAAC7H,GAAD,OAAU,EAAK6H,kBAAkB7H,IACpD4J,YAAa,kBAAM,EAAK7B,gBAG5B,kBAACtC,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CACE7F,KAAK,WACL+F,YAAY,cACZ6D,KAAK,IACLrJ,MAC8B,OAA5B2B,KAAKf,MAAMiG,aAAwBE,EAAWI,EAAQrC,KAExDW,SAAU,SAAC/C,GACuB,OAA5B,EAAK9B,MAAMiG,aACb,EAAKlE,SAAS,CACZoE,SAAUrE,EAAEE,OAAO5C,QAGrB,EAAK2C,SAAS,CACZwE,QAAQ,2BACH,EAAK7E,MAAM6E,SADT,IAELrC,KAAMpC,EAAEE,OAAO5C,cAO3B,yBAAKU,UAAU,sCACgB,OAA5BiB,KAAKf,MAAMiG,cACZlF,KAAKf,MAAMiG,aAAazC,MACxBzC,KAAKf,MAAMiG,aAAazC,KAAKf,OAAS,EAClC1B,KAAKkG,WAAWlG,KAAKf,MAAMiG,aAAazC,MACxC,MAEN,yBACE1D,UAAU,6BACVoD,MAAO,CAAEwF,UAAW,UAEpB,kBAACvI,EAAA,EAAOC,OAAR,CACEuI,SAAO,EACP7I,UAAU,yBACVQ,MAAM,YACNP,QAAS,WACP,EAAKC,MAAMO,QAAQ,SACnB,EAAKP,MAAM4I,oBACX,EAAK7G,SAAS,CACZwE,QAAS,CACPhD,MAAO,GACPW,KAAM,GACNV,KAAM,GACNnE,aAAa,EACbM,aAAa,EACbF,WAAW,OAdnB,UAoBiB,IACjB,kBAACU,EAAA,EAAOC,OAAR,CACEN,UAAU,oBACVQ,MAAM,UACNP,QAAS,WACPrB,QAAQC,IAAI,eAAgBsH,GADf,IAGL5G,EACN4G,EADM5G,YAAaM,EACnBsG,EADmBtG,YAAaF,EAChCwG,EADgCxG,UAAW+D,EAC3CyC,EAD2CzC,KAEb,OAA5B,EAAKxD,MAAMiG,aACb,EAAKjG,MAAM6I,WACT5C,EAAa9H,IACb+H,EACAC,EACAF,EACA5G,EACAM,EACAF,EACA+D,GAGF,EAAKxD,MAAM8I,WAAW,EAAKpH,MAAM6E,SAEnC,EAAKvG,MAAMO,QAAQ,SACnB,EAAKwB,SAAS,CACZwE,QAAS,CACPhD,MAAO,GACPW,KAAM,GACNV,KAAM,GACNnE,aAAa,EACbM,aAAa,EACbF,WAAW,MAIjBsJ,WACE7C,EAAUzD,OAAS,GAAK8D,EAAQhD,MAAMd,OAAS,IAKhDwD,GACDA,EAAa9G,IACe,OAA5B4B,KAAKf,MAAMiG,aACP,SACA,e,GArdM9E,IAAMC,WAoejBC,gBANS,SAACK,GACvB,MAAO,CACLS,IAAKT,EAAMqD,WAIyB,CACtC9F,eACAS,gBACAJ,WACAuJ,WHvdwB,SACxB1J,EACAoE,EACAW,EACA+B,EACA5G,EACAM,EACAF,EACA+D,GAEA,IAAMwF,EAAM,CACV7K,IAAKgB,EACLoE,QACAW,OACA+B,eACA5G,cACAM,cACAF,YACA+D,QAEc/F,IAAMwH,KAAK,2BAA4B+D,GACvD,OAAO,SAAC5K,GACNA,EAAS,CACPS,KAAM,cACNM,KACAoE,QACAW,OACA+B,eACA5G,cACAM,cACAF,YACA+D,WGybJoE,YHpbyB,SAACzI,EAAIkG,GAC9B,OAAO,SAACjH,EAAU4G,GAChB5G,EAAS,CAAES,KAAM,eAAgBwG,QAAOlG,SGmb1C2J,WH/awB,SAACG,GACzB,OAAO,SAAC7K,EAAU4G,GAChB,IAAMzG,EAASyG,IAAWD,QAAQ7F,KAAK4F,WACjChH,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,kBAAkBC,IAC/D8K,EAAKnL,KAAOA,EACZL,IAAMwH,KAAK,wBAAyBgE,GAAMzK,MAAK,SAAC0G,GAC9C9G,EAAS,CAAES,KAAM,WAAYoK,SAC7B7K,EAASR,EAASW,IAClB2K,IAAMC,QAAQ,mCGiaL9H,CAOZkE,IC3hBG6D,I,qBAAMC,OAAOC,WAAP,uBAENC,G,4MACJ7H,MAAQ,CACNnB,SAAS,EACTiJ,cAAeJ,GAAIK,QACnBC,aAAa,EACbzD,aAAc,KACd7D,UAAW,M,EAGbuH,iBAAmB,SAACC,GAClB,EAAK7H,SAAS,CAAE2H,YAAaE,K,EAG/BC,kBAAoB,WAClB,EAAK9H,SAAS,CAAEyH,cAAeJ,GAAIK,QAASC,aAAa,K,EAG3DI,cAAgB,SAACC,GACJ,SAAXA,EACI,EAAKhI,SAAS,CAAExB,SAAS,IACzB,EAAKwB,SAAS,CAAExB,SAAS,EAAO0F,aAAc,Q,EAEpDtE,iBAAmB,SAACzC,QACLyD,IAATzD,EACF,EAAK6C,SAAS,CAAExB,SAAS,EAAM0F,aAAc/G,IAE7C,EAAK6C,SAAS,CAAEkE,aAAc,Q,EAIlC2C,kBAAoB,WAClBlK,QAAQC,IAAI,kBACZ,EAAKoD,SAAS,CACZK,WAAW,K,uDAUL,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,MACA,wBAAItC,UAAU,mBAAd,gBACA,yBAAKA,UAAU,sCACb,yBACEA,UAAS,8BACPiB,KAAKW,MAAMnB,SAAWQ,KAAKW,MAAMgI,YAAc,OAAS,IAE1D3J,QAAS,WACP,EAAK+J,cAAc,SACnB,EAAKH,kBAAiB,MAG1B,kBAAC,IAAcK,SAAf,MACG,SAACC,GAAD,OACC,kBAAC,IAAD,CACEC,QACE,kBAAC,EAAD,CACElJ,YAAa,EAAKhB,MAClBO,QAAS,EAAKuJ,cACd7J,YAAa,EAAK0J,mBAGtBQ,OAAQ,EAAKzI,MAAM8H,cACnBI,KAAM,EAAKlI,MAAMgI,YACjBU,iBAAiB,sCACjBC,OAAO,EACPC,iBAAiB,0BACjBC,UAAuC,QAA5BN,EAAQvI,MAAM8I,WAb3B,SAmBJ,kBAAC,EAAD,CACExJ,YAAaD,KAAKf,MAClB2B,iBAAkBZ,KAAKY,iBACvB1B,YAAac,KAAK4I,iBAClBvH,UAAWrB,KAAKW,MAAMU,UACtBC,eAAgB,WACd,EAAKN,SAAS,CAAEK,WAAW,OAG/B,kBAAC,GAAD,CACE7B,QAASQ,KAAK+I,cACd1C,aAAcrG,KAAKW,MAAMnB,QACzB0F,aAAclF,KAAKW,MAAMuE,aACzBM,QAASxF,KAAKW,MAAM6E,QACpBtG,YAAac,KAAK4I,iBAClBf,kBAAmB7H,KAAK6H,0B,GA9FhBzH,IAAMC,WAsGXmI,c,qFCjHTkB,E,uKAEF,OACE,yBACE3K,UAAS,0BACPiB,KAAKf,MAAMF,UAAYiB,KAAKf,MAAMF,UAAY,GADvC,wBAEOiB,KAAKf,MAAMM,QAE3B,2BACEzB,KAAK,WACL6L,eAAgB3J,KAAKf,MAAM0K,eAC3BpD,QAASvG,KAAKf,MAAMsH,QACpBlI,MAAO2B,KAAKf,MAAMZ,MAClB2J,SAAUhI,KAAKf,MAAM+I,SACrBhJ,QAASgB,KAAKf,MAAMD,QAAUgB,KAAKf,MAAMD,QAAU,KACnD8E,SAAU9D,KAAKf,MAAM6E,SAAW9D,KAAKf,MAAM6E,SAAW,OAExD,0BACE/E,UAAS,kCACPiB,KAAKf,MAAME,KAAOa,KAAKf,MAAME,KAAO,OAGtC,0BAAMJ,UAAU,sBAAsBiB,KAAKf,MAAMqH,OAEnD,0BAAMnE,MAAO,CAAE5C,MAAOS,KAAKf,MAAM6H,aAAe9G,KAAKf,MAAMqF,Y,GAxBrClE,IAAMC,WA8BrBqJ,O,uDC/Bf,wEAOIE,GAPJ,KAQQ,CACJC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNpD,MAAO,EACPqD,OAAQ,EACRC,SAAU,WAPVL,EASO,CACPM,OAAQ,EACRL,SAAU,WACVC,IAAK,EACLE,OAAQ,EACRG,WAAY,yBACZC,iBAAkB,iCAClBC,WAAY,YACZC,UAAW,QAjBXV,EAmBO,CACPC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNpD,MAAO,EACPqD,OAAQ,EACRM,UAAW,OACXC,wBAAyB,QACzBJ,WAAY,yCA3BZP,EA6BO,CACPM,OAAQ,EACRL,SAAU,QACVC,IAAK,EACLC,KAAM,EACNpD,MAAO,EACPqD,OAAQ,EACRQ,QAAS,EACTC,WAAY,SACZN,WAAY,gDACZO,gBAAiB,kBAvCjBd,EAyCU,CACVM,OAAQ,EACRL,SAAU,QACVC,IAAK,EACLE,OAAQ,GAIRW,EAEJ,SAAUC,GAGR,SAASD,EAAQ1L,GACf,IAAI4L,EAmBJ,OAjBAA,EAAQD,EAAWE,KAAK9K,KAAMf,IAAUe,MAClCW,MAAQ,CAEZoK,aAAc9L,EAAM+L,oBAEpBC,gBAAiB,KACjBC,YAAa,KACbC,cAAe,KAEfC,eAAe,GAEjBP,EAAMQ,eAAiBR,EAAMQ,eAAeC,KAAKC,IAAuBA,IAAuBV,KAC/FA,EAAMW,aAAeX,EAAMW,aAAaF,KAAKC,IAAuBA,IAAuBV,KAC3FA,EAAMY,YAAcZ,EAAMY,YAAYH,KAAKC,IAAuBA,IAAuBV,KACzFA,EAAMa,WAAab,EAAMa,WAAWJ,KAAKC,IAAuBA,IAAuBV,KACvFA,EAAMc,SAAWd,EAAMc,SAASL,KAAKC,IAAuBA,IAAuBV,KACnFA,EAAMe,eAAiBf,EAAMe,eAAeN,KAAKC,IAAuBA,IAAuBV,KACxFA,EAtBTgB,IAAelB,EAASC,GAyBxB,IAAIkB,EAASnB,EAAQoB,UAsQrB,OApQAD,EAAOE,kBAAoB,WACzB,IAAIC,EAAQ,mBAAmBC,KAAKC,UAAYA,UAAUC,UAAY,IACtEpM,KAAKgB,SAAS,CACZoK,cAAiC,kBAAX9C,QAAuB,iBAAkBA,SAAW2D,IAE5EjM,KAAKqM,oBAGPP,EAAOQ,mBAAqB,WAErBtM,KAAKuM,cACRvM,KAAKqM,oBAITP,EAAON,aAAe,SAAsBgB,GAE1C,IAAKxM,KAAKuM,aAAc,CACtB,IAAIjD,EAAQkD,EAAGC,cAAc,GAC7BzM,KAAKgB,SAAS,CACZiK,gBAAiB3B,EAAMoD,WACvBxB,YAAa5B,EAAMqD,QACnBxB,cAAe7B,EAAMqD,YAK3Bb,EAAOL,YAAc,SAAqBe,GACxC,GAAIxM,KAAKuM,aACP,IAAK,IAAIK,EAAM,EAAGA,EAAMJ,EAAGC,cAAc/K,OAAQkL,IAE/C,GAAIJ,EAAGC,cAAcG,GAAKF,aAAe1M,KAAKW,MAAMsK,gBAAiB,CACnEjL,KAAKgB,SAAS,CACZmK,cAAeqB,EAAGC,cAAcG,GAAKD,UAEvC,QAMRb,EAAOJ,WAAa,WAClB,GAAI1L,KAAKuM,aAAc,CAErB,IAAIM,EAAa7M,KAAK8M,qBAElB9M,KAAKf,MAAM4J,MAAQgE,EAAa7M,KAAKW,MAAMoK,aAAe/K,KAAKf,MAAM8N,qBAAuB/M,KAAKf,MAAM4J,MAAQgE,EAAa7M,KAAKf,MAAM8N,qBACzI/M,KAAKf,MAAM+N,WAAWhN,KAAKf,MAAM4J,MAGnC7I,KAAKgB,SAAS,CACZiK,gBAAiB,KACjBC,YAAa,KACbC,cAAe,SAQrBW,EAAOH,SAAW,WACZ3L,KAAKuM,cAAgBvM,KAAKiN,4BAC5BjN,KAAKgB,SAAS,CACZiK,gBAAiB,KACjBC,YAAa,KACbC,cAAe,QAMrBW,EAAOmB,yBAA2B,WAShC,OANIjN,KAAKf,MAAMuK,UACY0D,KAAKC,IAAInN,KAAKW,MAAMwK,cAAgBnL,KAAKW,MAAMuK,aA5J9C,GA8JDgC,KAAKC,IAAInN,KAAKW,MAAMuK,YAAclL,KAAKW,MAAMwK,eA9J5C,IAoK9BW,EAAOS,WAAa,WAClB,OAAsC,OAA/BvM,KAAKW,MAAMsK,iBAGpBa,EAAOT,eAAiB,WAClBrL,KAAKf,MAAM4J,MACb7I,KAAKf,MAAM+N,WAAU,IAIzBlB,EAAOO,iBAAmB,WACxB,IAAIzI,EAAQ5D,KAAKmJ,QAAQiE,YAErBxJ,IAAU5D,KAAKW,MAAMoK,cACvB/K,KAAKgB,SAAS,CACZ+J,aAAcnH,KAKpBkI,EAAOF,eAAiB,SAAwByB,GAC9CrN,KAAKmJ,QAAUkE,GAIjBvB,EAAOgB,kBAAoB,WAIzB,OAAI9M,KAAKf,MAAMuK,UACTxJ,KAAKf,MAAM4J,MAAQP,OAAOgF,WAAatN,KAAKW,MAAMuK,YAAclL,KAAKW,MAAMoK,aACzE/K,KAAKW,MAAMwK,cAAgBnL,KAAKW,MAAMuK,YACjClL,KAAKW,MAAMoK,aAAe/K,KAAKW,MAAMuK,YAAclL,KAAKW,MAAMwK,cAGhEnL,KAAKW,MAAMoK,aAGbmC,KAAKK,IAAIjF,OAAOgF,WAAatN,KAAKW,MAAMwK,cAAenL,KAAKW,MAAMoK,cAGvE/K,KAAKf,MAAM4J,MAAQ7I,KAAKW,MAAMuK,YAAclL,KAAKW,MAAMoK,aACrD/K,KAAKW,MAAMwK,cAAgBnL,KAAKW,MAAMuK,YACjClL,KAAKW,MAAMoK,aAGb/K,KAAKW,MAAMoK,aAAe/K,KAAKW,MAAMuK,YAAclL,KAAKW,MAAMwK,cAGhE+B,KAAKK,IAAIvN,KAAKW,MAAMwK,cAAenL,KAAKW,MAAMoK,eAGvDe,EAAO0B,OAAS,WACd,IAcIC,EAdAC,EAAeC,IAAc,GAAI/D,EAAuB5J,KAAKf,MAAM2O,OAAOzE,SAE1E0E,EAAeF,IAAc,GAAI/D,EAAuB5J,KAAKf,MAAM2O,OAAOE,SAE1EC,EAAeJ,IAAc,GAAI/D,EAAuB5J,KAAKf,MAAM2O,OAAOI,SAE1EC,EAAWjO,KAAKW,MAAMyK,eAAiBpL,KAAKf,MAAMqK,MAClDiD,EAAavM,KAAKuM,aAClB2B,EAAY,CACdnP,UAAWiB,KAAKf,MAAMkP,cACtBhM,MAAOwL,IAAc,GAAI/D,EAAoB5J,KAAKf,MAAM2O,OAAOQ,MAC/DC,KAAM,aACNjQ,GAAI4B,KAAKf,MAAMqP,QAGbC,EAAevO,KAAKf,MAAMuP,SAAWjC,GAAcvM,KAAKf,MAAM4J,MAAQ7I,KAAKf,MAAMmK,QAoBrF,GAlBIpJ,KAAKf,MAAMuK,WACbkE,EAAa/G,MAAQ,EACrB+G,EAAae,UAAY,mBACzBf,EAAagB,gBAAkB,mBAE3BH,IACFb,EAAaiB,UAAY,sCAG3BjB,EAAa3D,KAAO,EACpB2D,EAAae,UAAY,oBACzBf,EAAagB,gBAAkB,oBAE3BH,IACFb,EAAaiB,UAAY,oCAIzBpC,EAAY,CACd,IAAIqC,EAAa5O,KAAK8M,oBAAsB9M,KAAKW,MAAMoK,aAEnD/K,KAAKf,MAAMuK,WACbkE,EAAae,UAAY,cAAmC,KAAlB,EAAIG,GAAoB,KAClElB,EAAagB,gBAAkB,cAAmC,KAAlB,EAAIE,GAAoB,OAExElB,EAAae,UAAY,eAAoC,KAAlB,EAAIG,GAAoB,KACnElB,EAAagB,gBAAkB,eAAoC,KAAlB,EAAIE,GAAoB,MAI3Eb,EAAavD,QAAUoE,EACvBb,EAAatD,WAAa,eACjBzK,KAAKf,MAAMmK,QAEY,IAA5BpJ,KAAKW,MAAMoK,eACb2C,EAAae,UAAY,iBACzBf,EAAagB,gBAAkB,kBAI7B1O,KAAKf,MAAMuK,UACbqE,EAAalH,MAAQ3G,KAAKW,MAAMoK,aAAe,KAE/C8C,EAAa9D,KAAO/J,KAAKW,MAAMoK,aAAe,MAEvC/K,KAAKf,MAAM4J,OAEpB6E,EAAae,UAAY,iBACzBf,EAAagB,gBAAkB,iBAE/BX,EAAavD,QAAU,EACvBuD,EAAatD,WAAa,WAU5B,IAPI8B,GAAevM,KAAKf,MAAM4P,cAC5BnB,EAAavD,WAAa,OAC1BuD,EAAatD,iBAAmB,OAChCyD,EAAa1D,WAAa,OAC1B4D,EAAa5D,WAAa,QAGxB8D,EACF,GAAIjO,KAAKf,MAAM4J,KACbqF,EAAU1C,aAAexL,KAAKwL,aAC9B0C,EAAUzC,YAAczL,KAAKyL,YAC7ByC,EAAUxC,WAAa1L,KAAK0L,WAC5BwC,EAAUY,cAAgB9O,KAAK0L,WAC/BwC,EAAUvC,SAAW3L,KAAK2L,aACrB,CACL,IAAIoD,EAAkBpB,IAAc,GAAI/D,EAA0B5J,KAAKf,MAAM2O,OAAOH,YAEpFsB,EAAgBnL,MAAQ5D,KAAKf,MAAM+P,iBAE/BhP,KAAKf,MAAMuK,UACbuF,EAAgBpI,MAAQ,EAExBoI,EAAgBhF,KAAO,EAGzB0D,EAAarN,IAAM6O,cAAc,MAAO,CACtC9M,MAAO4M,EACPvD,aAAcxL,KAAKwL,aACnBC,YAAazL,KAAKyL,YAClBC,WAAY1L,KAAK0L,WACjBoD,cAAe9O,KAAK0L,aAK1B,OAAOtL,IAAM6O,cAAc,MAAOf,EAAW9N,IAAM6O,cAAc,MAAO,CACtElQ,UAAWiB,KAAKf,MAAMoK,iBACtBlH,MAAOuL,EACP1G,IAAKhH,KAAK4L,eACVxN,GAAI4B,KAAKf,MAAMiQ,WACdlP,KAAKf,MAAMkK,SAAU/I,IAAM6O,cAAc,MAAO,CACjDlQ,UAAWiB,KAAKf,MAAMkQ,iBACtBhN,MAAO4L,EACP/O,QAASgB,KAAKqL,eACdjN,GAAI4B,KAAKf,MAAMmQ,YACbhP,IAAM6O,cAAc,MAAO,CAC7BlQ,UAAWiB,KAAKf,MAAMsK,iBACtBpH,MAAO0L,EACPzP,GAAI4B,KAAKf,MAAMoQ,WACd5B,EAAYzN,KAAKf,MAAMqQ,YAGrB3E,EAhST,CAiSEtK,aAoDFsK,EAAQ4E,aAAe,CACrBnG,QAAQ,EACRP,MAAM,EACNgG,aAAa,EACbvF,OAAO,EACP0F,iBAAkB,GAClBxF,WAAW,EACXgF,QAAQ,EACRzB,mBAAoB,GACpBC,UAAW,aACXY,OAAQ,GACR5C,oBAAqB,GAGRL,O,oBC7Zf,IAAI6E,EAAiB,EAAQ,IAqB7BC,EAAOC,QAnBP,SAAuBzO,GACrB,IAAK,IAAIc,EAAI,EAAGA,EAAI4N,UAAUjO,OAAQK,IAAK,CACzC,IAAI6N,EAAyB,MAAhBD,UAAU5N,GAAa8N,OAAOF,UAAU5N,IAAM,GACvD+N,EAAUD,OAAOE,KAAKH,GAEkB,oBAAjCC,OAAOG,wBAChBF,EAAUA,EAAQG,OAAOJ,OAAOG,sBAAsBJ,GAAQrP,QAAO,SAAU2P,GAC7E,OAAOL,OAAOM,yBAAyBP,EAAQM,GAAKE,gBAIxDN,EAAQO,SAAQ,SAAU/N,GACxBkN,EAAevO,EAAQqB,EAAKsN,EAAOtN,OAIvC,OAAOrB,I,uDClBT,yFAQIqP,EAAY,CACdhB,SAAUiB,IAAUlD,KACpBtO,UAAWwR,IAAUC,OACrBC,eAAgBF,IAAUC,OAC1BE,eAAgBH,IAAUC,OAC1BG,UAAWJ,IAAUK,OACrBrR,MAAOgR,IAAUC,OACjBK,KAAMN,IAAUO,KAChBC,OAAQR,IAAUO,KAClBE,OAAQT,IAAUU,KAClBvO,IAAKwO,IACL/G,WAAYoG,IAAUY,MAAMC,IAAKd,WACjCe,SAAUd,IAAUe,UAAU,CAACf,IAAUK,OAAQL,IAAUC,OAAQD,IAAUU,QAE3E1B,EAAe,CACjBhQ,MAAO,UACPwR,QAAQ,EACRrO,IAAK,MACLgO,eAAgB,QAChBG,MAAM,EACN1G,WAAYoH,YAAe,GAAIH,IAAK7B,aAAc,CAChDiC,eAAe,KAInB,SAASjP,EAAMtD,GACb,IAAIF,EAAYE,EAAMF,UAClB0R,EAAiBxR,EAAMwR,eACvBC,EAAiBzR,EAAMyR,eACvBC,EAAY1R,EAAM0R,UAClBc,EAAMxS,EAAMyD,IACZnD,EAAQN,EAAMM,MACdwR,EAAS9R,EAAM8R,OACfC,EAAS/R,EAAM+R,OACf1B,EAAWrQ,EAAMqQ,SACjBnF,EAAalL,EAAMkL,WACnB0G,EAAO5R,EAAM4R,KACbQ,EAAWpS,EAAMoS,SACjBK,EAAaC,YAA8B1S,EAAO,CAAC,YAAa,iBAAkB,iBAAkB,YAAa,MAAO,QAAS,SAAU,SAAU,WAAY,aAAc,OAAQ,aAEvL2S,EAAUC,YAAgBC,IAAW/S,EAAW,QAAS,SAAWQ,EAAO,CAC7E,oBAAqByR,IACnBL,GACAoB,EAAeF,YAAgBC,IAAW,QAASrB,GAAiBE,GAEpEqB,EAAkBT,YAAe,GAAIH,IAAK7B,aAAc,GAAIpF,EAAY,CAC1E8H,UAAWpB,EAAO1G,EAAW8H,UAAY,GACzCC,QAASrB,EAAO1G,EAAW+H,QAAU,IAGvC,OAAO9R,IAAM6O,cAAcmC,IAAMe,YAAS,GAAIT,EAAYM,EAAiB,CACzEtP,IAAK+O,EACL1S,UAAW6S,EACXQ,GAAIrB,EACJ1C,KAAM,QACNgD,SAAUA,IACRL,EAAS5Q,IAAM6O,cAAc,SAAU,CACzCnR,KAAM,SACNiB,UAAWgT,EACX,aAAcrB,EACd1R,QAASgS,GACR5Q,IAAM6O,cAAc,OAAQ,CAC7B,cAAe,QACd,SAAW,KAAMK,GAGtB/M,EAAM+N,UAAYA,EAClB/N,EAAMgN,aAAeA,EACNhN","file":"static/js/27.90afd8e9.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { history } from '../../../history'\r\nimport { toast } from 'react-toastify'\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nexport const getTodos = (routeParams) => {\r\n  const user = JSON.parse(localStorage.getItem('logInUserData'))._id\r\n  routeParams.user = user\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get('backendapi/diary/list', {\r\n        params: routeParams\r\n      })\r\n      .then((result) => {\r\n        //backendapi/diary/list\r\n        console.log('qqqqqqqqqqqqqqqq', routeParams)\r\n        console.log('qqqqqqqqqqqqqqqq', result.data)\r\n        dispatch({\r\n          type: 'GET_TODOS',\r\n          todos: result.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = (todo) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'COMPLETE_TASK', id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'STAR_TASK', id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'IMPORTANT_TASK', id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = (id) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post('/api/app/todo/trash-todo', id)\r\n      .then((response) => dispatch({ type: 'TRASH_TASK', id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = (todo) => {\r\n  console.log('ssssssssssssssss todo', todo)\r\n  const request = axios.post('/api/apps/todo/update-todo', todo)\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then((response) => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: 'UPDATE_TODO',\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (\r\n  id,\r\n  title,\r\n  desc,\r\n  taskToUpdate,\r\n  isCompleted,\r\n  isImportant,\r\n  isStarred,\r\n  tags\r\n) => {\r\n  const ans = {\r\n    _id: id,\r\n    title,\r\n    desc,\r\n    taskToUpdate,\r\n    isCompleted,\r\n    isImportant,\r\n    isStarred,\r\n    tags\r\n  }\r\n  const request = axios.post('/backendapi/diary/update', ans)\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'UPDATE_TASK',\r\n      id,\r\n      title,\r\n      desc,\r\n      taskToUpdate,\r\n      isCompleted,\r\n      isImportant,\r\n      isStarred,\r\n      tags\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: 'UPDATE_LABEL', label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = (task) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    const user = JSON.parse(localStorage.getItem('logInUserData'))._id\r\n    task.user = user\r\n    axios.post('/backendapi/diary/add', task).then((response) => {\r\n      dispatch({ type: 'ADD_TASK', task })\r\n      dispatch(getTodos(params))\r\n      toast.success('Note Added Successfully!!')\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchTask = (val) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'SEARCH_TASK',\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = (filter) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'CHANGE_FILTER', filter })\r\n    history.push(`/#/diary/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Layers, Star, Bookmark, Check, Trash } from 'react-feather'\r\nimport { connect } from 'react-redux'\r\nimport { changeFilter } from '../../redux/actions/diary/index'\r\nclass DiarySidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"todo-app-menu\">\r\n          <div className=\"add-task\">\r\n            <Button.Ripple\r\n              block\r\n              className=\"btn-block\"\r\n              color=\"warning\"\r\n              onClick={() => {\r\n                this.props.addTask('open')\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              Add Notes\r\n            </Button.Ripple>\r\n          </div>\r\n          <PerfectScrollbar\r\n            className=\"sidebar-menu-list\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0 pt-0\"\r\n                action\r\n                onClick={() => {\r\n                  this.props.changeFilter('all')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Layers size={22} />\r\n                <span className=\"align-middle ml-1\">All</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('important')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/important'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Star size={22} />\r\n                <span className=\"align-middle ml-1\">Important</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('starred')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/starred'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Bookmark size={22} />\r\n                <span className=\"align-middle ml-1\">Bookmark</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('completed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/completed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Check size={22} />\r\n                <span className=\"align-middle ml-1\">Completed</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('trashed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/trashed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Trash size={22} />\r\n                <span className=\"align-middle ml-1\">Trashed</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('personal')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/personal'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-primary align-middle\" />\r\n                <span className=\"align-middle ml-1\">Personal</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('professional')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/professional'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-warning align-middle\" />\r\n                <span className=\"align-middle ml-1\">Professional</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('others')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/others'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-success align-middle\" />\r\n                <span className=\"align-middle ml-1\">Others</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('todo')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/todo'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-danger align-middle\" />\r\n                <span className=\"align-middle ml-1\">TO DO List</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { changeFilter })(DiarySidebar)\r\n","import React from 'react'\r\nimport { FormGroup, Input, Alert } from 'reactstrap'\r\nimport { Menu, Search, Bookmark, Star, Trash } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n} from '../../redux/actions/diary/index'\r\nclass DiaryList extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.app.todo.routeParam !== state.currentLocation) {\r\n      return {\r\n        todos: props.app.todo.todos\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  state = {\r\n    todos: [],\r\n    handleUpdateTask: null,\r\n    currentLocation: this.props.routerProps.location.pathname,\r\n    value: ''\r\n  }\r\n  async getdiaryLIst() {\r\n    await this.props.getTodos(this.props.routerProps.match.params)\r\n    this.setState({\r\n      todos: this.props.app.todo.todos,\r\n      handleUpdateTask: this.props.handleUpdateTask\r\n    })\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (this.props.prevState) {\r\n      this.setState({ todos: props.app.todo.todos })\r\n      this.props.clearPrevState()\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getdiaryLIst()\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchTask(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { todos, handleUpdateTask, value } = this.state\r\n    let routerFilter = this.props.routerProps.match.params.filter\r\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\r\n\r\n    if (todosArr === undefined || todosArr.length === 0) {\r\n      return (\r\n        <div className=\"fallback-spinner vh-100\">\r\n          <div className=\"loading\">\r\n            <div className=\"effect-1 effects\"></div>\r\n            <div className=\"effect-2 effects\"></div>\r\n            <div className=\"effect-3 effects\"></div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    let renderTodos =\r\n      todosArr.length > 0 ? (\r\n        todosArr.map((todo, i) => {\r\n          var options = {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n          }\r\n          var today = new Date(todo.createdAt)\r\n          return (\r\n            <li\r\n              style={{ border: 'none', padding: '0 1.6rem' }}\r\n              className={`todo-item ${todo.isCompleted ? 'completed' : ''}`}\r\n              key={i}\r\n              onClick={() => {\r\n                handleUpdateTask(todo)\r\n              }}\r\n            >\r\n              <Alert\r\n                className=\"mt-1\"\r\n                color={todo.isImportant ? 'danger' : 'primary'}\r\n              >\r\n                <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\r\n                  <div className=\"todo-title-area d-flex align-items-center\">\r\n                    <div className=\"title-wrapper d-flex\">\r\n                      <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\r\n                    </div>\r\n\r\n                    {todo.tags.length > 0 ? (\r\n                      <div className=\"chip-wrapper\">\r\n                        {todo.tags.map((tag, i) => (\r\n                          <div className=\"chip mb-0\" key={i}>\r\n                            <div className=\"chip-body\">\r\n                              <span className=\"chip-text\">\r\n                                <span\r\n                                  className={`bullet bullet-${\r\n                                    tag === 'backend'\r\n                                      ? 'warning'\r\n                                      : tag === 'doc'\r\n                                      ? 'success'\r\n                                      : tag === 'bug'\r\n                                      ? 'danger'\r\n                                      : 'primary'\r\n                                  } bullet-xs`}\r\n                                />\r\n                                <span className=\"text-capitalize ml-25\">\r\n                                  {tag}\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`todo-item-action d-flex ${\r\n                      routerFilter === 'trashed' ? 'justify-content-end' : ''\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className={`todo-item-info d-inline-block ${\r\n                        routerFilter === 'trashed' ? 'mr-1' : 'mr-1 mr-sm-0'\r\n                      }`}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.importantTask(todo)\r\n                      }}\r\n                    >\r\n                      <Star\r\n                        size={17}\r\n                        className={`${todo.isImportant ? 'text-danger' : ''}`}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.starTask(todo)\r\n                      }}\r\n                    >\r\n                      <Bookmark\r\n                        size={17}\r\n                        className={`${todo.isStarred ? 'text-warning' : ''}`}\r\n                      />\r\n                    </div>\r\n                    {routerFilter !== 'trashed' ? (\r\n                      <div\r\n                        className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation()\r\n                          this.props.trashTask(todo.id)\r\n                        }}\r\n                      >\r\n                        <Trash size={17} />\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <p style={{ fontSize: '8px' }}>\r\n                  {today.toLocaleDateString('en-US', options)}\r\n                </p>\r\n                {todo.desc.length > 0 ? (\r\n                  <p\r\n                    className=\"todo-desc mb-0\"\r\n                    style={{ wordBreak: 'break-all', whiteSpace: 'normal' }}\r\n                  >\r\n                    {todo.desc}\r\n                  </p>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Alert>\r\n            </li>\r\n          )\r\n        })\r\n      ) : (\r\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\r\n          No tasks at this time\r\n        </p>\r\n      )\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"todo-app-area\">\r\n          <div className=\"todo-app-list-wrapper\">\r\n            <div className=\"todo-app-list\">\r\n              <div className=\"app-fixed-search\">\r\n                <div\r\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\r\n                  onClick={() => this.props.mainSidebar(true)}\r\n                >\r\n                  <Menu size={24} />\r\n                </div>\r\n                <FormGroup\r\n                  style={{\r\n                    display: 'flex',\r\n                    margin: 'auto',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                  className=\"position-relative has-icon-left\"\r\n                >\r\n                  <div style={{ borderRadius: '1.428rem' }}>\r\n                    <div className=\"form-control-position\">\r\n                      <Search size={15} />\r\n                    </div>\r\n                    <Input\r\n                      style={{\r\n                        width: '100%'\r\n                      }}\r\n                      type=\"text\"\r\n                      placeholder=\"Search...\"\r\n                      onChange={(e) => this.handleOnChange(e)}\r\n                      value={value}\r\n                    />\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <PerfectScrollbar\r\n                className=\"todo-task-list\"\r\n                options={{\r\n                  wheelPropagation: false\r\n                }}\r\n              >\r\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n})(DiaryList)\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { X, Bookmark, Star, Tag, Check } from 'react-feather'\r\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport VideoRecorder from 'react-video-recorder'\r\nimport { Recorder } from 'react-voice-recorder'\r\nimport 'react-voice-recorder/dist/index.css'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  starTask,\r\n  completeTask,\r\n  importantTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n} from '../../redux/actions/diary/index'\r\nconst colourOptions1 = [\r\n  {\r\n    value: 'Text',\r\n    label: 'Text',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Scribble',\r\n    label: 'Scribble',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Attachment',\r\n    label: 'Attachment',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Voice',\r\n    label: 'Voice',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Video',\r\n    label: 'Video',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  }\r\n]\r\nclass TaskSidebar extends React.Component {\r\n  state = {\r\n    audioDetails: {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n      }\r\n    },\r\n    ptype: '',\r\n    taskToUpdate: null,\r\n    taskTitle: '',\r\n    taskDesc: '',\r\n    taskStatus: false,\r\n    taskStarred: false,\r\n    taskImportant: false,\r\n    newTask: {\r\n      title: '',\r\n      desc: '',\r\n      tags: [],\r\n      isCompleted: false,\r\n      isImportant: false,\r\n      isStarred: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskToUpdate !== this.props.taskToUpdate) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskImportant !== this.props.taskToUpdate.isImportant)\r\n    ) {\r\n      this.setState({\r\n        taskToUpdate: this.props.taskToUpdate,\r\n        taskTitle: this.props.taskToUpdate.title,\r\n        taskDesc: this.props.taskToUpdate.desc,\r\n        taskStatus: this.props.taskToUpdate.isCompleted,\r\n        taskStarred: this.props.taskToUpdate.isStarred,\r\n        taskImportant: this.props.taskToUpdate.isImportant\r\n      })\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  handleAudioStop = (data) => {\r\n    console.log(data)\r\n    this.setState({ audioDetails: data })\r\n  }\r\n  handleAudioUpload = (file) => {\r\n    console.log(file)\r\n  }\r\n  handleRest = () => {\r\n    const reset = {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n      }\r\n    }\r\n    this.setState({ audioDetails: reset })\r\n  }\r\n\r\n  handleNewTaskTags = (tag) => {\r\n    let tagsArr = this.state.newTask.tags\r\n    if (tagsArr.includes(tag)) {\r\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\r\n    } else {\r\n      tagsArr.push(tag)\r\n    }\r\n    this.setState({\r\n      ...this.state.newTask,\r\n      tags: tag\r\n    })\r\n  }\r\n\r\n  renderTags = (taskArr) => {\r\n    return taskArr.map((tag, i) => (\r\n      <div className=\"chip mb-0 mr-50\" key={i}>\r\n        <div className=\"chip-body\">\r\n          <span className=\"chip-text\">\r\n            <span\r\n              className={`bullet bullet-${\r\n                tag === 'professional'\r\n                  ? 'warning'\r\n                  : tag === 'others'\r\n                  ? 'success'\r\n                  : tag === 'todo'\r\n                  ? 'danger'\r\n                  : 'primary'\r\n              } bullet-xs`}\r\n            />\r\n            <span className=\"text-capitalize ml-25\">{tag}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } =\r\n      this.state\r\n\r\n    return (\r\n      <div className={`task-sidebar ${this.props.addTaskState ? 'show' : ''}`}>\r\n        <div className=\"task-header\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"task-type-title text-bold-600\">\r\n              <h3 style={{ color: 'var(--warning)' }}>\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\r\n                  ? 'Update Details'\r\n                  : 'Enter Details'}\r\n              </h3>\r\n            </div>\r\n            <div className=\"close-icon\">\r\n              <X\r\n                className=\"cursor-pointer\"\r\n                size={20}\r\n                onClick={() => {\r\n                  this.props.addTask('close')\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <PerfectScrollbar>\r\n          <div className=\"task-body\">\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n              <div className=\"mark-complete\">\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && (\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    className=\"user-checkbox\"\r\n                    icon={<Check className=\"vx-icon\" size={15} />}\r\n                    label={''}\r\n                    checked={taskStatus}\r\n                    onChange={(e) => {\r\n                      this.props.completeTask(this.props.taskToUpdate)\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <Star\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskImportant) ||\r\n                    newTask.isImportant\r\n                      ? 'text-success'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.importantTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isImportant: !this.state.newTask.isImportant\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <Bookmark\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskStarred) ||\r\n                    newTask.isStarred\r\n                      ? 'text-warning'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.starTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isStarred: !this.state.newTask.isStarred\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle tag=\"span\">\r\n                    <Tag className=\"mr-50\" size={20} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu tag=\"ul\" right>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Personal'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\r\n                              'personal'\r\n                            )) ||\r\n                          newTask.tags.includes('personal')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'personal')\r\n                          else this.handleNewTaskTags('personal')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        labelColor=\"#ff9f43\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Professional'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\r\n                              'professional'\r\n                            )) ||\r\n                          newTask.tags.includes('professional')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(\r\n                              taskToUpdate.id,\r\n                              'professional'\r\n                            )\r\n                          else this.handleNewTaskTags('professional')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Others'}\r\n                        labelColor=\"#25af63\"\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('others')) ||\r\n                          newTask.tags.includes('others')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'others')\r\n                          else this.handleNewTaskTags('others')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        labelColor=\"#ea5455\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'TO DO List'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('todo')) ||\r\n                          newTask.tags.includes('todo')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'todo')\r\n                          else this.handleNewTaskTags('todo')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </div>\r\n\r\n            <FormGroup className=\"form-label-group\">\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"\r\n                // defaultValue={colourOptions1[0]}\r\n\r\n                ref={this.state.selectAssetRef}\r\n                name=\"color\"\r\n                options={colourOptions1}\r\n                isClearable={true}\r\n                placeholder=\"Select Message Type...\"\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    ptype: e ? e.value : ''\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskTitle: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        title: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            {this.state.ptype === 'Video' && (\r\n              <VideoRecorder\r\n                onRecordingComplete={(videoBlob) => {\r\n                  // Do something with the video...\r\n                  console.log('videoBlob', videoBlob)\r\n                }}\r\n              />\r\n            )}\r\n            {this.state.ptype === 'Voice' && (\r\n              <Recorder\r\n                record={true}\r\n                title={'New recording'}\r\n                audioURL={this.state.audioDetails.url}\r\n                showUIAudio\r\n                handleAudioStop={(data) => this.handleAudioStop(data)}\r\n                handleAudioUpload={(data) => this.handleAudioUpload(data)}\r\n                handleReset={() => this.handleRest()}\r\n              />\r\n            )}\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                placeholder=\"Description\"\r\n                rows=\"5\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskDesc: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        desc: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n              {this.props.taskToUpdate !== null &&\r\n              this.props.taskToUpdate.tags &&\r\n              this.props.taskToUpdate.tags.length > 0\r\n                ? this.renderTags(this.props.taskToUpdate.tags)\r\n                : null}\r\n            </div>\r\n            <div\r\n              className=\"d-flex justify-content-end\"\r\n              style={{ textAlign: 'right' }}\r\n            >\r\n              <Button.Ripple\r\n                outline\r\n                className=\"mr-1 mb-1 button-label\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  this.props.addTask('close')\r\n                  this.props.handleUndoChanges()\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button.Ripple>{' '}\r\n              <Button.Ripple\r\n                className=\"mb-1 button-label\"\r\n                color=\"warning\"\r\n                onClick={() => {\r\n                  console.log('taskToUpdate', taskToUpdate)\r\n                  //toast.success('Note Added Successfully!!')\r\n                  const { isCompleted, isImportant, isStarred, tags } =\r\n                    taskToUpdate\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.props.updateTask(\r\n                      taskToUpdate._id,\r\n                      taskTitle,\r\n                      taskDesc,\r\n                      taskToUpdate,\r\n                      isCompleted,\r\n                      isImportant,\r\n                      isStarred,\r\n                      tags\r\n                    )\r\n                  } else {\r\n                    this.props.addNewTask(this.state.newTask)\r\n                  }\r\n                  this.props.addTask('close')\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n                disabled={\r\n                  taskTitle.length > 0 || newTask.title.length > 0\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                {taskToUpdate &&\r\n                taskToUpdate.id &&\r\n                this.props.taskToUpdate !== null\r\n                  ? 'Update'\r\n                  : 'Add'}\r\n              </Button.Ripple>\r\n            </div>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  completeTask,\r\n  importantTask,\r\n  starTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n})(TaskSidebar)\r\n","import React from 'react'\r\nimport Sidebar from 'react-sidebar'\r\nimport { ContextLayout } from '../../utility/context/Layout'\r\nimport DiarySidebar from './DiarySidebar'\r\nimport DiaryList from './DiaryList'\r\nimport TaskSidebar from './TaskSidebar'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport '../../assets/scss/plugins/extensions/toastr.scss'\r\nimport '../../assets/scss/pages/app-todo.scss'\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass Diary extends React.Component {\r\n  state = {\r\n    addTask: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    taskToUpdate: null,\r\n    prevState: null\r\n  }\r\n\r\n  onSetSidebarOpen = (open) => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleAddTask = (status) => {\r\n    status === 'open'\r\n      ? this.setState({ addTask: true })\r\n      : this.setState({ addTask: false, taskToUpdate: null })\r\n  }\r\n  handleUpdateTask = (todo) => {\r\n    if (todo !== undefined) {\r\n      this.setState({ addTask: true, taskToUpdate: todo })\r\n    } else {\r\n      this.setState({ taskToUpdate: null })\r\n    }\r\n  }\r\n\r\n  handleUndoChanges = () => {\r\n    console.log('arrrrrrrrrrrrr')\r\n    this.setState({\r\n      prevState: true\r\n    })\r\n  }\r\n  // handleUndoChanges = (arr) => {\r\n  //   console.log('arrrrrrrrrrrrr', arr)\r\n  //   this.setState({\r\n  //     prevState: arr\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <h2 className=\"warning spacing\">Secret Diary</h2>\r\n        <div className=\"todo-application position-relative\">\r\n          <div\r\n            className={`app-content-overlay ${\r\n              this.state.addTask || this.state.sidebarOpen ? 'show' : ''\r\n            }`}\r\n            onClick={() => {\r\n              this.handleAddTask('close')\r\n              this.onSetSidebarOpen(false)\r\n            }}\r\n          />\r\n          <ContextLayout.Consumer>\r\n            {(context) => (\r\n              <Sidebar\r\n                sidebar={\r\n                  <DiarySidebar\r\n                    routerProps={this.props}\r\n                    addTask={this.handleAddTask}\r\n                    mainSidebar={this.onSetSidebarOpen}\r\n                  />\r\n                }\r\n                docked={this.state.sidebarDocked}\r\n                open={this.state.sidebarOpen}\r\n                sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n                touch={false}\r\n                contentClassName=\"sidebar-children d-none\"\r\n                pullRight={context.state.direction === 'rtl'}\r\n              >\r\n                \"\"\r\n              </Sidebar>\r\n            )}\r\n          </ContextLayout.Consumer>\r\n          <DiaryList\r\n            routerProps={this.props}\r\n            handleUpdateTask={this.handleUpdateTask}\r\n            mainSidebar={this.onSetSidebarOpen}\r\n            prevState={this.state.prevState}\r\n            clearPrevState={() => {\r\n              this.setState({ prevState: false })\r\n            }}\r\n          />\r\n          <TaskSidebar\r\n            addTask={this.handleAddTask}\r\n            addTaskState={this.state.addTask}\r\n            taskToUpdate={this.state.taskToUpdate}\r\n            newTask={this.state.newTask}\r\n            mainSidebar={this.onSetSidebarOpen}\r\n            handleUndoChanges={this.handleUndoChanges}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Diary\r\n","import React from 'react'\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : ''\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : 'md'\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span style={{ color: this.props.labelColor }}>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2({}, Fade.defaultProps, {}, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;"],"sourceRoot":""}