{"version":3,"sources":["assets/img/slider/banner-25.jpg","views/DocumentVault/DocumentVault.js"],"names":["module","exports","ProgrammaticallyDropzone","props","useState","files","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","setfilesOndrop","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","thumbs","className","key","name","src","onError","e","target","img5","alt","useEffect","forEach","revokeObjectURL","resetDropzone","onClick","length","axios","defaults","baseURL","user","JSON","parse","localStorage","getItem","DocumentVault","setfiles","reset","setreset","alias","setalias","collapseID","setcollapseID","status","setstatus","id","title","content","md","sm","collapseItems","setcollapseItems","get","_id","headers","Authorization","then","res","resp","data","l","desc","decryptdata","attname","blobName","filename","catch","submitDropzone","console","log","formData","FormData","append","post","type","expiry","encryptdata","accordionMarginItems","collapseItem","idx","collapseIDNew","classnames","closing","opening","size","isOpen","onEntering","onEntered","onExiting","onExited","Fragment","Math","random","activeTab","tabId","placeholder","onChange","value","themeConfig","theme","for","style","textAlign","Ripple","outline","color"],"mappings":"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","file":"static/js/28.36af790a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-25.a47593fc.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n  Card,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  CardHeader,\r\n  Collapse,\r\n  CardBody,\r\n  CardTitle,\r\n  Label\r\n} from 'reactstrap'\r\nimport { encryptdata, decryptdata } from '../../utility/context/SecurityTool'\r\nimport { ChevronDown } from 'react-feather'\r\nimport classnames from 'classnames'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport img5 from '../../assets/img/slider/banner-25.jpg'\r\nimport '../../assets/scss/plugins/extensions/dropzone.scss'\r\nimport themeConfig from '../../configs/themeConfig'\r\nimport axios from 'axios'\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n// axios.defaults.baseURL = 'http://localhost:5000'\r\n\r\nfunction ProgrammaticallyDropzone(props) {\r\n  const [files, setFiles] = useState([])\r\n  const { getRootProps, getInputProps, open } = useDropzone({\r\n    //accept: \"image/*\",\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    onDrop: (acceptedFiles) => {\r\n      props.setfilesOndrop(acceptedFiles)\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n        )\r\n      )\r\n    }\r\n  })\r\n\r\n  const thumbs = files.map((file) => (\r\n    <div className=\"dz-thumb\" key={file.name}>\r\n      <div className=\"dz-thumb-inner\">\r\n        <img\r\n          src={file.preview}\r\n          className=\"dz-img\"\r\n          onError={(e) => (e.target.src = img5)}\r\n          alt={file.name}\r\n        />\r\n        <br />\r\n        <span> {file.name}</span>\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview))\r\n    },\r\n    [files]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (props.resetDropzone) {\r\n      setFiles([])\r\n    }\r\n  }, [props.resetDropzone])\r\n\r\n  return (\r\n    <section>\r\n      <div {...getRootProps({ className: 'dropzone' })}>\r\n        <input {...getInputProps()} />\r\n        <p className=\"mx-1\" onClick={open}>\r\n          Drag 'n' drop some files here, or Click to Select files\r\n        </p>\r\n      </div>\r\n      {thumbs.length ? (\r\n        <aside className=\"thumb-container-documents\">{thumbs}</aside>\r\n      ) : (\r\n        <div {...getRootProps({ className: 'dropzone-dummy' })}>\r\n          <p className=\"mx-1\">Preview Selected files</p>\r\n        </div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\nconst user = JSON.parse(localStorage.getItem('logInUserData'))\r\nconst DocumentVault = () => {\r\n  const [files, setfiles] = useState([])\r\n  const [reset, setreset] = useState(false)\r\n  const [alias, setalias] = useState()\r\n  const [collapseID, setcollapseID] = useState('')\r\n  const [status, setstatus] = useState('Closed')\r\n  const [collapseItems, setcollapseItems] = useState([\r\n    {\r\n      id: 1,\r\n      title: '10th Marksheet',\r\n      content: (\r\n        <div>\r\n          <Row>\r\n            <Col md=\"6\" sm=\"12\">\r\n              >Hey 1\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              >Hey 2\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Girlfiends pics',\r\n      content:\r\n        'Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Driving License',\r\n      content:\r\n        'Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.'\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Mutual Fund',\r\n      content:\r\n        'Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.'\r\n    }\r\n  ])\r\n  useEffect(() => {\r\n    axios\r\n      .get('/backendapi/documents/' + user._id, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((res) => {\r\n        const resp = res.data\r\n        for (let l = 0; l < resp.length; l = l + 1) {\r\n          resp[l].desc = decryptdata(resp[l].desc)\r\n          resp[l].attname = decryptdata(resp[l].attname)\r\n          resp[l].alias = decryptdata(resp[l].alias)\r\n          resp[l].blobName = decryptdata(resp[l].blobName)\r\n          resp[l].filename = decryptdata(resp[l].filename)\r\n        }\r\n        setcollapseItems(resp)\r\n      })\r\n      .catch()\r\n  }, [])\r\n  // const showDocument = (d) => {\r\n  //   collapseItems[d].show = true\r\n  //   setcollapseItems(collapseItems)\r\n  // }\r\n  // const toggle = (tab) => {\r\n  //   if (active !== tab) {\r\n  //     setactive(tab)\r\n  //   }\r\n  // }\r\n  const toggleCollapse = (collapseIDNew) => {\r\n    setcollapseID(collapseID !== collapseIDNew ? collapseID : '')\r\n  }\r\n  const setfilesOndrop = (data) => {\r\n    setreset(false)\r\n    setfiles(\r\n      data.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })\r\n      )\r\n    )\r\n  }\r\n  const resetDropzone = () => {\r\n    setreset(true)\r\n  }\r\n  const submitDropzone = () => {\r\n    console.log('files', files)\r\n    const formData = new FormData()\r\n    //formData.append('file', encrypted)\r\n    formData.append('file', files[0])\r\n    axios\r\n      .post('/upload/api', formData, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((res) => {\r\n        const data = res.data\r\n        data.user = user._id\r\n        data.type = 'Vault'\r\n        data.expiry = encryptdata(data.expiry)\r\n        data.desc = encryptdata(data.desc)\r\n        data.attname = encryptdata(data.attname)\r\n        data.alias = encryptdata(alias)\r\n        data.blobName = encryptdata(data.blobName)\r\n        data.filename = encryptdata(data.filename)\r\n        axios\r\n          .post('/backendapi/documents/add', data, {\r\n            headers: {\r\n              Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n          })\r\n          .then((res) => {\r\n            console.log('eeeeeeeeeeeeeeeeeeeee', res.data)\r\n          })\r\n          .catch()\r\n      })\r\n      .catch()\r\n  }\r\n  const onEntered = (id) => {\r\n    if (id === collapseID) setstatus('Opened')\r\n  }\r\n  const onEntering = (id) => {\r\n    if (id === collapseID) setstatus('Opening...')\r\n  }\r\n  const onExited = (id) => {\r\n    if (id === collapseID) setstatus('Closed')\r\n  }\r\n  const onExiting = (id) => {\r\n    if (id === collapseID) setstatus('Closing...')\r\n  }\r\n\r\n  const accordionMarginItems = collapseItems.map((collapseItem, idx) => {\r\n    return (\r\n      <div className=\"collapse-margin\" key={collapseItem.id}>\r\n        <Card\r\n          onClick={() => toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            'collapse-collapsed':\r\n              status === 'Closed' && collapseID === collapseItem.id,\r\n            'collapse-shown':\r\n              status === 'Opened' && collapseID === collapseItem.id,\r\n            closing: status === 'Closing...' && collapseID === collapseItem.id,\r\n            opening: status === 'Opening...' && collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === collapseID}\r\n            onEntering={() => onEntering(collapseItem.id)}\r\n            onEntered={() => onEntered(collapseItem.id)}\r\n            onExiting={() => onExiting(collapseItem.id)}\r\n            onExited={() => onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className=\"warning spacing nodisplay\">My Documents</h2>\r\n      <div key={Math.random()}></div>\r\n      <Row>\r\n        <Col sm=\"12\">\r\n          <TabContent activeTab={'2'}>\r\n            <TabPane tabId=\"1\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Upload any file, scans, documents</CardTitle>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\" sm=\"12\">\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"nameMultiname\"\r\n                          placeholder=\"Attachment Name / Alias\"\r\n                          onChange={(e) => {\r\n                            setalias(e.target.value)\r\n                          }}\r\n                        />\r\n                        <Label\r\n                          className={\r\n                            themeConfig.theme === 'dark'\r\n                              ? 'dark-label'\r\n                              : 'light-label'\r\n                          }\r\n                          for=\"nameMultiname\"\r\n                        >\r\n                          Attachment Name / Alias\r\n                        </Label>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          className=\"input-label\"\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"nameMultiFile\"\r\n                          placeholder=\"File Name\"\r\n                        />\r\n                        <Label\r\n                          className={\r\n                            themeConfig.theme === 'dark'\r\n                              ? 'dark-label'\r\n                              : 'light-label'\r\n                          }\r\n                          for=\"nameMultiFile\"\r\n                        >\r\n                          File Name\r\n                        </Label>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          className=\"input-label\"\r\n                          type=\"Date\"\r\n                          name=\"name\"\r\n                          id=\"nameMultiExpiry\"\r\n                          placeholder=\"Expiry Date\"\r\n                        />\r\n                        <Label\r\n                          className={\r\n                            themeConfig.theme === 'dark'\r\n                              ? 'dark-label'\r\n                              : 'light-label'\r\n                          }\r\n                          for=\"nameMultiExpiry\"\r\n                        >\r\n                          Expiry Date\r\n                        </Label>\r\n                      </FormGroup>\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          className=\"input-label\"\r\n                          type=\"textarea\"\r\n                          name=\"name\"\r\n                          id=\"nameMultiDescription\"\r\n                          placeholder=\"Description\"\r\n                        />\r\n                        <Label\r\n                          className={\r\n                            themeConfig.theme === 'dark'\r\n                              ? 'dark-label'\r\n                              : 'light-label'\r\n                          }\r\n                          for=\"nameMultiDescription\"\r\n                        >\r\n                          Description\r\n                        </Label>\r\n                      </FormGroup>\r\n                      <FormGroup\r\n                        className=\"form-label-group last-row-form\"\r\n                        style={{ textAlign: 'right' }}\r\n                      >\r\n                        <Button.Ripple\r\n                          outline\r\n                          color=\"secondary\"\r\n                          type=\"reset\"\r\n                          className=\"button-label\"\r\n                          onClick={(e) => {\r\n                            resetDropzone()\r\n                          }}\r\n                        >\r\n                          Reset\r\n                        </Button.Ripple>{' '}\r\n                        <Button.Ripple\r\n                          color=\"warning\"\r\n                          // disabled={nominees.length === 0}\r\n                          type=\"reset\"\r\n                          className=\"button-label\"\r\n                          onClick={(e) => {\r\n                            submitDropzone(e)\r\n                          }}\r\n                        >\r\n                          {'  Add  '}\r\n                        </Button.Ripple>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"6\" sm=\"12\">\r\n                      <ProgrammaticallyDropzone\r\n                        setfilesOndrop={setfilesOndrop}\r\n                        resetDropzone={reset}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col sm=\"12\">\r\n                      <Card>\r\n                        <CardHeader>\r\n                          <CardTitle>My Documents</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <TabContent activeTab={'1'}>\r\n                            <TabPane tabId=\"1\">\r\n                              <div className=\"vx-collapse\">\r\n                                {accordionMarginItems}\r\n                              </div>\r\n                            </TabPane>\r\n                            <TabPane className=\"component-code\" tabId=\"2\">\r\n                              hey\r\n                            </TabPane>\r\n                          </TabContent>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Upload any file, scans, documents</CardTitle>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\" sm=\"12\">\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"nameMultiname\"\r\n                          placeholder=\"Attachment Name / Alias\"\r\n                          onChange={(e) => setalias(e.target.value)}\r\n                        />\r\n                        <Label\r\n                          className={\r\n                            themeConfig.theme === 'dark'\r\n                              ? 'dark-label'\r\n                              : 'light-label'\r\n                          }\r\n                          for=\"nameMultiname\"\r\n                        >\r\n                          Attachment Name / Alias\r\n                        </Label>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          className=\"input-label\"\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"nameMultiFile\"\r\n                          placeholder=\"File Name\"\r\n                        />\r\n                        <Label\r\n                          className={\r\n                            themeConfig.theme === 'dark'\r\n                              ? 'dark-label'\r\n                              : 'light-label'\r\n                          }\r\n                          for=\"nameMultiFile\"\r\n                        >\r\n                          File Name\r\n                        </Label>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          className=\"input-label\"\r\n                          type=\"Date\"\r\n                          name=\"name\"\r\n                          id=\"nameMultiExpiry\"\r\n                          placeholder=\"Expiry Date\"\r\n                        />\r\n                        <Label\r\n                          className={\r\n                            themeConfig.theme === 'dark'\r\n                              ? 'dark-label'\r\n                              : 'light-label'\r\n                          }\r\n                          for=\"nameMultiExpiry\"\r\n                        >\r\n                          Expiry Date\r\n                        </Label>\r\n                      </FormGroup>\r\n                      <FormGroup className=\"form-label-group\">\r\n                        <Input\r\n                          className=\"input-label\"\r\n                          type=\"textarea\"\r\n                          name=\"name\"\r\n                          id=\"nameMultiDescription\"\r\n                          placeholder=\"Description\"\r\n                        />\r\n                        <Label\r\n                          className={\r\n                            themeConfig.theme === 'dark'\r\n                              ? 'dark-label'\r\n                              : 'light-label'\r\n                          }\r\n                          for=\"nameMultiDescription\"\r\n                        >\r\n                          Description\r\n                        </Label>\r\n                      </FormGroup>\r\n                      <FormGroup\r\n                        className=\"form-label-group last-row-form\"\r\n                        style={{ textAlign: 'right' }}\r\n                      >\r\n                        <Button.Ripple\r\n                          outline\r\n                          color=\"secondary\"\r\n                          type=\"reset\"\r\n                          className=\"button-label\"\r\n                          onClick={(e) => {\r\n                            resetDropzone()\r\n                          }}\r\n                        >\r\n                          Reset\r\n                        </Button.Ripple>{' '}\r\n                        <Button.Ripple\r\n                          color=\"warning\"\r\n                          type=\"reset\"\r\n                          className=\"button-label\"\r\n                          onClick={(e) => {\r\n                            submitDropzone(e)\r\n                          }}\r\n                        >\r\n                          {'  Add  '}\r\n                        </Button.Ripple>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"6\" sm=\"12\">\r\n                      <ProgrammaticallyDropzone\r\n                        setfilesOndrop={setfilesOndrop}\r\n                        resetDropzone={reset}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col sm=\"12\">\r\n                      <Card>\r\n                        <CardHeader>\r\n                          <CardTitle>My Documents</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <TabContent activeTab={'1'}>\r\n                            <TabPane tabId=\"1\">\r\n                              <div className=\"vx-collapse\">\r\n                                {accordionMarginItems}\r\n                              </div>\r\n                            </TabPane>\r\n                            <TabPane className=\"component-code\" tabId=\"2\">\r\n                              hey\r\n                            </TabPane>\r\n                          </TabContent>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </TabPane>\r\n\r\n            <TabPane tabId=\"3\">Coming soon .......!</TabPane>\r\n          </TabContent>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default DocumentVault\r\n"],"sourceRoot":""}