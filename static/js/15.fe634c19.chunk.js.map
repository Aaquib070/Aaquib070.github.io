{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","views/ui-elements/cards/analytics/GoalOverview.js","redux/actions/data-list/index.js","views/Liability/AddLiabilty.js","views/Liability/Liability.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","GoalOverview","state","options","chart","sparkline","enabled","dropShadow","blur","left","top","opacity","colors","success","plotOptions","radialBar","startAngle","endAngle","hollow","track","background","strokeColor","strokeWidth","dataLabels","name","show","offsetY","fontSize","fill","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","stroke","lineCap","series","height","axios","defaults","baseURL","getData","params","dispatch","a","userData","localStorage","getItem","JSON","parse","get","_id","then","response","console","log","data","totalPages","length","getInitialData","filterData","deleteData","obj","post","updateData","getState","addData","dataList","colourOptions1","isFixed","colourOptions2","AddLiabilty","liabilityType","selectAssetRef","createRef","selectNomineeRef","selectCustomRef","nomineeOption","nominees","nomineeList","selectedTemplate","template","key","val","changeValue","e","k","idx","findIndex","x","setState","callAddLiabilty","preventDefault","user","nominee","as","liabilityDetails","liabilities","push","setItem","stringify","toast","clearLiabilty","clearCustomField","res","catch","addfield","fname","ftype","deletable","changeNominee","event","forEach","id","current","select","clearValue","parsedFilter","Row","Col","lg","md","sm","Card","CardHeader","CardTitle","CardBody","Form","FormGroup","classNamePrefix","ref","isClearable","placeholder","undefined","Label","for","isMulti","Object","keys","includes","map","style","zIndex","float","marginBottom","marginRight","Input","ev","target","Button","Ripple","outline","temp","relation","connect","ProgrammaticallyDropzone","useState","files","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","thumbs","src","alt","useEffect","revokeObjectURL","Liabilty","active","toggle","tab","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","TabContent","activeTab","TabPane","tabId"],"mappings":"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","file":"static/js/15.fe634c19.chunk.js","sourcesContent":["import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport Chart from \"react-apexcharts\"\nimport { HelpCircle } from \"react-feather\"\n\nclass GoalOverview extends React.Component {\n  state = {\n    options: {\n      chart: {\n        sparkline: {\n          enabled: true\n        },\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      },\n      colors: [this.props.success],\n      plotOptions: {\n        radialBar: {\n          size: 110,\n          startAngle: -140,\n          endAngle: 150,\n          hollow: {\n            size: \"77%\"\n          },\n          track: {\n            background: this.props.strokeColor,\n            strokeWidth: \"50%\"\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              offsetY: 18,\n              color: this.props.strokeColor,\n              fontSize: \"4rem\"\n            }\n          }\n        }\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shade: \"dark\",\n          type: \"horizontal\",\n          shadeIntensity: 0.5,\n          gradientToColors: [\"#00b5b5\"],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        lineCap: \"round\"\n      }\n    },\n    series: [83]\n  }\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Goal Overview</CardTitle>\n          <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\n        </CardHeader>\n        <CardBody>\n          <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"radialBar\"\n            height={260}\n          />\n        </CardBody>\n        <div className=\"d-flex mt-2\">\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">Completed</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\n          </div>\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">In Progress</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\n          </div>\n        </div>\n      </Card>\n    )\n  }\n}\nexport default GoalOverview\n","import axios from \"axios\"\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\nexport const getData = params => {\n  return async dispatch => {\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n    await axios.get(\"/backendapi/nominee/list/\"+userData._id, params).then(response => {\n      console.log('aaquib  123', response.data);\n      console.log('aaquib  123',params);\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data,\n        totalPages: response.length,\n        params\n      })\n    })\n  }\n}\n\nexport const getInitialData = () => {\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n  return async dispatch => {\n    await axios.get(\"/backendapi/nominee/list/\"+userData._id).then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const filterData = value => {\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\n}\n\nexport const deleteData = obj => {\n  return dispatch => {\n    axios\n      .post(\"/api/datalist/delete-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"DELETE_DATA\", obj })\n      })\n  }\n}\n\nexport const updateData = obj => {\n  console.log('Aaquib 123', obj);\n  return (dispatch, getState) => {\n    axios\n      .post(\"/api/datalist/update-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"UPDATE_DATA\", obj })\n      })\n  }\n}\n\nexport const addData = obj => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post(\"/api/datalist/add-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"ADD_DATA\", obj })\n        dispatch(getData(params))\n      })\n  }\n}\n","import React, {useRef} from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label\n} from \"reactstrap\"\nimport axios from \"axios\";\nimport { connect } from \"react-redux\"\nimport { toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { ToastContainer } from \"react-toastify\"\nimport \"../../assets/scss/plugins/extensions/toastr.scss\"\nimport { getData } from \"../../redux/actions/data-list/\"\nimport { HelpCircle } from \"react-feather\"\nimport GoalOverview from \"../ui-elements/cards/analytics/GoalOverview\"\nimport Select from \"react-select\"\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport { Check,Delete } from \"react-feather\"\n\nlet $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $primary_light = \"#9c8cfc\",\n  $warning_light = \"#FFC085\",\n  $danger_light = \"#f29292\",\n  $stroke_color = \"#b9c3cd\",\n  $label_color = \"#e7eef7\"\n\nconst colourOptions = [\n  { value: \"Aaquib\", label: \"Aaquib\", color: \"#00B8D9\", isFixed: true },\n  { value: \"Vipin\", label: \"Vipin\", color: \"#0052CC\", isFixed: true },\n  { value: \"Aqueel\", label: \"Aqueel\", color: \"#5243AA\", isFixed: true },\n  { value: \"Vatsal\", label: \"Vatsal\", color: \"#FF5630\", isFixed: false },\n  { value: \"Pritam\", label: \"Pritam\", color: \"#FF8B00\", isFixed: false },\n  \n]\nconst colourOptions1 = [\n  { value: \"Loan Amount\", label: \"Loan Amount\", color: \"#00B8D9\", isFixed: true },\n  { value: \"Credit Card\", label: \"Credit Card\", color: \"#0052CC\", isFixed: true },\n  { value: \"Notes\", label: \"Notes\", color: \"#0052CC\", isFixed: true },\n  { value: \"Custom\", label: \"Custom\", color: \"#0052CC\", isFixed: true }\n  \n  \n]\n\nconst colourOptions2 = [\n  { value: \"Text\", label: \"Text\", color: \"#00B8D9\", isFixed: true },\n  { value: \"textarea\", label: \"Text Area\", color: \"#0052CC\", isFixed: true },\n  { value: \"Date\", label: \"Date\", color: \"#0052CC\", isFixed: true },\n  { value: \"Number\", label: \"Number\", color: \"#0052CC\", isFixed: true },\n  { value: \"File\", label: \"File\", color: \"#0052CC\", isFixed: true }\n  \n  \n]\n\nclass AddLiabilty extends React.Component {\n\n  state = {\n    liabilityType: \"\",\n    selectAssetRef: React.createRef(),\n    selectNomineeRef: React.createRef(),\n    selectCustomRef: React.createRef(),\n    nomineeOption: [],\n    nominees: [],\n    nomineeList: [],\n    selectedTemplate: [],\n    template : {\n      \"Custom\" : [\n        {\n          key: \"Liabilty Name\",\n          val:'',\n          type:\"Text\"\n        },\n\n      ],\n      \"Notes\" : [\n        {\n          key: \"Notes\",\n          val:'',\n          type:\"textarea\"\n        },\n        {\n          key: \"Expiry Date\",\n          val:'',\n          type:\"Date\"\n        },\n      ],\n      \"Credit Card\" : [\n        \n        {\n          key: \"Bank Name\",\n          val:'',\n          type:\"Number\"\n        },\n        {\n          key: \"Card Limit\",\n          val:'',\n          type:\"Number\"\n        }\n        \n      ]\n      ,\n      \"Loan\" : [\n        {\n          key: \"Bank Name\",\n          val:'',\n          type:\"Text\"\n        },\n        {\n          key: \"Loan Account Number\",\n          val:'',\n          type:\"Number\"\n        }\n        ,\n        {\n          key: \"Loan Amount\",\n          val:'',\n          type:\"Number\"\n        }\n        \n      ]\n    },\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.dataList.data.length !== state.nomineeList.length) {\n      const nomineeOption = state.nomineeOption;\n      props.dataList.data.forEach(e => {\n        const temp ={\n          value: e._id, label: e.name+' - '+ e.relation, color: \"#00B8D9\", isFixed: false\n        }\n        nomineeOption.push(temp);\n      });\n      \n      return {\n        nomineeList: props.dataList.data,\n        nomineeOption: nomineeOption\n      }\n    }\n\n    // Return null if the state hasn't changed\n    return null\n  }\n    componentDidMount() {\n      this.props.getData(this.props.parsedFilter)\n      // this.props.getInitialData()\n    }\n\n    changeValue = (e,k) => {\n      const selectedTemplate = this.state.selectedTemplate;\n      const idx  = selectedTemplate.findIndex(x => x.key ===k.key);\n      console.log('ZZZZZZZZZZZ', e,idx);\n      selectedTemplate[idx].val = e;\n      this.setState({selectedTemplate});\n      \n    }\n\n    callAddLiabilty = (e) => {\n      e.preventDefault();\n      console.log(this.state.selectedTemplate);\n      const user = JSON.parse(localStorage.getItem('logInUserData'));\n      console.log('sssssssssssssssss',this.state.nominee);\n      const as = {\n        liabilityType: this.state.liabilityType,\n        liabilityDetails: this.state.selectedTemplate,\n        nominees : this.state.nominees\n      }\n      user.liabilities.push(as)\n      localStorage.setItem('logInUserData',JSON.stringify(user));\n      toast.success(\"Liability addedd successfully!\");\n      this.clearLiabilty();\n      this.clearCustomField();\n      axios\n      .post(\"/backendapi/adddetails\",{_id: user._id, liabilities: user.liabilities})\n      .then(res => {}).catch()\n\n    }\n  addfield = () => {\n    //alert(this.state.liabilityType)\n    if(this.state.liabilityType !== \"\") {\n    const selectedTemplate = this.state.selectedTemplate;\n    selectedTemplate.push(\n      {\n        key: this.state.fname,\n          val:'',\n          type: this.state.ftype,\n          deletable: true\n      }\n    )\n    console.log(\"selectedTemplate\", selectedTemplate);\n    this.setState({selectedTemplate,fname:'',ftype:''});\n    }\n  }\n  changeNominee= (event) => {\n      const nominees = this.state.nominees;\n      event.forEach(e => {\n        nominees.push({id:e.value,name:e.label});\n        console.log('ssssssssssssssssssssss2',e);\n      })\n      this.setState({nominees});      \n    \n    \n    // console.log(event.target);\n    // console.log(event.target.value);\n}\n\n\nclearLiabilty = () => {\n  \n  this.state.selectAssetRef.current.select.clearValue();\n  this.state.selectNomineeRef.current.select.clearValue();\n  this.setState({liabilityType: '', selectedTemplate: [], nominees: []})\n}\nclearCustomField =() => {\n  this.setState({fname:'',ftype:''})\n  this.state.selectCustomRef.current.select.clearValue();\n}\n\n  render() {\n    \n    return (\n      <Row>\n        <ToastContainer  />\n        <Col lg=\"8\" md=\"6\" sm=\"12\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Add New Liabilty</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Form className=\"mt-2\">\n            <Row>\n            <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n               \n              <Select\n                className=\"React\"\n                classNamePrefix=\"select\"\n                //defaultValue={colourOptions1[0]}\n                \n                \n                ref={this.state.selectAssetRef}\n                name=\"color\"\n                options={colourOptions1}\n                isClearable={true}\n                placeholder=\"Select Liabilty Type...\"\n                onChange={(e) => {{this.setState({fname:'',ftype:'',liabilityType: e ? e.value : undefined, selectedTemplate: e ? this.state.template[e.value] : {}})}} }\n              />\n                  <Label for=\"nameMulti\">Asset Type</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                \n              <Select\n                //defaultValue={[colourOptions[2], colourOptions[3]]}\n                isMulti\n                name=\"nominee\"\n                options={this.state.nomineeOption}\n                ref={this.state.selectNomineeRef}\n                className=\"React\"\n                classNamePrefix=\"select\"\n                placeholder= 'Select Nominees...'\n                id=\"nominee\"\n                 onChange={this.changeNominee}\n                //onChange={(e) => {{this.setState({nominee: e ? e.value : undefined})}} }\n              />\n                  <Label >Nominee</Label>\n                </FormGroup>\n              </Col>\n              {/* {this.state.liabilityType  && \n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"First Name\"\n                  />\n                  <Label for=\"nameMulti\">First Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.liabilityType  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"lastname\"\n                    id=\"lastNameMulti\"\n                    placeholder=\"Last Name\"\n                  />\n                  <Label for=\"lastNameMulti\">Last Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.liabilityType === \"Fixed Deposit\"  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder=\"Fixed Deposit Account Number\"\n                  />\n                  <Label for=\"cityMulti\">Fixed Deposit Account Number</Label>\n                </FormGroup>\n              </Col>} */}\n              {Object.keys(this.state.template).includes(this.state.liabilityType) && \n              this.state.template[this.state.liabilityType].map(e => {\n                return (<Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                {e.deletable && <Delete style={{zIndex:999, float: 'right', marginBottom: '-8px', marginRight: '-5px'}} className=\"primary\" size={15} />}\n                  <Input\n                    type={e.type}\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder={e.key}\n                    onChange={ ev => {this.changeValue(ev.target ? ev.target.value : ev.value,e)}}\n                  /> \n                  <Label for=\"cityMulti\">{e.key}</Label>\n                </FormGroup>\n              </Col>);\n              })\n              }\n              {/* {this.state.liabilityType === \"Fixed Deposit\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Bank Name\"\n                  />\n                  <Label for=\"CountryMulti\">Bank Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.liabilityType === \"Bank Details\"  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder=\"Bank Account Number\"\n                  />\n                  <Label for=\"cityMulti\">Bank Account Number</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.liabilityType === \"Bank Details\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Bank Name\"\n                  />\n                  <Label for=\"CountryMulti\">Bank Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.liabilityType === \"Property\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Property Location\"\n                  />\n                  <Label for=\"CountryMulti\">Property Location</Label>\n                </FormGroup>\n              </Col>} */}\n              {/* <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"company\"\n                    id=\"CompanyMulti\"\n                    placeholder=\"Company\"\n                  />\n                  <Label for=\"CompanyMulti\">Company</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"email\"\n                    name=\"Email\"\n                    id=\"EmailMulti\"\n                    placeholder=\"Email\"\n                  />\n                  <Label for=\"EmailMulti\">Email</Label>\n                </FormGroup>\n              </Col> */}\n              {/* <Col sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Remember Me\"\n                    defaultChecked={false}\n                  />\n                </FormGroup>\n              </Col> */}\n              <Col sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Button.Ripple\n                    color=\"primary\"\n                    type=\"submit\"\n                    className=\"mr-1 mb-1\"\n                    disabled={this.state.nominees.length === 0}\n                    onClick={e => {this.callAddLiabilty(e)}}\n                  >\n                    Submit\n                  </Button.Ripple>\n                  <Button.Ripple\n                    outline\n                    color=\"warning\"\n                    type=\"reset\"\n                    className=\"mb-1\"\n                    onClick={(e)=>{this.clearLiabilty()}}\n                  >\n                    Reset\n                  </Button.Ripple>\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col lg=\"4\" md=\"6\" sm=\"12\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Add Custum Field</CardTitle>\n          <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\n        </CardHeader>\n        <CardBody>\n          <Row>\n        <Col sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"email\"\n                    name=\"Email\"\n                    disabled={this.state.liabilityType === \"\"}\n                    id=\"EmailMulti\"\n                    value={this.state.fname}\n                    placeholder=\"Enter Field Name\"\n                    onChange={(e)=>{this.setState({fname : e.target.value})}}\n                  />\n                  <Label for=\"EmailMulti\">Enter Field Name</Label>\n                </FormGroup>\n              </Col>\n              <Col sm=\"12\">\n              <FormGroup className=\"form-label-group\" disabled={this.state.liabilityType === undefined}>\n               \n               <Select\n                 className=\"React\"\n                 ref={this.state.selectCustomRef}\n                 disabled={this.state.liabilityType === undefined}\n                 classNamePrefix=\"select\"\n                 isClearable={true}\n                 //defaultValue={colourOptions1[0]}\n                 name=\"color\"\n                 options={colourOptions2}\n                 placeholder=\"Select Field Type...\"\n                 onChange={(e) => this.setState({ftype: e ? e.value : ' '}) }\n               />\n                   <Label for=\"nameMulti\">Field Type</Label>\n            \n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Button.Ripple\n                    color=\"primary\"\n                    disabled={this.state.liabilityType === undefined}\n                    type=\"submit\"\n                    className=\"mr-1 mb-1\"\n                    onClick={e => this.addfield()}\n                  >\n                    {\"<- Add\"}\n                  </Button.Ripple>\n                </FormGroup>\n                </Col>\n                <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Button.Ripple\n                    outline\n                    color=\"warning\"\n                    type=\"reset\"\n                    className=\"mb-1\"\n                    disabled={this.state.liabilityType === undefined}\n                    onClick={e => {this.clearCustomField()}}\n                    \n                  >\n                    Reset\n                  </Button.Ripple>\n                </FormGroup>\n                </Col>\n              \n              </Row>\n             \n          {/* <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"radialBar\"\n            height={260}\n          /> */}\n        </CardBody>\n        {/* <div className=\"d-flex mt-2\">\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">Completed</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\n          </div>\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">In Progress</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\n          </div>\n        </div> */}\n      </Card>\n      </Col>\n      </Row>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state.dataList\n  }\n}\n\nexport default connect(mapStateToProps, {getData})(AddLiabilty)\n\n//export default AddLiabilty\n","import React, { useState, useEffect } from \"react\"\nimport { Row, Col ,TabContent, TabPane, Nav, NavItem, NavLink,Card,\n  FormGroup,\n  Input,\n  Form,\n  Button, CardHeader, CardBody, CardTitle,Label } from \"reactstrap\"\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport classnames from \"classnames\"\nimport AddLiabilty from \"./AddLiabilty\"\nimport GoalOverview from \"../ui-elements/cards/analytics/GoalOverview\"\nimport { useDropzone } from \"react-dropzone\"\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\"\n\nlet $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $primary_light = \"#9c8cfc\",\n  $warning_light = \"#FFC085\",\n  $danger_light = \"#f29292\",\n  $stroke_color = \"#b9c3cd\",\n  $label_color = \"#e7eef7\"\n  \nfunction ProgrammaticallyDropzone(props) {\n  const [files, setFiles] = useState([])\n  const { getRootProps, getInputProps, open } = useDropzone({\n    //accept: \"image/*\",\n    noClick: true,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      setFiles(\n        acceptedFiles.map(file =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      )\n    }\n  })\n\n  const thumbs = files.map(file => (\n    <div className=\"dz-thumb\" key={file.name}>\n      <div className=\"dz-thumb-inner\">\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\n      </div>\n    </div>\n  ))\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  return (\n    <section>\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\"  onClick={open} >\n          Drag 'n' drop some files here, or click to select files\n        </p>\n      </div>\n      <Button.Ripple color=\"primary\" outline className=\"my-1\" onClick={open}>\n        Select File\n      </Button.Ripple>\n      <aside className=\"thumb-container\">{thumbs}</aside>\n    </section>\n  )\n}\n\nclass Liabilty extends React.Component {\n  state = {\n    active: \"1\"\n  }\n\n  toggle = tab => {\n    if (this.state.active !== tab) {\n      this.setState({ active: tab })\n    }\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Liabilty\"\n          breadCrumbParent=\"Liabilty\"\n          breadCrumbActive=\"Add\"\n        />\n        <Row>\n          <Col sm=\"12\">\n          {/*<Nav pills>\n       <NavItem>\n        <NavLink\n          className={classnames({\n            active: this.state.active === \"1\"\n          })}\n          onClick={() => {\n            this.toggle(\"1\")\n          }}\n        >\n          Add\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classnames({\n            active: this.state.active === \"2\"\n          })}\n          onClick={() => {\n            this.toggle(\"2\")\n          }}\n        >\n          Upload Files\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled>Record Audio/Video</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classnames({\n            active: this.state.active === \"3\"\n          })}\n          onClick={() => {\n            this.toggle(\"3\")\n          }}\n        >\n          Bulk Upload\n        </NavLink>\n      </NavItem>\n    </Nav> */}\n    <TabContent activeTab={this.state.active}>\n      <TabPane tabId=\"1\">\n      <AddLiabilty />\n        {/* <Row>\n      <Col lg=\"8\" md=\"6\" sm=\"12\"><AddLiabilty /></Col>\n      <Col lg=\"4\" md=\"6\" sm=\"12\">\n            <GoalOverview strokeColor={$stroke_color} success={$success} />\n          </Col>\n          </Row> */}\n          \n      \n      </TabPane>\n      <TabPane tabId=\"2\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Upload any file, scans, documents</CardTitle>\n        </CardHeader>\n\n        <CardBody>\n        <Row >\n        <Col md=\"4\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"Attachment Name / Alias\"\n                  />\n                  <Label for=\"nameMulti\">Attachment Name / Alias</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"File Name\"\n                  />\n                  <Label for=\"nameMulti\">File Name</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"Date\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"Expiry Date\"\n                  />\n                  <Label for=\"nameMulti\">Expiry Date</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"Description\"\n                  />\n                  <Label for=\"nameMulti\">Description</Label>\n                </FormGroup>\n              </Col>\n        </Row>\n          <ProgrammaticallyDropzone />\n        </CardBody>\n      </Card>\n      </TabPane>\n      <TabPane tabId=\"3\">\n        Coming soon .......!\n      </TabPane>\n    </TabContent>\n            \n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Liabilty\n"],"sourceRoot":""}