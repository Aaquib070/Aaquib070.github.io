{"version":3,"sources":["components/@vuexy/chips/ChipComponent.js","views/Nominee/DataListSidebar.js","views/Nominee/NomineeListConfig.js","views/Nominee/NomineeList.js","components/@vuexy/checkbox/CheckboxesVuexy.js","redux/actions/data-list/index.js"],"names":["Chip","closeChip","e","target","closest","remove","className","this","props","color","avatarImg","avatarText","avatarIcon","avatarColor","src","alt","height","width","text","closable","onClick","closableIcon","React","Component","DataListSidebar","state","isLoading","relation","relation1","email","address","contact1","contact2","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","obj","data","_id","usage","updateData","addData","Object","keys","dataParams","length","prevProps","prevState","console","log","setState","primaryContact","secondaryContact","show","handleSidebar","classnames","size","options","wheelPropagation","thumbView","FormGroup","htmlFor","type","hidden","onChange","URL","createObjectURL","files","Button","Label","for","Input","value","placeholder","Ripple","outline","Spinner","axios","defaults","baseURL","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","window","screen","currentData","row","deleteRow","CustomHeader","style","marginTop","handleFilter","UncontrolledDropdown","DropdownToggle","total","DataListConfig","totalPages","currentPage","columns","selector","sortable","minWidth","cell","title","getData","parsedFilter","handleCurrentData","handleDelete","mobilecolumns","fontSize","maxWidth","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","dataLoading","filterData","handleRowsPerPage","page","undefined","history","push","perPage","boolean","deleteData","urlPrefix","parseInt","toast","error","nominee","userId","localStorage","getItem","JSON","parse","post","then","res","success","catch","userData","handlePagination","getInitialData","Progress","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","index","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","icon","label","dataList","filteredData","connect","NomineeList","Fragment","Row","Col","sm","NomineeListConfig","queryString","location","search","CheckBoxesVuexy","defaultChecked","checked","disabled","params","dispatch","a","get","response","getSpendData","getSpendInitialData","getState"],"mappings":"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","file":"static/js/24.46fcc805.chunk.js","sourcesContent":["import React from \"react\"\nimport { X } from \"react-feather\"\nclass Chip extends React.Component {\n  closeChip = e => {\n    e.target.closest(\".chip\").remove()\n  }\n\n  render() {\n    return (\n      <div\n        className={`chip ${this.props.className} ${\n          this.props.color ? `chip-${this.props.color}` : null\n        }`}\n      >\n        <div className=\"chip-body\">\n          {(!this.props.avatarImg && this.props.avatarText) ||\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\n            <div\n              className={`avatar ${\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\n              }`}\n            >\n              <div className=\"avatar-content\">\n                {this.props.avatarText ? this.props.avatarText : null}\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\n              </div>\n            </div>\n          ) : this.props.avatarImg ? (\n            <div className=\"avatar\">\n              <img\n                src={this.props.avatarImg}\n                alt=\"chipImg\"\n                height=\"20\"\n                width=\"20\"\n              />\n            </div>\n          ) : null}\n          <div className=\"chip-text\">{this.props.text}</div>\n          {this.props.closable ? (\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Chip\n","import React, { Component } from \"react\";\nimport { Label, Input, FormGroup, Button } from \"reactstrap\";\nimport { X } from \"react-feather\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Spinner } from \"reactstrap\";\nimport classnames from \"classnames\";\n\nclass DataListSidebar extends Component {\n  state = {\n    //isLoading: props.isLoading,\n    isLoading: this.props.isLoading,\n    relation: \"Son\",\n    relation1: \"Son\",\n    email: \"\",\n    address: \"\",\n    contact1: \"\",\n    contact2: \"\",\n    id: \"\",\n    name: \"\",\n    category: \"Audio\",\n    order_status: \"pending\",\n    price: \"\",\n    img: \"\",\n    popularity: {\n      popValue: \"\",\n    },\n  };\n\n  addNew = false;\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"aaaaaaaaaaaaaaaaa\", this.props.isLoading);\n    if (this.props.data !== null && prevProps.data === null) {\n      if (this.props.data.id !== prevState.id) {\n        this.setState({ id: this.props.data.id });\n      }\n      if (this.props.data.name !== prevState.name) {\n        this.setState({ name: this.props.data.name });\n      }\n      if (this.props.data.relation !== prevState.relation) {\n        this.setState({ relation: this.props.data.relation });\n      }\n      if (this.props.data.relation !== prevState.relation1) {\n        this.setState({ relation1: this.props.data.relation });\n      }\n      if (this.props.data.address !== prevState.address) {\n        this.setState({ address: this.props.data.address });\n      }\n      if (this.props.data.email !== prevState.email) {\n        this.setState({ email: this.props.data.email });\n      }\n      console.log(\"hhhhhhhhhhhhhhhhhhhhh\", this.props.data, prevState);\n      if (this.props.data.primaryContact !== prevState.contact1) {\n        this.setState({ contact1: this.props.data.primaryContact });\n      }\n      if (this.props.data.secondaryContact !== prevState.contact2) {\n        this.setState({ contact2: this.props.data.secondaryContact });\n      }\n\n      if (this.props.data.order_status !== prevState.order_status) {\n        this.setState({ order_status: this.props.data.order_status });\n      }\n      if (this.props.data.price !== prevState.price) {\n        this.setState({ price: this.props.data.price });\n      }\n      if (this.props.data.img !== prevState.img) {\n        this.setState({ img: this.props.data.img });\n      }\n    }\n    if (this.props.data === null && prevProps.data !== null) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n\n        category: \"Son\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\",\n        },\n      });\n    }\n    if (this.addNew) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        category: \"Son\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\",\n        },\n      });\n    }\n    this.addNew = false;\n  }\n\n  handleSubmit = (obj) => {\n    if (this.props.data !== null) {\n      obj._id = this.props.data._id;\n      obj.usage = this.props.data.usage;\n\n      this.props.updateData(obj);\n    } else {\n      this.addNew = true;\n      this.props.addData(obj);\n    }\n    let params = Object.keys(this.props.dataParams).length\n      ? this.props.dataParams\n      : { page: 1, perPage: 4 };\n    //this.props.handleSidebar(false, true)\n    //this.props.getData(params)\n  };\n\n  render() {\n    let { show, handleSidebar, data } = this.props;\n\n    let { name, relation, img } = this.state;\n    return (\n      <div\n        className={classnames(\"data-list-sidebar\", {\n          show: show,\n        })}\n      >\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\n          <h4>\n            {data !== null ? \"UPDATE NOMINEE DETAILS\" : \"ADD NEW NOMINEE\"}\n          </h4>\n          <X size={20} onClick={() => handleSidebar(false, true)} />\n        </div>\n        {/* {this.props.isLoading && <Spinner color=\"primary\" />}\n        {!this.props.isLoading && */}\n        <PerfectScrollbar\n          className=\"data-list-fields px-2 mt-3\"\n          options={{ wheelPropagation: false }}\n        >\n          {this.props.thumbView && img.length ? (\n            <FormGroup className=\"text-center\">\n              <img className=\"img-fluid\" src={img} alt={name} />\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\n                <label\n                  className=\"btn btn-flat-primary\"\n                  htmlFor=\"update-image\"\n                  color=\"primary\"\n                >\n                  Upload Image\n                  <input\n                    type=\"file\"\n                    id=\"update-image\"\n                    hidden\n                    onChange={(e) =>\n                      this.setState({\n                        img: URL.createObjectURL(e.target.files[0]),\n                      })\n                    }\n                  />\n                </label>\n                <Button\n                  color=\"flat-danger\"\n                  onClick={() => this.setState({ img: \"\" })}\n                >\n                  Remove Image\n                </Button>\n              </div>\n            </FormGroup>\n          ) : null}\n          <FormGroup>\n            <Label for=\"data-name\">Name *</Label>\n            <Input\n              type=\"text\"\n              value={name}\n              placeholder=\"Nominee Name\"\n              onChange={(e) => this.setState({ name: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-category\">Relation *</Label>\n            <Input\n              type=\"select\"\n              id=\"data-category\"\n              value={relation}\n              onChange={(e) =>\n                this.setState({\n                  relation: e.target.value,\n                  relation1: e.target.value,\n                })\n              }\n            >\n              <option>Son</option>\n              <option>Daughter</option>\n              <option>Husband</option>\n              <option>Wide</option>\n              <option>Son-in-law</option>\n              <option>Daughter-in-law</option>\n              <option>Cousin</option>\n              <option>Friend</option>\n              <option>Colluege</option>\n              <option>others</option>\n            </Input>\n          </FormGroup>\n          {relation === \"others\" && (\n            <FormGroup>\n              {/* <Label for=\"data-name\">Relation </Label> */}\n              <Input\n                type=\"text\"\n                value={this.state.relation1}\n                placeholder=\"Relation Name\"\n                onChange={(e) => this.setState({ relation1: e.target.value })}\n                id=\"data-name\"\n              />\n            </FormGroup>\n          )}\n          <FormGroup>\n            <Label for=\"data-name\">Email *</Label>\n            <Input\n              type=\"text\"\n              value={this.state.email}\n              placeholder=\"Enter nominee email\"\n              onChange={(e) => this.setState({ email: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-price\">Contact No *</Label>\n            <Input\n              type=\"number\"\n              value={this.state.contact1}\n              onChange={(e) => this.setState({ contact1: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"Enter primary contact No\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-price\">Secondary Contact No</Label>\n            <Input\n              type=\"number\"\n              value={this.state.contact2}\n              onChange={(e) => this.setState({ contact2: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"Enter secondry contact No\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-name\">Address *</Label>\n            <Input\n              type=\"textarea\"\n              value={this.state.address}\n              placeholder=\"Adress\"\n              onChange={(e) => this.setState({ address: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          {/* <FormGroup>\n            <Label for=\"data-popularity\">Popularity</Label>\n            <Input\n              type=\"number\"\n              value={popularity.popValue}\n              id=\"data-popularity\"\n              placeholder=\"0 - 100%\"\n              onChange={e =>\n                this.setState({\n                  popularity: { popularity, popValue: e.target.value }\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-status\">Order Status</Label>\n            <Input\n              type=\"select\"\n              id=\"data-status\"\n              value={order_status}\n              onChange={e => this.setState({ order_status: e.target.value })}>\n              <option>pending</option>\n              <option>canceled</option>\n              <option>delivered</option>\n              <option>on hold</option>\n            </Input>\n          </FormGroup> */}\n\n          {this.props.thumbView && img.length <= 0 ? (\n            <label\n              className=\"btn btn-primary\"\n              htmlFor=\"upload-image\"\n              color=\"primary\"\n            >\n              Upload Image\n              <input\n                type=\"file\"\n                id=\"upload-image\"\n                hidden\n                onChange={(e) =>\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\n                }\n              />\n            </label>\n          ) : null}\n        </PerfectScrollbar>\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\n          <Button.Ripple\n            // className=\"ml-1\"\n            className=\"mb-1\"\n            color=\"secondary\"\n            outline\n            onClick={() => handleSidebar(false, true)}\n          >\n            Cancel\n          </Button.Ripple>\n          <Button.Ripple\n            color=\"warning\"\n            type=\"reset\"\n            className=\"ml-1 mr-1 mb-1\"\n            onClick={() => this.handleSubmit(this.state)}\n          >\n            {this.props.isLoading && <Spinner color=\"danger\" size=\"sm\" />}{\" \"}\n            {data !== null\n              ? this.props.isLoading\n                ? \"Updating...\"\n                : \"Update\"\n              : this.props.isLoading\n              ? \"Adding...\"\n              : \"Add\"}\n          </Button.Ripple>\n        </div>\n      </div>\n    );\n  }\n}\nexport default DataListSidebar;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Progress,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input,\n} from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport DataTable from \"react-data-table-component\";\nimport classnames from \"classnames\";\nimport ReactPaginate from \"react-paginate\";\nimport { history } from \"../../history\";\nimport { ToastContainer } from \"react-toastify\";\nimport {\n  Edit,\n  Trash,\n  ChevronDown,\n  Plus,\n  Check,\n  ChevronLeft,\n  ChevronRight,\n} from \"react-feather\";\nimport { connect } from \"react-redux\";\nimport {\n  getData,\n  getInitialData,\n  deleteData,\n  updateData,\n  addData,\n  filterData,\n} from \"../../redux/actions/data-list/\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../../assets/scss/plugins/extensions/toastr.scss\";\nimport Sidebar from \"./DataListSidebar\";\nimport axios from \"axios\";\nimport Chip from \"../../components/@vuexy/chips/ChipComponent\";\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\";\n\nimport \"../../assets/scss/plugins/extensions/react-paginate.scss\";\nimport \"../../assets/scss/pages/data-list.scss\";\n//import logo from \"../../assets/img/logo/logo-dark2.png\"\nimport \"../../assets/scss/components/app-loader.scss\"\n\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\n\nconst chipColors = {\n  \"on hold\": \"warning\",\n  delivered: \"success\",\n  pending: \"primary\",\n  canceled: \"danger\",\n};\n\nconst selectedStyle = {\n  rows: {\n    selectedHighlighStyle: {\n      backgroundColor: \"rgba(115,103,240,.05)\",\n      color: \"#7367F0 !important\",\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\n      \"&:hover\": {\n        transform: \"translateY(0px) !important\",\n      },\n    },\n  },\n};\n\nconst ActionsComponent = (props) => {\n  return (\n    <div className=\"data-list-action\">\n      <Edit\n        className=\"cursor-pointer mr-1\"\n        size={window.screen.width < 600 ? 13 : 20}\n        onClick={() => {\n          return props.currentData(props.row);\n        }}\n      />\n      {window.screen.width > 600 && (\n        <Trash\n          className=\"cursor-pointer\"\n          size={window.screen.width < 600 ? 13 : 20}\n          onClick={() => {\n            props.deleteRow(props.row);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nconst CustomHeader = (props) => {\n  return (\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\n      <div className=\"actions-left d-flex flex-wrap\">\n        <Button\n          className=\"add-new-btn\"\n          color=\"primary\"\n          style={{ marginTop: \"5px\" }}\n          onClick={() => props.handleSidebar(true, true)}\n          outline\n        >\n          <Plus size={15} />\n          <span className=\"align-middle\">Add New Nominee</span>\n        </Button>\n      </div>\n      <div className=\"actions-right\">\n        <div className=\"filter-section mt-sm-0 mt-4\">\n          <Input\n            type=\"text\"\n            style={{  marginTop: \"5px\", width: \"\" }}\n            onChange={(e) => props.handleFilter(e)}\n            placeholder=\"Find Documents\"\n          />\n        </div>\n      </div>\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\n        <UncontrolledDropdown\n          className=\"data-list-rows-dropdown mr-1 d-md-block d-none\"\n          style={{ marginTop: \"5px\" }}\n        >\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\n            <span className=\"align-middle mx-50\">\n              {/* {`${props.index[0]} - ${props.index[1]} of ${props.total}`} */}\n              Total count : {props.total}\n            </span>\n            {/* <ChevronDown size={15} /> */}\n          </DropdownToggle>\n          {/* <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\n              4\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\n              10\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\n              15\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\n              20\n            </DropdownItem>\n          </DropdownMenu> */}\n        </UncontrolledDropdown>\n        {/* <UncontrolledDropdown\n          className=\"data-list-dropdown mr-1\"\n          style={{ marginTop: \"5px\" }}\n        >\n          <DropdownToggle className=\"p-1\" color=\"primary\">\n            <span className=\"align-middle mr-1\">Actions</span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\n            <DropdownItem tag=\"a\">Print</DropdownItem>\n            <DropdownItem tag=\"a\">Export</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown> */}\n      </div>\n    </div>\n  );\n};\n\nclass DataListConfig extends Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.dataList.data.length !== state.data.length ||\n      state.currentPage !== props.parsedFilter.page\n    ) {\n      return {\n        data: props.dataList.data,\n        allData: props.dataList.filteredData,\n        //totalPages: props.dataList.totalPages,\n        totalPages: props.dataList.data.length / 5,\n        currentPage: parseInt(props.parsedFilter.page) - 1,\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\n        totalRecords: props.dataList.totalRecords,\n        sortIndex: props.dataList.sortIndex,\n        dataLoading: false\n      };\n    }\n\n    // Return null if the state hasn't changed\n    return null;\n  }\n\n  state = {\n    data: [],\n    totalPages: 0,\n    currentPage: 0,\n    columns: [\n      {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n        minWidth: \"200px\",\n        cell: (row) => (\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n            {row.name}\n          </p>\n        ),\n      },\n      {\n        name: \"Relation\",\n        selector: \"relation\",\n        sortable: true,\n      },\n      {\n        name: \"Email\",\n        minWidth: \"200px\",\n        selector: \"email\",\n        sortable: true,\n        // cell: row => (\n        //   <Progress\n        //     className=\"w-100 mb-0\"\n        //     color={row.popularity.color}\n        //     value={row.popularity.popValue}\n        //   />\n        //)\n      },\n      {\n        name: \"Contact\",\n        selector: \"primaryContact\",\n        minWidth: \"150px\",\n        sortable: true,\n        //cell: row => `$${row.price}`\n      },\n      {\n        name: \" \",\n        selector: \"usage\",\n        sortable: true,\n        cell: (row) => (\n          <Chip\n            className=\"m-0\"\n            color={row.usage === \"Unused\" || !row.usage ? \"primary\" : \"success\"}\n            text={row.usage ? row.usage : \"Unused\"}\n          />\n        ),\n      },\n\n      {\n        name: \"Actions\",\n        sortable: false,\n        cell: (row) => (\n          <ActionsComponent\n            row={row}\n            getData={this.props.getData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        ),\n      },\n    ],\n    mobilecolumns: [\n      {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n        minWidth: \"50px\",\n        cell: (row) => (\n          <p\n            style={{ fontSize: \"10px\" }}\n            title={row.name}\n            className=\"text-truncate text-bold-500 mb-0\"\n          >\n            {row.name}\n          </p>\n        ),\n      },\n      {\n        name: \"Relation\",\n        selector: \"relation\",\n        maxWidth: \"50px\",\n        sortable: true,\n        cell: (row) => (\n          <p\n            style={{ fontSize: \"10px\" }}\n            title={row.relation}\n            className=\"text-truncate text-bold-500 mb-0\"\n          >\n            {row.relation}\n          </p>\n        ),\n      },\n\n      {\n        name: \"\",\n        sortable: true,\n        width: \"50px\",\n        cell: (row) => (\n          <ActionsComponent\n            row={row}\n            getData={this.props.getData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        ),\n      },\n    ],\n    allData: [],\n    value: \"\",\n    rowsPerPage: 4,\n    sidebar: false,\n    currentData: null,\n    selected: [],\n    totalRecords: 0,\n    sortIndex: [],\n    addNew: \"\",\n    isLoading: false,\n    dataLoading: true,\n  };\n\n  thumbView = this.props.thumbView;\n\n  componentDidMount() {\n    this.props.getData(this.props.parsedFilter);\n    this.props.getInitialData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.thumbView) {\n      this.thumbView = false;\n      let columns = [\n        {\n          name: \"Image\",\n          selector: \"img\",\n          minWidth: \"220px\",\n          cell: (row) => <img src={row.img} height=\"100\" alt={row.name} />,\n        },\n        {\n          name: \"Name\",\n          selector: \"name\",\n          sortable: true,\n          minWidth: \"250px\",\n          cell: (row) => (\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n              {row.name}\n            </p>\n          ),\n        },\n        {\n          name: \"Category\",\n          selector: \"category\",\n          sortable: true,\n        },\n        {\n          name: \"Popularity\",\n          selector: \"popularity\",\n          sortable: true,\n          cell: (row) => (\n            <Progress\n              className=\"w-100 mb-0\"\n              color={row.popularity.color}\n              value={row.popularity.popValue}\n            />\n          ),\n        },\n        {\n          name: \"Order Status\",\n          selector: \"order_status\",\n          sortable: true,\n          cell: (row) => (\n            <Chip\n              className=\"m-0\"\n              color={chipColors[row.order_status]}\n              text={row.order_status}\n            />\n          ),\n        },\n        {\n          name: \"Price\",\n          selector: \"price\",\n          sortable: true,\n          cell: (row) => `$${row.price}`,\n        },\n        {\n          name: \"Actions\",\n          sortable: true,\n          cell: (row) => (\n            <ActionsComponent\n              row={row}\n              getData={this.props.getData}\n              parsedFilter={this.props.parsedFilter}\n              currentData={this.handleCurrentData}\n              deleteRow={this.handleDelete}\n            />\n          ),\n        },\n      ];\n      this.setState({ columns });\n    }\n  }\n\n  handleFilter = (e) => {\n    this.setState({ value: e.target.value });\n    this.props.filterData(e.target.value);\n  };\n\n  handleRowsPerPage = (value) => {\n    let { parsedFilter, getData } = this.props;\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1;\n    history.push(`/nominee/list?page=${page}&perPage=${value}`);\n    this.setState({ rowsPerPage: value });\n    getData({ page: parsedFilter.page, perPage: value });\n  };\n\n  handleSidebar = (boolean, addNew = false) => {\n    this.setState({ sidebar: boolean });\n    if (addNew === true) this.setState({ currentData: null, addNew: true });\n  };\n\n  handleDelete = (row) => {\n    this.props.deleteData(row);\n    this.props.getData(this.props.parsedFilter);\n    if (this.state.data.length - 1 === 0) {\n      let urlPrefix = this.props.thumbView\n        ? \"/data-list/thumb-view/\"\n        : \"/#/nominee/list/\";\n      history.push(\n        `${urlPrefix}list-view?page=${parseInt(\n          this.props.parsedFilter.page - 1\n        )}&perPage=${this.props.parsedFilter.perPage}`\n      );\n      this.props.getData({\n        page: this.props.parsedFilter.page - 1,\n        perPage: this.props.parsedFilter.perPage,\n      });\n    }\n  };\n  //  addData = async (obj) => {\n  addData = (obj) => {\n    if (\n      obj.name === \"\" ||\n      obj.relation1 === \"\" ||\n      obj.email === \"\" ||\n      obj.contact1 === \"\" ||\n      obj.address === \"\"\n    ) {\n      toast.error(\"Please Fill All Mandatory Details\");\n    } else {\n      this.setState({ isLoading: true });\n      console.log(\"aaquib\", obj);\n      let userData = localStorage.getItem(\"logInUserData\")\n        ? JSON.parse(localStorage.getItem(\"logInUserData\"))\n        : {};\n      const nominee = {\n        userId: userData._id,\n        name: obj.name,\n        relation: obj.relation1,\n        email: obj.email,\n        primaryContact: obj.contact1,\n        secondaryContact: obj.contact2,\n        address: obj.address,\n        usage: \"Unused\",\n      };\n      axios\n        .post(\"/backendapi/nominee/add\", nominee)\n        .then((res) => {\n          this.setState({ isLoading: false });\n          toast.success(\"Nominee Added Successfully\");\n          this.handleSidebar(false, true);\n\n          this.props.getData(this.props.parsedFilter);\n        })\n        .catch((e) => {\n          this.setState({ isLoading: false });\n          toast.error(\"Add Nominee Failed! Please contact admin\");\n        });\n\n      console.log(\"aaquib\", nominee);\n    }\n  };\n  updateData = (obj) => {\n    if (\n      obj.name === \"\" ||\n      obj.relation1 === \"\" ||\n      obj.email === \"\" ||\n      obj.contact1 === \"\" ||\n      obj.address === \"\"\n    ) {\n      toast.error(\"Please Fill All Mandatory Details\");\n    } else {\n      this.setState({ isLoading: true });\n      console.log(\"aaquib\", obj);\n      let userData = localStorage.getItem(\"logInUserData\")\n        ? JSON.parse(localStorage.getItem(\"logInUserData\"))\n        : {};\n      const nominee = {\n        _id: obj._id,\n        usage: obj.usage ? obj.usage : \"Unused\",\n        userId: userData._id,\n        name: obj.name,\n        relation: obj.relation1,\n        email: obj.email,\n        primaryContact: obj.contact1,\n        secondaryContact: obj.contact2,\n        address: obj.address,\n      };\n      axios\n        .post(\"/backendapi/nominee/update\", nominee)\n        .then((res) => {\n          this.setState({ isLoading: false });\n          toast.success(\"Nominee Updated Successfully\");\n          this.handleSidebar(false, true);\n\n          this.props.getData(this.props.parsedFilter);\n        })\n        .catch((e) => {\n          this.setState({ isLoading: false });\n          toast.error(\"Add Nominee Failed! Please contact admin\");\n        });\n\n      console.log(\"aaquib\", nominee);\n    }\n  };\n  handleCurrentData = (obj) => {\n    this.setState({ currentData: obj });\n    this.handleSidebar(true);\n  };\n\n  handlePagination = (page) => {\n    let { parsedFilter, getData } = this.props;\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4;\n    let urlPrefix = this.props.thumbView\n      ? \"/#/nominee/list/\"\n      : \"/#/nominee/list/\";\n    history.push(\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\n    );\n    getData({ page: page.selected + 1, perPage: perPage });\n    this.setState({ currentPage: page.selected });\n  };\n\n  render() {\n\n    let {\n      dataLoading,\n      columns,\n      data,\n      allData,\n      totalPages,\n      value,\n      rowsPerPage,\n      currentData,\n      sidebar,\n      totalRecords,\n      sortIndex,\n    } = this.state;\n    if(data.length === 0 && allData.length === 0) {\n      \n      return (\n        <div className=\"fallback-spinner vh-100\">\n        {/* <img className=\"fallback-logo\" src={logo} alt=\"logo\" /> */}\n        <div className=\"loading\">\n          <div className=\"effect-1 effects\"></div>\n          <div className=\"effect-2 effects\"></div>\n          <div className=\"effect-3 effects\"></div>\n        </div>\n      </div>\n      );\n    }\n    return (\n      <div\n        className={`data-list ${\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\n        }`}\n      >\n        <DataTable\n          width=\"200\"\n          columns={\n            window.screen.width < 600 ? this.state.mobilecolumns : columns\n          }\n          data={value.length ? allData : data}\n          //pagination\n          //paginationServer\n          // paginationComponent={() => (\n          //   <ReactPaginate\n          //     previousLabel={<ChevronLeft size={15} />}\n          //     nextLabel={<ChevronRight size={15} />}\n          //     breakLabel=\"...\"\n          //     breakClassName=\"break-me\"\n          //     pageCount={totalPages}\n          //     containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\n          //     activeClassName=\"active\"\n          //     forcePage={\n          //       this.props.parsedFilter.page\n          //         ? parseInt(this.props.parsedFilter.page - 1)\n          //         : 0\n          //     }\n          //     onPageChange={(page) => this.handlePagination(page)}\n          //   />\n          // )}\n          noHeader\n          subHeader\n          selectableRows={window.screen.width < 600 ? false : true}\n          responsive\n          pointerOnHover\n          selectableRowsHighlight\n          onSelectedRowsChange={(data) =>\n            this.setState({ selected: data.selectedRows })\n          }\n          customStyles={selectedStyle}\n          subHeaderComponent={\n            <CustomHeader\n              handleSidebar={this.handleSidebar}\n              handleFilter={this.handleFilter}\n              handleRowsPerPage={this.handleRowsPerPage}\n              rowsPerPage={rowsPerPage}\n              total={totalRecords}\n              index={sortIndex}\n            />\n          }\n          sortIcon={<ChevronDown />}\n          selectableRowsComponent={Checkbox}\n          selectableRowsComponentProps={{\n            color: \"primary\",\n            icon: <Check className=\"vx-icon\" size={12} />,\n            label: \"\",\n            size: \"sm\",\n          }}\n        />\n        <Sidebar\n          show={sidebar}\n          data={currentData}\n          updateData={this.updateData}\n          addData={this.addData}\n          isLoading={this.state.isLoading}\n          handleSidebar={this.handleSidebar}\n          thumbView={this.props.thumbView}\n          getData={this.props.getData}\n          dataParams={this.props.parsedFilter}\n          addNew={this.state.addNew}\n        />\n        <div\n          className={classnames(\"data-list-overlay\", {\n            show: sidebar,\n          })}\n          onClick={() => this.handleSidebar(false, true)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    dataList: state.dataList,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getData,\n  deleteData,\n  updateData,\n  addData,\n  getInitialData,\n  filterData,\n})(DataListConfig);\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport NomineeListConfig from \"./NomineeListConfig\";\nimport queryString from \"query-string\";\nimport { ToastContainer } from \"react-toastify\";\nclass NomineeList extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h2 className=\"warning\">Manage Nominees</h2>\n        {/*\n        <Breadcrumbs\n          breadCrumbTitle=\"Manage Nominees\"\n          breadCrumbParent=\"Nominee\"\n          breadCrumbActive=\"List\"\n        /> */}\n        <Row>\n          <ToastContainer />\n          <Col sm=\"12\">\n            <NomineeListConfig\n              parsedFilter={queryString.parse(this.props.location.search)}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NomineeList;\n","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import axios from \"axios\"\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\nexport const getData = params => {\n  return async dispatch => {\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n    await axios.get(\"/backendapi/nominee/list/\"+userData._id, params).then(response => {\n      console.log('aaquib  123', response.data);\n      console.log('aaquib  123',params);\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data,\n        totalPages: response.length,\n        params\n      })\n    })\n  }\n}\n\nexport const getSpendData = params => {\n  return async dispatch => {\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n    await axios.get(\"/backendapi/spend/list/\"+userData._id, params).then(response => {\n      console.log('aaquib  123', response.data);\n      console.log('aaquib  123',params);\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data,\n        totalPages: response.length,\n        params\n      })\n    })\n  }\n}\n\nexport const getInitialData = () => {\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n  return async dispatch => {\n    await axios.get(\"/backendapi/nominee/list/\"+userData._id).then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const getSpendInitialData = () => {\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n  return async dispatch => {\n    await axios.get(\"/backendapi/spend/list/\"+userData._id).then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const filterData = value => {\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\n}\n\nexport const deleteData = obj => {\n  return dispatch => {\n    console.log('DELETE DATA :',obj);\n    axios\n      .post(\"/backendapi/nominee/delete\", obj\n      )\n      .then(response => {\n        dispatch({ type: \"DELETE_DATA\", obj })\n      })\n  }\n}\n\nexport const updateData = obj => {\n  console.log('Aaquib 123', obj);\n  return (dispatch, getState) => {\n    axios\n      .post(\"/api/datalist/update-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"UPDATE_DATA\", obj })\n      })\n  }\n}\n\nexport const addData = obj => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post(\"/api/datalist/add-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"ADD_DATA\", obj })\n        dispatch(getData(params))\n      })\n  }\n}\n"],"sourceRoot":""}