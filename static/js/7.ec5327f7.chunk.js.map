{"version":3,"sources":["../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","props","_this","call","this","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","pullRight","Math","abs","width","sidebar","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","className","rootClassName","style","root","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","React","createElement","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","children","Component","defaultProps","defineProperty","module","exports","target","i","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","CheckBoxesVuexy","color","type","defaultChecked","checked","value","disabled","onChange","size","icon","label"],"mappings":"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","file":"static/js/7.ec5327f7.chunk.js","sourcesContent":["import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n"],"sourceRoot":""}