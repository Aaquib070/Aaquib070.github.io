{"version":3,"sources":["../node_modules/reactstrap/es/Collapse.js","views/DocumentVault/AddAssets.js","views/DocumentVault/DocumentVault.js","components/@vuexy/checkbox/CheckboxesVuexy.js","views/ui-elements/cards/analytics/GoalOverview.js","redux/actions/data-list/index.js"],"names":["_transitionStatusToCl","propTypes","_objectSpread2","Transition","isOpen","PropTypes","bool","children","oneOfType","arrayOf","node","tag","tagPropType","className","navbar","cssModule","object","innerRef","func","string","defaultProps","appear","enter","exit","timeout","TransitionTimeouts","Collapse","transitionStatusToClassHash","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","_Component","props","_this","call","this","state","height","forEach","name","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","onEntering","isAppearing","setState","onEntered","onExit","onExiting","offsetHeight","onExited","render","_this2","_this$props","Tag","otherProps","_objectWithoutPropertiesLoose","transitionProps","pick","TransitionPropTypeKeys","childProps","omit","React","createElement","_extends","in","status","collapseClass","getTransitionClass","classes","mapToCssModules","classNames","style","ref","Component","colourOptions1","value","label","color","isFixed","colourOptions2","AddAssets","assetType","selectAssetRef","createRef","selectNomineeRef","selectCustomRef","nomineeOption","nominees","nomineeList","selectedTemplate","template","Custom","key","val","type","Notes","changeValue","e","k","idx","findIndex","x","console","log","callAddAsset","preventDefault","user","JSON","parse","localStorage","getItem","nominee","as","assetDetails","assets","push","setItem","stringify","toast","success","clearAsset","clearCustomField","axios","post","_id","then","res","catch","addfield","fname","ftype","deletable","changeNominee","event","id","current","select","clearValue","getData","parsedFilter","Row","Col","lg","md","sm","Card","CardHeader","CardTitle","CardBody","Form","FormGroup","classNamePrefix","options","isClearable","placeholder","onChange","undefined","Label","for","isMulti","Object","keys","includes","map","zIndex","float","marginBottom","marginRight","size","Input","ev","target","Button","Ripple","disabled","length","onClick","outline","dataList","data","temp","relation","connect","ProgrammaticallyDropzone","useState","files","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","thumbs","src","alt","useEffect","revokeObjectURL","block","Assets","active","activeTab","collapseID","collapseItems","title","content","toggle","tab","toggleCollapse","prevState","accordionMarginItems","collapseItem","classnames","closing","opening","Fragment","TabContent","TabPane","tabId","Nav","tabs","NavItem","NavLink","show","assetShow","CheckBoxesVuexy","defaultChecked","checked","icon","defaults","baseURL","params","dispatch","a","userData","get","response","totalPages","getSpendData","getInitialData","getSpendInitialData","filterData","deleteData","obj","updateData","getState","addData"],"mappings":"wGAAA,IAMIA,EANJ,sGAcIC,EAAYC,YAAe,GAAIC,aAAWF,UAAW,CACvDG,OAAQC,IAAUC,KAClBC,SAAUF,IAAUG,UAAU,CAACH,IAAUI,QAAQJ,IAAUK,MAAOL,IAAUK,OAC5EC,IAAKC,IACLC,UAAWR,IAAUK,KACrBI,OAAQT,IAAUC,KAClBS,UAAWV,IAAUW,OACrBC,SAAUZ,IAAUG,UAAU,CAACH,IAAUa,KAAMb,IAAUc,OAAQd,IAAUW,WAGzEI,EAAelB,YAAe,GAAIC,aAAWiB,aAAc,CAC7DhB,QAAQ,EACRiB,QAAQ,EACRC,OAAO,EACPC,MAAM,EACNZ,IAAK,MACLa,QAASC,IAAmBC,WAG1BC,IAA+B3B,EAAwB,IAA0B4B,IAAmBC,UAAY,aAAc7B,EAAsB4B,IAAmBE,SAAW,gBAAiB9B,EAAsB4B,IAAmBG,SAAW,aAAc/B,EAAsB4B,IAAmBI,QAAU,WAAYhC,GAMxU,SAASiC,EAAUvB,GACjB,OAAOA,EAAKwB,aAGd,IAAIR,EAEJ,SAAUS,GAGR,SAAST,EAASU,GAChB,IAAIC,EASJ,OAPAA,EAAQF,EAAWG,KAAKC,KAAMH,IAAUG,MAClCC,MAAQ,CACZC,OAAQ,MAEV,CAAC,aAAc,YAAa,SAAU,YAAa,YAAYC,SAAQ,SAAUC,GAC/EN,EAAMM,GAAQN,EAAMM,GAAMC,KAAKC,YAAuBR,OAEjDA,EAZTS,YAAepB,EAAUS,GAezB,IAAIY,EAASrB,EAASsB,UA6EtB,OA3EAD,EAAOE,WAAa,SAAoBvC,EAAMwC,GAC5CX,KAAKY,SAAS,CACZV,OAAQR,EAAUvB,KAEpB6B,KAAKH,MAAMa,WAAWvC,EAAMwC,IAG9BH,EAAOK,UAAY,SAAmB1C,EAAMwC,GAC1CX,KAAKY,SAAS,CACZV,OAAQ,OAEVF,KAAKH,MAAMgB,UAAU1C,EAAMwC,IAG7BH,EAAOM,OAAS,SAAgB3C,GAC9B6B,KAAKY,SAAS,CACZV,OAAQR,EAAUvB,KAEpB6B,KAAKH,MAAMiB,OAAO3C,IAGpBqC,EAAOO,UAAY,SAAmB5C,GAEtBA,EAAK6C,aAEnBhB,KAAKY,SAAS,CACZV,OAAQ,IAEVF,KAAKH,MAAMkB,UAAU5C,IAGvBqC,EAAOS,SAAW,SAAkB9C,GAClC6B,KAAKY,SAAS,CACZV,OAAQ,OAEVF,KAAKH,MAAMoB,SAAS9C,IAGtBqC,EAAOU,OAAS,WACd,IAAIC,EAASnB,KAEToB,EAAcpB,KAAKH,MACnBwB,EAAMD,EAAYhD,IAClBP,EAASuD,EAAYvD,OACrBS,EAAY8C,EAAY9C,UACxBC,EAAS6C,EAAY7C,OACrBC,EAAY4C,EAAY5C,UACxBR,EAAWoD,EAAYpD,SAEvBsD,GADWF,EAAY1C,SACV6C,YAA8BH,EAAa,CAAC,MAAO,SAAU,YAAa,SAAU,YAAa,WAAY,cAE1HlB,EAASF,KAAKC,MAAMC,OACpBsB,EAAkBC,YAAKH,EAAYI,KACnCC,EAAaC,YAAKN,EAAYI,KAClC,OAAOG,IAAMC,cAAclE,aAAYmE,YAAS,GAAIP,EAAiB,CACnEQ,GAAInE,EACJ6C,WAAYV,KAAKU,WACjBG,UAAWb,KAAKa,UAChBC,OAAQd,KAAKc,OACbC,UAAWf,KAAKe,UAChBE,SAAUjB,KAAKiB,YACb,SAAUgB,GACZ,IAAIC,EA1FV,SAA4BD,GAC1B,OAAO7C,EAA4B6C,IAAW,WAyFtBE,CAAmBF,GACnCG,EAAUC,YAAgBC,IAAWhE,EAAW4D,EAAe3D,GAAU,mBAAoBC,GAC7F+D,EAAmB,OAAXrC,EAAkB,KAAO,CACnCA,OAAQA,GAEV,OAAO2B,IAAMC,cAAcT,EAAKU,YAAS,GAAIJ,EAAY,CACvDY,MAAO5E,YAAe,GAAIgE,EAAWY,MAAO,GAAIA,GAChDjE,UAAW8D,EACXI,IAAKrB,EAAOtB,MAAMnB,WAChBV,OAIDmB,EA7FT,CA8FEsD,aAEFtD,EAASzB,UAAYA,EACrByB,EAASN,aAAeA,EACTM,O,yZClGTuD,EAAiB,CACrB,CACEC,MAAO,eACPC,MAAO,eACPC,MAAO,UACPC,SAAS,GAEX,CACEH,MAAO,gBACPC,MAAO,gBACPC,MAAO,UACPC,SAAS,GAEX,CAAEH,MAAO,QAASC,MAAO,QAASC,MAAO,UAAWC,SAAS,GAC7D,CAAEH,MAAO,SAAUC,MAAO,SAAUC,MAAO,UAAWC,SAAS,IAG3DC,EAAiB,CACrB,CAAEJ,MAAO,OAAQC,MAAO,OAAQC,MAAO,UAAWC,SAAS,GAC3D,CAAEH,MAAO,WAAYC,MAAO,YAAaC,MAAO,UAAWC,SAAS,GACpE,CAAEH,MAAO,OAAQC,MAAO,OAAQC,MAAO,UAAWC,SAAS,GAC3D,CAAEH,MAAO,SAAUC,MAAO,SAAUC,MAAO,UAAWC,SAAS,GAC/D,CAAEH,MAAO,OAAQC,MAAO,OAAQC,MAAO,UAAWC,SAAS,IAGvDE,E,4MACJ/C,MAAQ,CACNgD,UAAW,GACXC,eAAgBrB,IAAMsB,YACtBC,iBAAkBvB,IAAMsB,YACxBE,gBAAiBxB,IAAMsB,YACvBG,cAAe,GACfC,SAAU,GACVC,YAAa,GACbC,iBAAkB,GAClBC,SAAU,CACRC,OAAQ,CACN,CACEC,IAAK,aACLC,IAAK,GACLC,KAAM,SAGVC,MAAO,CACL,CACEH,IAAK,QACLC,IAAK,GACLC,KAAM,YAER,CACEF,IAAK,iBACLC,IAAK,GACLC,KAAM,SAGV,gBAAiB,CACf,CACEF,IAAK,qBACLC,IAAK,GACLC,KAAM,QAER,CACEF,IAAK,mBACLC,IAAK,GACLC,KAAM,UAER,CACEF,IAAK,OACLC,IAAK,GACLC,KAAM,QAER,CACEF,IAAK,SACLC,IAAK,GACLC,KAAM,UAER,CACEF,IAAK,gCACLC,IAAK,GACLC,KAAM,QAER,CACEF,IAAK,mBACLC,IAAK,GACLC,KAAM,QAER,CACEF,IAAK,cACLC,IAAK,GACLC,KAAM,W,EAiCdE,YAAc,SAACC,EAAGC,GAChB,IAAMT,EAAmB,EAAKxD,MAAMwD,iBAC9BU,EAAMV,EAAiBW,WAAU,SAACC,GAAD,OAAOA,EAAET,MAAQM,EAAEN,OAC1DU,QAAQC,IAAI,cAAeN,EAAGE,GAC9BV,EAAiBU,GAAKN,IAAMI,EAC5B,EAAKrD,SAAS,CAAE6C,sB,EAGlBe,aAAe,SAACP,GACdA,EAAEQ,iBACFH,QAAQC,IAAI,EAAKtE,MAAMwD,kBACvB,IAAMiB,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,kBAC7CR,QAAQC,IAAI,oBAAqB,EAAKtE,MAAM8E,SAC5C,IAAMC,EAAK,CACT/B,UAAW,EAAKhD,MAAMgD,UACtBgC,aAAc,EAAKhF,MAAMwD,iBACzBF,SAAU,EAAKtD,MAAMsD,UAEvBmB,EAAKQ,OAAOC,KAAKH,GACjBH,aAAaO,QAAQ,gBAAiBT,KAAKU,UAAUX,IACrDY,IAAMC,QAAQ,8BACd,EAAKC,aACL,EAAKC,mBACLC,IACGC,KAAK,yBAA0B,CAAEC,IAAKlB,EAAKkB,IAAKV,OAAQR,EAAKQ,SAC7DW,MAAK,SAACC,OACNC,S,EAELC,SAAW,WACT,IAAMvC,EAAmB,EAAKxD,MAAMwD,iBACpCA,EAAiB0B,KAAK,CACpBvB,IAAK,EAAK3D,MAAMgG,MAChBpC,IAAK,GACLC,KAAM,EAAK7D,MAAMiG,MACjBC,WAAW,IAEb7B,QAAQC,IAAI,mBAAoBd,GAChC,EAAK7C,SAAS,CAAE6C,mBAAkBwC,MAAO,GAAIC,MAAO,M,EAEtDE,cAAgB,SAACC,GACf,IAAM9C,EAAW,EAAKtD,MAAMsD,SAC5B8C,EAAMlG,SAAQ,SAAC8D,GACbV,EAAS4B,KAAK,CAAEmB,GAAIrC,EAAEtB,MAAOvC,KAAM6D,EAAErB,QACrC0B,QAAQC,IAAI,0BAA2BN,MAEzC,EAAKrD,SAAS,CAAE2C,c,EAMlBiC,WAAa,WACX,EAAKvF,MAAMiD,eAAeqD,QAAQC,OAAOC,aACzC,EAAKxG,MAAMmD,iBAAiBmD,QAAQC,OAAOC,aAC3C,EAAK7F,SAAS,CAAEqC,UAAW,GAAIQ,iBAAkB,GAAIF,SAAU,M,EAEjEkC,iBAAmB,WACjB,EAAK7E,SAAS,CAAEqF,MAAO,GAAIC,MAAO,KAClC,EAAKjG,MAAMoD,gBAAgBkD,QAAQC,OAAOC,c,kEA9D1CzG,KAAKH,MAAM6G,QAAQ1G,KAAKH,MAAM8G,gB,+BAiEtB,IAAD,OACP,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,MACA,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uBAEF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAM/I,UAAU,QACd,kBAACsI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,MACb,kBAACM,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAAC,IAAD,CACEA,UAAU,QACViJ,gBAAgB,SAGhB/E,IAAKxC,KAAKC,MAAMiD,eAChB9C,KAAK,QACLoH,QAAS9E,EACT+E,aAAa,EACbC,YAAY,4BACZC,SAAU,SAAC1D,GAEP,EAAKrD,SAAS,CACZqF,MAAO,GACPC,MAAO,GACPjD,UAAWgB,EAAIA,EAAEtB,WAAQiF,EACzBnE,iBAAkBQ,EACd,EAAKhE,MAAMyD,SAASO,EAAEtB,OACtB,QAKZ,kBAACkF,EAAA,EAAD,CAAOC,IAAI,aAAX,gBAGJ,kBAACjB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,MACb,kBAACM,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAAC,IAAD,CAEEyJ,SAAO,EACP3H,KAAK,UACLoH,QAASxH,KAAKC,MAAMqD,cACpBd,IAAKxC,KAAKC,MAAMmD,iBAChB9E,UAAU,QACViJ,gBAAgB,SAChBG,YAAY,qBACZpB,GAAG,UACHqB,SAAU3H,KAAKoG,gBAGjB,kBAACyB,EAAA,EAAD,kBAuCHG,OAAOC,KAAKjI,KAAKC,MAAMyD,UAAUwE,SAChClI,KAAKC,MAAMgD,YAEXjD,KAAKC,MAAMyD,SAAS1D,KAAKC,MAAMgD,WAAWkF,KAAI,SAAClE,GAC7C,OACE,kBAAC4C,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,MACb,kBAACM,EAAA,EAAD,CAAWhJ,UAAU,oBAClB2F,EAAEkC,WACD,kBAAC,IAAD,CACE5D,MAAO,CACL6F,OAAQ,IACRC,MAAO,QACPC,aAAc,OACdC,YAAa,QAEfjK,UAAU,UACVkK,KAAM,KAGV,kBAACC,EAAA,EAAD,CACE3E,KAAMG,EAAEH,KACR1D,KAAK,OACLkG,GAAG,YACHoB,YAAazD,EAAEL,IACf+D,SAAU,SAACe,GACT,EAAK1E,YACH0E,EAAGC,OAASD,EAAGC,OAAOhG,MAAQ+F,EAAG/F,MACjCsB,MAIN,kBAAC4D,EAAA,EAAD,CAAOC,IAAI,aAAa7D,EAAEL,UAqFpC,kBAACiD,EAAA,EAAD,CAAKG,GAAG,MACN,kBAACM,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAACsK,EAAA,EAAOC,OAAR,CACEhG,MAAM,UACNiB,KAAK,SACLxF,UAAU,YACVwK,SAAyC,IAA/B9I,KAAKC,MAAMsD,SAASwF,OAC9BC,QAAS,SAAC/E,GACR,EAAKO,aAAaP,KANtB,UAWA,kBAAC2E,EAAA,EAAOC,OAAR,CACEI,SAAO,EACPpG,MAAM,UACNiB,KAAK,QACLxF,UAAU,OACV0K,QAAS,SAAC/E,GACR,EAAKuB,eANT,gBAkBd,kBAACqB,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,MACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yBACA,kBAAC,IAAD,CAAYqB,KAAM,GAAIlK,UAAU,+BAElC,kBAAC8I,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKG,GAAG,MACN,kBAACM,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAACmK,EAAA,EAAD,CACE3E,KAAK,QACL1D,KAAK,QACL0I,SAAmC,KAAzB9I,KAAKC,MAAMgD,UACrBqD,GAAG,aACH3D,MAAO3C,KAAKC,MAAMgG,MAClByB,YAAY,mBACZC,SAAU,SAAC1D,GACT,EAAKrD,SAAS,CAAEqF,MAAOhC,EAAE0E,OAAOhG,WAGpC,kBAACkF,EAAA,EAAD,CAAOC,IAAI,cAAX,sBAGJ,kBAACjB,EAAA,EAAD,CAAKG,GAAG,MACN,kBAACM,EAAA,EAAD,CACEhJ,UAAU,mBACVwK,cAAmClB,IAAzB5H,KAAKC,MAAMgD,WAErB,kBAAC,IAAD,CACE3E,UAAU,QACVkE,IAAKxC,KAAKC,MAAMoD,gBAChByF,cAAmClB,IAAzB5H,KAAKC,MAAMgD,UACrBsE,gBAAgB,SAChBE,aAAa,EAEbrH,KAAK,QACLoH,QAASzE,EACT2E,YAAY,uBACZC,SAAU,SAAC1D,GAAD,OACR,EAAKrD,SAAS,CAAEsF,MAAOjC,EAAIA,EAAEtB,MAAQ,SAGzC,kBAACkF,EAAA,EAAD,CAAOC,IAAI,aAAX,gBAGJ,kBAACjB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,MACb,kBAACM,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAACsK,EAAA,EAAOC,OAAR,CACEhG,MAAM,UACNiG,cAAmClB,IAAzB5H,KAAKC,MAAMgD,UACrBa,KAAK,SACLxF,UAAU,YACV0K,QAAS,SAAC/E,GAAD,OAAO,EAAK+B,aAEpB,YAIP,kBAACa,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,MACb,kBAACM,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAACsK,EAAA,EAAOC,OAAR,CACEI,SAAO,EACPpG,MAAM,UACNiB,KAAK,QACLxF,UAAU,OACVwK,cAAmClB,IAAzB5H,KAAKC,MAAMgD,UACrB+F,QAAS,SAAC/E,GACR,EAAKwB,qBAPT,mB,gDAtYc5F,EAAOI,GACrC,GAAIJ,EAAMqJ,SAASC,KAAKJ,SAAW9I,EAAMuD,YAAYuF,OAAQ,CAC3D,IAAMzF,EAAgBrD,EAAMqD,cAW5B,OAVAzD,EAAMqJ,SAASC,KAAKhJ,SAAQ,SAAC8D,GAC3B,IAAMmF,EAAO,CACXzG,MAAOsB,EAAE2B,IACThD,MAAOqB,EAAE7D,KAAO,MAAQ6D,EAAEoF,SAC1BxG,MAAO,UACPC,SAAS,GAEXQ,EAAc6B,KAAKiE,MAGd,CACL5F,YAAa3D,EAAMqJ,SAASC,KAC5B7F,cAAeA,GAKnB,OAAO,S,GA1FazB,IAAMY,W,GA0ff6G,aANS,SAACrJ,GACvB,MAAO,CACLiJ,SAAUjJ,EAAMiJ,YAIoB,CAAExC,aAA3B4C,CAAsCtG,G,eC1hBrD,SAASuG,EAAyB1J,GAAQ,IAAD,EACb2J,mBAAS,IADI,mBAChCC,EADgC,KACzBC,EADyB,OAEOC,YAAY,CAExDC,SAAS,EACTC,YAAY,EACZC,OAAQ,SAACC,GACPL,EACEK,EAAc5B,KAAI,SAAC6B,GAAD,OAChBhC,OAAOiC,OAAOD,EAAM,CAClBE,QAASC,IAAIC,gBAAgBJ,YAR/BK,EAF+B,EAE/BA,aAAcC,EAFiB,EAEjBA,cAAeC,EAFE,EAEFA,KAe/BC,EAASf,EAAMtB,KAAI,SAAC6B,GAAD,OACvB,yBAAK1L,UAAU,WAAWsF,IAAKoG,EAAK5J,MAClC,yBAAK9B,UAAU,kBACb,yBAAKmM,IAAKT,EAAKE,QAAS5L,UAAU,SAASoM,IAAKV,EAAK5J,YAa3D,OARAuK,qBACE,kBAAM,WAEJlB,EAAMtJ,SAAQ,SAAC6J,GAAD,OAAUG,IAAIS,gBAAgBZ,EAAKE,eAEnD,CAACT,IAID,iCACE,wBAASY,EAAa,CAAE/L,UAAW,aACjC,0BAAWgM,KACX,uBAAGhM,UAAU,OAAO0K,QAASuB,GAA7B,4DAIF,6BACA,kBAAC3B,EAAA,EAAOC,OAAR,CACEhG,MAAM,UACNoG,SAAO,EACP3K,UAAU,sBACVkK,KAAK,KACLqC,OAAK,EACL7B,QAASuB,GANX,eAUA,2BAAOjM,UAAU,mBAAmBkM,I,IAKpCM,E,4MACJ7K,MAAQ,CACN8K,OAAQ,IACRC,UAAW,IACXC,WAAY,GACZhJ,OAAQ,SACRiJ,cAAe,CACb,CACE5E,GAAI,EACJ6E,MAAO,iBACPC,QACE,6BACE,kBAACxE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,MAAf,UAGA,kBAACH,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,MAAf,aAOR,CACEV,GAAI,EACJ6E,MAAO,kBACPC,QACE,4HAEJ,CACE9E,GAAI,EACJ6E,MAAO,kBACPC,QACE,iIAEJ,CACE9E,GAAI,EACJ6E,MAAO,cACPC,QACE,oI,EAKRC,OAAS,SAACC,GACJ,EAAKrL,MAAM8K,SAAWO,GACxB,EAAK1K,SAAS,CAAEmK,OAAQO,K,EAI5BC,eAAiB,SAACN,GAChB,EAAKrK,UAAS,SAAC4K,GAAD,MAAgB,CAC5BP,WAAYO,EAAUP,aAAeA,EAAaA,EAAa,Q,EAInEpK,UAAY,SAACyF,GACPA,IAAO,EAAKrG,MAAMgL,YAAY,EAAKrK,SAAS,CAAEqB,OAAQ,Y,EAE5DvB,WAAa,SAAC4F,GACRA,IAAO,EAAKrG,MAAMgL,YAAY,EAAKrK,SAAS,CAAEqB,OAAQ,gB,EAG5DhB,SAAW,SAACqF,GACNA,IAAO,EAAKrG,MAAMgL,YAAY,EAAKrK,SAAS,CAAEqB,OAAQ,Y,EAG5DlB,UAAY,SAACuF,GACPA,IAAO,EAAKrG,MAAMgL,YAAY,EAAKrK,SAAS,CAAEqB,OAAQ,gB,uDAGlD,IAAD,OACDwJ,EAAuBzL,KAAKC,MAAMiL,cAAc/C,KACpD,SAACuD,GACC,OACE,yBAAKpN,UAAU,kBAAkBsF,IAAK8H,EAAapF,IACjD,kBAACW,EAAA,EAAD,CACE+B,QAAS,kBAAM,EAAKuC,eAAeG,EAAapF,KAChDhI,UAAWqN,IAAW,CACpB,qBACwB,WAAtB,EAAK1L,MAAMgC,QACX,EAAKhC,MAAMgL,aAAeS,EAAapF,GACzC,iBACwB,WAAtB,EAAKrG,MAAMgC,QACX,EAAKhC,MAAMgL,aAAeS,EAAapF,GACzCsF,QACwB,eAAtB,EAAK3L,MAAMgC,QACX,EAAKhC,MAAMgL,aAAeS,EAAapF,GACzCuF,QACwB,eAAtB,EAAK5L,MAAMgC,QACX,EAAKhC,MAAMgL,aAAeS,EAAapF,MAG3C,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAW7I,UAAU,iCAClBoN,EAAaP,OAEhB,kBAAC,IAAD,CAAa3C,KAAM,GAAIlK,UAAU,mBAEnC,kBAACa,EAAA,EAAD,CACEtB,OAAQ6N,EAAapF,KAAO,EAAKrG,MAAMgL,WACvCvK,WAAY,kBAAM,EAAKA,WAAWgL,EAAapF,KAC/CzF,UAAW,kBAAM,EAAKA,UAAU6K,EAAapF,KAC7CvF,UAAW,kBAAM,EAAKA,UAAU2K,EAAapF,KAC7CrF,SAAU,kBAAM,EAAKA,SAASyK,EAAapF,MAE3C,kBAACc,EAAA,EAAD,KAAWsE,EAAaN,eAQpC,OACE,kBAAC,IAAMU,SAAP,KACE,wBAAIxN,UAAU,WAAd,YAMA,kBAACsI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKG,GAAG,MA0CN,kBAAC+E,EAAA,EAAD,CAAYf,UAAWhL,KAAKC,MAAM8K,QAChC,kBAACiB,EAAA,EAAD,CAASC,MAAM,MASf,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAChF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,2CAGF,kBAACC,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,MACb,kBAACM,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAACmK,EAAA,EAAD,CACE3E,KAAK,OACL1D,KAAK,OACLkG,GAAG,YACHoB,YAAY,4BAEd,kBAACG,EAAA,EAAD,CAAOC,IAAI,aAAX,4BAGF,kBAACR,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAACmK,EAAA,EAAD,CACE3E,KAAK,OACL1D,KAAK,OACLkG,GAAG,YACHoB,YAAY,cAEd,kBAACG,EAAA,EAAD,CAAOC,IAAI,aAAX,cAGF,kBAACR,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAACmK,EAAA,EAAD,CACE3E,KAAK,OACL1D,KAAK,OACLkG,GAAG,YACHoB,YAAY,gBAEd,kBAACG,EAAA,EAAD,CAAOC,IAAI,aAAX,gBAEF,kBAACR,EAAA,EAAD,CAAWhJ,UAAU,oBACnB,kBAACmK,EAAA,EAAD,CACE3E,KAAK,WACL1D,KAAK,OACLkG,GAAG,YACHoB,YAAY,gBAEd,kBAACG,EAAA,EAAD,CAAOC,IAAI,aAAX,iBAGJ,kBAACjB,EAAA,EAAD,CAAKE,GAAG,IAAIC,GAAG,MACb,kBAACuC,EAAD,QAIJ,kBAAC3C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKG,GAAG,MACN,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,qBACA,yBAAK7I,UAAU,SACb,kBAAC4N,EAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/N,UAAWqN,IAAW,CACpBZ,OAAiC,MAAzB/K,KAAKC,MAAM+K,YAErBhC,QAAShJ,KAAKH,MAAMyM,MAMpB,kBAAC,IAAD,CACE9D,KAAM,GACNQ,QAAS,WACP,EAAKpI,SAAS,CACZ2L,WAAY,EAAKtM,MAAMsM,YAEzB,EAAKtM,MAAMsM,WAAa,EAAKtM,MAC1BsM,kBAoBjB,kBAACnF,EAAA,EAAD,KAEE,kBAAC2E,EAAA,EAAD,CAAYf,UAAWhL,KAAKC,MAAM+K,WAChC,kBAACgB,EAAA,EAAD,CAASC,MAAM,KACb,yBAAK3N,UAAU,eACZmN,IAGL,kBAACO,EAAA,EAAD,CAAS1N,UAAU,iBAAiB2N,MAAM,KAA1C,eAWhB,kBAACD,EAAA,EAAD,CAASC,MAAM,KAAf,gC,GApSOpK,IAAMY,WA4SZqI,a,qFC1YT0B,E,uKAEF,OACE,yBACElO,UAAS,0BACP0B,KAAKH,MAAMvB,UAAY0B,KAAKH,MAAMvB,UAAY,GADvC,wBAEO0B,KAAKH,MAAMgD,QAE3B,2BACEiB,KAAK,WACL2I,eAAgBzM,KAAKH,MAAM4M,eAC3BC,QAAS1M,KAAKH,MAAM6M,QACpB/J,MAAO3C,KAAKH,MAAM8C,MAClBmG,SAAU9I,KAAKH,MAAMiJ,SACrBE,QAAShJ,KAAKH,MAAMmJ,QAAUhJ,KAAKH,MAAMmJ,QAAU,KACnDrB,SAAU3H,KAAKH,MAAM8H,SAAW3H,KAAKH,MAAM8H,SAAW,OAExD,0BACErJ,UAAS,kCACP0B,KAAKH,MAAM2I,KAAOxI,KAAKH,MAAM2I,KAAO,OAGtC,0BAAMlK,UAAU,sBAAsB0B,KAAKH,MAAM8M,OAEnD,8BAAO3M,KAAKH,MAAM+C,Y,GAxBIf,IAAMY,WA8BrB+J,O,8KC1BY3K,IAAMY,W,gWCJjCiD,IAAMkH,SAASC,QAAU,kCAElB,IAAMnG,EAAU,SAAAoG,GACrB,8CAAO,WAAMC,GAAN,eAAAC,EAAA,6DACDC,EAAWpI,aAAaC,QAAQ,iBAAmBH,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,GADtG,SAECY,IAAMwH,IAAI,4BAA4BD,EAASrH,IAAKkH,GAAQjH,MAAK,SAAAsH,GACrE7I,QAAQC,IAAI,cAAe4I,EAAShE,MACpC7E,QAAQC,IAAI,cAAcuI,GAC1BC,EAAS,CACPjJ,KAAM,WACNqF,KAAMgE,EAAShE,KACfiE,WAAYD,EAASpE,OACrB+D,cATC,2CAAP,uDAeWO,EAAe,SAAAP,GAC1B,8CAAO,WAAMC,GAAN,eAAAC,EAAA,6DACDC,EAAWpI,aAAaC,QAAQ,iBAAmBH,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,GADtG,SAECY,IAAMwH,IAAI,0BAA0BD,EAASrH,IAAKkH,GAAQjH,MAAK,SAAAsH,GACnE7I,QAAQC,IAAI,cAAe4I,EAAShE,MACpC7E,QAAQC,IAAI,cAAcuI,GAC1BC,EAAS,CACPjJ,KAAM,WACNqF,KAAMgE,EAAShE,KACfiE,WAAYD,EAASpE,OACrB+D,cATC,2CAAP,uDAeWQ,EAAiB,WAC5B,IAAIL,EAAWpI,aAAaC,QAAQ,iBAAmBH,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,GAC3G,8CAAO,WAAMiI,GAAN,SAAAC,EAAA,sEACCtH,IAAMwH,IAAI,4BAA4BD,EAASrH,KAAKC,MAAK,SAAAsH,GAC7DJ,EAAS,CAAEjJ,KAAM,eAAgBqF,KAAMgE,EAAShE,UAF7C,2CAAP,uDAOWoE,EAAsB,WACjC,IAAIN,EAAWpI,aAAaC,QAAQ,iBAAmBH,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,GAC3G,8CAAO,WAAMiI,GAAN,SAAAC,EAAA,sEACCtH,IAAMwH,IAAI,0BAA0BD,EAASrH,KAAKC,MAAK,SAAAsH,GAC3DJ,EAAS,CAAEjJ,KAAM,eAAgBqF,KAAMgE,EAAShE,UAF7C,2CAAP,uDAOWqE,EAAa,SAAA7K,GACxB,OAAO,SAAAoK,GAAQ,OAAIA,EAAS,CAAEjJ,KAAM,cAAenB,YAGxC8K,EAAa,SAAAC,GACxB,OAAO,SAAAX,GACLrH,IACGC,KAAK,4BAA6B,CACjC+H,QAED7H,MAAK,SAAAsH,GACJJ,EAAS,CAAEjJ,KAAM,cAAe4J,aAK3BC,EAAa,SAAAD,GAExB,OADApJ,QAAQC,IAAI,aAAcmJ,GACnB,SAACX,EAAUa,GAChBlI,IACGC,KAAK,4BAA6B,CACjC+H,QAED7H,MAAK,SAAAsH,GACJJ,EAAS,CAAEjJ,KAAM,cAAe4J,aAK3BG,EAAU,SAAAH,GACrB,OAAO,SAACX,EAAUa,GAChB,IAAId,EAASc,IAAW1E,SAAS4D,OACjCpH,IACGC,KAAK,yBAA0B,CAC9B+H,QAED7H,MAAK,SAAAsH,GACJJ,EAAS,CAAEjJ,KAAM,WAAY4J,QAC7BX,EAASrG,EAAQoG,U","file":"static/js/26.9a4a13dc.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\n\nvar _transitionStatusToCl;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread2({}, Transition.propTypes, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread2({}, Transition.defaultProps, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"]);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread2({}, childProps.style, {}, style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import React, { useRef } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"../../assets/scss/plugins/extensions/toastr.scss\";\nimport { getData } from \"../../redux/actions/data-list/\";\nimport { HelpCircle } from \"react-feather\";\nimport GoalOverview from \"../ui-elements/cards/analytics/GoalOverview\";\nimport Select from \"react-select\";\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\";\nimport { Check, Delete } from \"react-feather\";\nimport Axios from \"axios\";\n\nlet $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $primary_light = \"#9c8cfc\",\n  $warning_light = \"#FFC085\",\n  $danger_light = \"#f29292\",\n  $stroke_color = \"#b9c3cd\",\n  $label_color = \"#e7eef7\";\n\nconst colourOptions = [\n  { value: \"Aaquib\", label: \"Aaquib\", color: \"#00B8D9\", isFixed: true },\n  { value: \"Vipin\", label: \"Vipin\", color: \"#0052CC\", isFixed: true },\n  { value: \"Aqueel\", label: \"Aqueel\", color: \"#5243AA\", isFixed: true },\n  { value: \"Vatsal\", label: \"Vatsal\", color: \"#FF5630\", isFixed: false },\n  { value: \"Pritam\", label: \"Pritam\", color: \"#FF8B00\", isFixed: false },\n];\nconst colourOptions1 = [\n  {\n    value: \"Bank Details\",\n    label: \"Bank Details\",\n    color: \"#00B8D9\",\n    isFixed: true,\n  },\n  {\n    value: \"Fixed Deposit\",\n    label: \"Fixed Deposit\",\n    color: \"#0052CC\",\n    isFixed: true,\n  },\n  { value: \"Notes\", label: \"Notes\", color: \"#0052CC\", isFixed: true },\n  { value: \"Custom\", label: \"Custom\", color: \"#0052CC\", isFixed: true },\n];\n\nconst colourOptions2 = [\n  { value: \"Text\", label: \"Text\", color: \"#00B8D9\", isFixed: true },\n  { value: \"textarea\", label: \"Text Area\", color: \"#0052CC\", isFixed: true },\n  { value: \"Date\", label: \"Date\", color: \"#0052CC\", isFixed: true },\n  { value: \"Number\", label: \"Number\", color: \"#0052CC\", isFixed: true },\n  { value: \"File\", label: \"File\", color: \"#0052CC\", isFixed: true },\n];\n\nclass AddAssets extends React.Component {\n  state = {\n    assetType: \"\",\n    selectAssetRef: React.createRef(),\n    selectNomineeRef: React.createRef(),\n    selectCustomRef: React.createRef(),\n    nomineeOption: [],\n    nominees: [],\n    nomineeList: [],\n    selectedTemplate: [],\n    template: {\n      Custom: [\n        {\n          key: \"Asset Name\",\n          val: \"\",\n          type: \"Text\",\n        },\n      ],\n      Notes: [\n        {\n          key: \"Notes\",\n          val: \"\",\n          type: \"textarea\",\n        },\n        {\n          key: \"Notes End Date\",\n          val: \"\",\n          type: \"date\",\n        },\n      ],\n      \"Fixed Deposit\": [\n        {\n          key: \"Asset Name / Alias\",\n          val: \"\",\n          type: \"Text\",\n        },\n        {\n          key: \"Bank Accrount No\",\n          val: \"\",\n          type: \"Number\",\n        },\n        {\n          key: \"IFSC\",\n          val: \"\",\n          type: \"text\",\n        },\n        {\n          key: \"Amount\",\n          val: \"\",\n          type: \"Number\",\n        },\n        {\n          key: \"FD Nominee Registered at Bank\",\n          val: \"\",\n          type: \"text\",\n        },\n        {\n          key: \"FD Maturity Date\",\n          val: \"\",\n          type: \"Date\",\n        },\n        {\n          key: \"Attachments\",\n          val: \"\",\n          type: \"File\",\n        },\n      ],\n    },\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.dataList.data.length !== state.nomineeList.length) {\n      const nomineeOption = state.nomineeOption;\n      props.dataList.data.forEach((e) => {\n        const temp = {\n          value: e._id,\n          label: e.name + \" - \" + e.relation,\n          color: \"#00B8D9\",\n          isFixed: false,\n        };\n        nomineeOption.push(temp);\n      });\n\n      return {\n        nomineeList: props.dataList.data,\n        nomineeOption: nomineeOption,\n      };\n    }\n\n    // Return null if the state hasn't changed\n    return null;\n  }\n  componentDidMount() {\n    this.props.getData(this.props.parsedFilter);\n    // this.props.getInitialData()\n  }\n\n  changeValue = (e, k) => {\n    const selectedTemplate = this.state.selectedTemplate;\n    const idx = selectedTemplate.findIndex((x) => x.key === k.key);\n    console.log(\"ZZZZZZZZZZZ\", e, idx);\n    selectedTemplate[idx].val = e;\n    this.setState({ selectedTemplate });\n  };\n\n  callAddAsset = (e) => {\n    e.preventDefault();\n    console.log(this.state.selectedTemplate);\n    const user = JSON.parse(localStorage.getItem(\"logInUserData\"));\n    console.log(\"sssssssssssssssss\", this.state.nominee);\n    const as = {\n      assetType: this.state.assetType,\n      assetDetails: this.state.selectedTemplate,\n      nominees: this.state.nominees,\n    };\n    user.assets.push(as);\n    localStorage.setItem(\"logInUserData\", JSON.stringify(user));\n    toast.success(\"Asset addedd successfully!\");\n    this.clearAsset();\n    this.clearCustomField();\n    axios\n      .post(\"/backendapi/adddetails\", { _id: user._id, assets: user.assets })\n      .then((res) => {})\n      .catch();\n  };\n  addfield = () => {\n    const selectedTemplate = this.state.selectedTemplate;\n    selectedTemplate.push({\n      key: this.state.fname,\n      val: \"\",\n      type: this.state.ftype,\n      deletable: true,\n    });\n    console.log(\"selectedTemplate\", selectedTemplate);\n    this.setState({ selectedTemplate, fname: \"\", ftype: \"\" });\n  };\n  changeNominee = (event) => {\n    const nominees = this.state.nominees;\n    event.forEach((e) => {\n      nominees.push({ id: e.value, name: e.label });\n      console.log(\"ssssssssssssssssssssss2\", e);\n    });\n    this.setState({ nominees });\n\n    // console.log(event.target);\n    // console.log(event.target.value);\n  };\n\n  clearAsset = () => {\n    this.state.selectAssetRef.current.select.clearValue();\n    this.state.selectNomineeRef.current.select.clearValue();\n    this.setState({ assetType: \"\", selectedTemplate: [], nominees: [] });\n  };\n  clearCustomField = () => {\n    this.setState({ fname: \"\", ftype: \"\" });\n    this.state.selectCustomRef.current.select.clearValue();\n  };\n\n  render() {\n    return (\n      <Row>\n        <ToastContainer />\n        <Col lg=\"8\" md=\"6\" sm=\"12\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Add New Asset</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Form className=\"mt-2\">\n                <Row>\n                  <Col md=\"6\" sm=\"12\">\n                    <FormGroup className=\"form-label-group\">\n                      <Select\n                        className=\"React\"\n                        classNamePrefix=\"select\"\n                        //defaultValue={colourOptions1[0]}\n\n                        ref={this.state.selectAssetRef}\n                        name=\"color\"\n                        options={colourOptions1}\n                        isClearable={true}\n                        placeholder=\"Select Investment Type...\"\n                        onChange={(e) => {\n                          {\n                            this.setState({\n                              fname: \"\",\n                              ftype: \"\",\n                              assetType: e ? e.value : undefined,\n                              selectedTemplate: e\n                                ? this.state.template[e.value]\n                                : {},\n                            });\n                          }\n                        }}\n                      />\n                      <Label for=\"nameMulti\">Asset Type</Label>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"6\" sm=\"12\">\n                    <FormGroup className=\"form-label-group\">\n                      <Select\n                        //defaultValue={[colourOptions[2], colourOptions[3]]}\n                        isMulti\n                        name=\"nominee\"\n                        options={this.state.nomineeOption}\n                        ref={this.state.selectNomineeRef}\n                        className=\"React\"\n                        classNamePrefix=\"select\"\n                        placeholder=\"Select Nominees...\"\n                        id=\"nominee\"\n                        onChange={this.changeNominee}\n                        //onChange={(e) => {{this.setState({nominee: e ? e.value : undefined})}} }\n                      />\n                      <Label>Nominee</Label>\n                    </FormGroup>\n                  </Col>\n                  {/* {this.state.assetType  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"First Name\"\n                  />\n                  <Label for=\"nameMulti\">First Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"lastname\"\n                    id=\"lastNameMulti\"\n                    placeholder=\"Last Name\"\n                  />\n                  <Label for=\"lastNameMulti\">Last Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Fixed Deposit\"  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder=\"Fixed Deposit Account Number\"\n                  />\n                  <Label for=\"cityMulti\">Fixed Deposit Account Number</Label>\n                </FormGroup>\n              </Col>} */}\n                  {Object.keys(this.state.template).includes(\n                    this.state.assetType\n                  ) &&\n                    this.state.template[this.state.assetType].map((e) => {\n                      return (\n                        <Col md=\"6\" sm=\"12\">\n                          <FormGroup className=\"form-label-group\">\n                            {e.deletable && (\n                              <Delete\n                                style={{\n                                  zIndex: 999,\n                                  float: \"right\",\n                                  marginBottom: \"-8px\",\n                                  marginRight: \"-5px\",\n                                }}\n                                className=\"primary\"\n                                size={15}\n                              />\n                            )}\n                            <Input\n                              type={e.type}\n                              name=\"city\"\n                              id=\"cityMulti\"\n                              placeholder={e.key}\n                              onChange={(ev) => {\n                                this.changeValue(\n                                  ev.target ? ev.target.value : ev.value,\n                                  e\n                                );\n                              }}\n                            />\n                            <Label for=\"cityMulti\">{e.key}</Label>\n                          </FormGroup>\n                        </Col>\n                      );\n                    })}\n                  {/* {this.state.assetType === \"Fixed Deposit\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Bank Name\"\n                  />\n                  <Label for=\"CountryMulti\">Bank Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Bank Details\"  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder=\"Bank Account Number\"\n                  />\n                  <Label for=\"cityMulti\">Bank Account Number</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Bank Details\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Bank Name\"\n                  />\n                  <Label for=\"CountryMulti\">Bank Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Property\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Property Location\"\n                  />\n                  <Label for=\"CountryMulti\">Property Location</Label>\n                </FormGroup>\n              </Col>} */}\n                  {/* <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"company\"\n                    id=\"CompanyMulti\"\n                    placeholder=\"Company\"\n                  />\n                  <Label for=\"CompanyMulti\">Company</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"email\"\n                    name=\"Email\"\n                    id=\"EmailMulti\"\n                    placeholder=\"Email\"\n                  />\n                  <Label for=\"EmailMulti\">Email</Label>\n                </FormGroup>\n              </Col> */}\n                  {/* <Col sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Remember Me\"\n                    defaultChecked={false}\n                  />\n                </FormGroup>\n              </Col> */}\n                  <Col sm=\"12\">\n                    <FormGroup className=\"form-label-group\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        type=\"submit\"\n                        className=\"mr-1 mb-1\"\n                        disabled={this.state.nominees.length === 0}\n                        onClick={(e) => {\n                          this.callAddAsset(e);\n                        }}\n                      >\n                        Submit\n                      </Button.Ripple>\n                      <Button.Ripple\n                        outline\n                        color=\"warning\"\n                        type=\"reset\"\n                        className=\"mb-1\"\n                        onClick={(e) => {\n                          this.clearAsset();\n                        }}\n                      >\n                        Reset\n                      </Button.Ripple>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg=\"4\" md=\"6\" sm=\"12\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Add Custum Field</CardTitle>\n              <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm=\"12\">\n                  <FormGroup className=\"form-label-group\">\n                    <Input\n                      type=\"email\"\n                      name=\"Email\"\n                      disabled={this.state.assetType === \"\"}\n                      id=\"EmailMulti\"\n                      value={this.state.fname}\n                      placeholder=\"Enter Field Name\"\n                      onChange={(e) => {\n                        this.setState({ fname: e.target.value });\n                      }}\n                    />\n                    <Label for=\"EmailMulti\">Enter Field Name</Label>\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\">\n                  <FormGroup\n                    className=\"form-label-group\"\n                    disabled={this.state.assetType === undefined}\n                  >\n                    <Select\n                      className=\"React\"\n                      ref={this.state.selectCustomRef}\n                      disabled={this.state.assetType === undefined}\n                      classNamePrefix=\"select\"\n                      isClearable={true}\n                      //defaultValue={colourOptions1[0]}\n                      name=\"color\"\n                      options={colourOptions2}\n                      placeholder=\"Select Field Type...\"\n                      onChange={(e) =>\n                        this.setState({ ftype: e ? e.value : \" \" })\n                      }\n                    />\n                    <Label for=\"nameMulti\">Field Type</Label>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\" sm=\"12\">\n                  <FormGroup className=\"form-label-group\">\n                    <Button.Ripple\n                      color=\"primary\"\n                      disabled={this.state.assetType === undefined}\n                      type=\"submit\"\n                      className=\"mr-1 mb-1\"\n                      onClick={(e) => this.addfield()}\n                    >\n                      {\"<- Add\"}\n                    </Button.Ripple>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\" sm=\"12\">\n                  <FormGroup className=\"form-label-group\">\n                    <Button.Ripple\n                      outline\n                      color=\"warning\"\n                      type=\"reset\"\n                      className=\"mb-1\"\n                      disabled={this.state.assetType === undefined}\n                      onClick={(e) => {\n                        this.clearCustomField();\n                      }}\n                    >\n                      Reset\n                    </Button.Ripple>\n                  </FormGroup>\n                </Col>\n              </Row>\n\n              {/* <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"radialBar\"\n            height={260}\n          /> */}\n            </CardBody>\n            {/* <div className=\"d-flex mt-2\">\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">Completed</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\n          </div>\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">In Progress</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\n          </div>\n        </div> */}\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    dataList: state.dataList,\n  };\n};\n\nexport default connect(mapStateToProps, { getData })(AddAssets);\n\n//export default AddAssets\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Card,\n  FormGroup,\n  Input,\n  Form,\n  Button,\n  CardHeader,\n  Collapse,\n  CardBody,\n  CardTitle,\n  Label,\n} from \"reactstrap\";\nimport { Eye, Code, ChevronDown } from \"react-feather\";\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport classnames from \"classnames\";\nimport AddAssets from \"./AddAssets\";\nimport GoalOverview from \"../ui-elements/cards/analytics/GoalOverview\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\";\n\nlet $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $primary_light = \"#9c8cfc\",\n  $warning_light = \"#FFC085\",\n  $danger_light = \"#f29292\",\n  $stroke_color = \"#b9c3cd\",\n  $label_color = \"#e7eef7\";\n\nfunction ProgrammaticallyDropzone(props) {\n  const [files, setFiles] = useState([]);\n  const { getRootProps, getInputProps, open } = useDropzone({\n    //accept: \"image/*\",\n    noClick: true,\n    noKeyboard: true,\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n  });\n\n  const thumbs = files.map((file) => (\n    <div className=\"dz-thumb\" key={file.name}>\n      <div className=\"dz-thumb-inner\">\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\n      </div>\n    </div>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <section>\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\" onClick={open}>\n          Drag 'n' drop some files here, or click to select files\n        </p>\n      </div>\n      <br />\n      <Button.Ripple\n        color=\"warning\"\n        outline\n        className=\"mr-1 mb-1 btn-block\"\n        size=\"lg\"\n        block\n        onClick={open}\n      >\n        Select File\n      </Button.Ripple>\n      <aside className=\"thumb-container\">{thumbs}</aside>\n    </section>\n  );\n}\n\nclass Assets extends React.Component {\n  state = {\n    active: \"2\",\n    activeTab: \"1\",\n    collapseID: \"\",\n    status: \"Closed\",\n    collapseItems: [\n      {\n        id: 1,\n        title: \"10th Marksheet\",\n        content: (\n          <div>\n            <Row>\n              <Col md=\"6\" sm=\"12\">\n                >Hey 1\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                >Hey 2\n              </Col>\n            </Row>\n          </div>\n        ),\n      },\n      {\n        id: 2,\n        title: \"Girlfiends pics\",\n        content:\n          \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\",\n      },\n      {\n        id: 3,\n        title: \"Driving License\",\n        content:\n          \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\",\n      },\n      {\n        id: 4,\n        title: \"Mutual Fund\",\n        content:\n          \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\",\n      },\n    ],\n  };\n\n  toggle = (tab) => {\n    if (this.state.active !== tab) {\n      this.setState({ active: tab });\n    }\n  };\n\n  toggleCollapse = (collapseID) => {\n    this.setState((prevState) => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\",\n    }));\n  };\n\n  onEntered = (id) => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" });\n  };\n  onEntering = (id) => {\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" });\n  };\n\n  onExited = (id) => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" });\n  };\n\n  onExiting = (id) => {\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" });\n  };\n\n  render() {\n    const accordionMarginItems = this.state.collapseItems.map(\n      (collapseItem) => {\n        return (\n          <div className=\"collapse-margin\" key={collapseItem.id}>\n            <Card\n              onClick={() => this.toggleCollapse(collapseItem.id)}\n              className={classnames({\n                \"collapse-collapsed\":\n                  this.state.status === \"Closed\" &&\n                  this.state.collapseID === collapseItem.id,\n                \"collapse-shown\":\n                  this.state.status === \"Opened\" &&\n                  this.state.collapseID === collapseItem.id,\n                closing:\n                  this.state.status === \"Closing...\" &&\n                  this.state.collapseID === collapseItem.id,\n                opening:\n                  this.state.status === \"Opening...\" &&\n                  this.state.collapseID === collapseItem.id,\n              })}\n            >\n              <CardHeader>\n                <CardTitle className=\"lead collapse-title collapsed\">\n                  {collapseItem.title}\n                </CardTitle>\n                <ChevronDown size={15} className=\"collapse-icon\" />\n              </CardHeader>\n              <Collapse\n                isOpen={collapseItem.id === this.state.collapseID}\n                onEntering={() => this.onEntering(collapseItem.id)}\n                onEntered={() => this.onEntered(collapseItem.id)}\n                onExiting={() => this.onExiting(collapseItem.id)}\n                onExited={() => this.onExited(collapseItem.id)}\n              >\n                <CardBody>{collapseItem.content}</CardBody>\n              </Collapse>\n            </Card>\n          </div>\n        );\n      }\n    );\n\n    return (\n      <React.Fragment>\n        <h2 className=\"warning\">My Vault</h2>\n        {/* <Breadcrumbs\n          breadCrumbTitle=\"My Vault\"\n          breadCrumbParent=\"Document\"\n          breadCrumbActive=\"Vault\"\n        /> */}\n        <Row>\n          <Col sm=\"12\">\n            {/* <Nav pills>\n      <NavItem>\n        <NavLink\n          className={classnames({\n            active: this.state.active === \"1\"\n          })}\n          onClick={() => {\n            this.toggle(\"1\")\n          }}\n        >\n          Add\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classnames({\n            active: this.state.active === \"2\"\n          })}\n          onClick={() => {\n            this.toggle(\"2\")\n          }}\n        >\n          Upload Files\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled>Record Audio/Video</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classnames({\n            active: this.state.active === \"3\"\n          })}\n          onClick={() => {\n            this.toggle(\"3\")\n          }}\n        >\n          Bulk Upload\n        </NavLink>\n      </NavItem>\n    </Nav> */}\n            <TabContent activeTab={this.state.active}>\n              <TabPane tabId=\"1\">\n                {/* <AddAssets /> */}\n                {/* <Row>\n      <Col lg=\"8\" md=\"6\" sm=\"12\"><AddAssets /></Col>\n      <Col lg=\"4\" md=\"6\" sm=\"12\">\n            <GoalOverview strokeColor={$stroke_color} success={$success} />\n          </Col>\n          </Row> */}\n              </TabPane>\n              <TabPane tabId=\"2\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Upload any file, scans, documents</CardTitle>\n                  </CardHeader>\n\n                  <CardBody>\n                    <Row>\n                      <Col md=\"6\" sm=\"12\">\n                        <FormGroup className=\"form-label-group\">\n                          <Input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"nameMulti\"\n                            placeholder=\"Attachment Name / Alias\"\n                          />\n                          <Label for=\"nameMulti\">Attachment Name / Alias</Label>\n                        </FormGroup>\n\n                        <FormGroup className=\"form-label-group\">\n                          <Input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"nameMulti\"\n                            placeholder=\"File Name\"\n                          />\n                          <Label for=\"nameMulti\">File Name</Label>\n                        </FormGroup>\n\n                        <FormGroup className=\"form-label-group\">\n                          <Input\n                            type=\"Date\"\n                            name=\"name\"\n                            id=\"nameMulti\"\n                            placeholder=\"Expiry Date\"\n                          />\n                          <Label for=\"nameMulti\">Expiry Date</Label>\n                        </FormGroup>\n                        <FormGroup className=\"form-label-group\">\n                          <Input\n                            type=\"textarea\"\n                            name=\"name\"\n                            id=\"nameMulti\"\n                            placeholder=\"Description\"\n                          />\n                          <Label for=\"nameMulti\">Description</Label>\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\" sm=\"12\">\n                        <ProgrammaticallyDropzone />\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col sm=\"12\">\n                        <Card>\n                          <CardHeader>\n                            <CardTitle>My Documents</CardTitle>\n                            <div className=\"views\">\n                              <Nav tabs>\n                                <NavItem>\n                                  <NavLink\n                                    className={classnames({\n                                      active: this.state.activeTab === \"1\",\n                                    })}\n                                    onClick={this.props.show}\n                                    // onClick={() => {\n                                    //   this.toggleTab(\"1\")\n                                    //   this.props.show()\n                                    // }}\n                                  >\n                                    <Eye\n                                      size={15}\n                                      onClick={() => {\n                                        this.setState({\n                                          assetShow: !this.state.assetShow,\n                                        });\n                                        this.state.assetShow = !this.state\n                                          .assetShow;\n                                      }}\n                                    />\n                                  </NavLink>\n                                </NavItem>\n                                {/* <NavItem>\n                  <NavLink\n                    className={classnames({\n                      active: this.state.activeTab === \"2\"\n                    })}\n                    onClick={() => {\n                      this.toggleTab(\"2\")\n                    }}\n                  >\n                    <Code size={15} />\n                  </NavLink>\n                </NavItem> */}\n                              </Nav>\n                            </div>\n                          </CardHeader>\n                          <CardBody>\n                            {/* <p>My Documents</p> */}\n                            <TabContent activeTab={this.state.activeTab}>\n                              <TabPane tabId=\"1\">\n                                <div className=\"vx-collapse\">\n                                  {accordionMarginItems}\n                                </div>\n                              </TabPane>\n                              <TabPane className=\"component-code\" tabId=\"2\">\n                                hey\n                              </TabPane>\n                            </TabContent>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </TabPane>\n              <TabPane tabId=\"3\">Coming soon .......!</TabPane>\n            </TabContent>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\nexport default Assets;\n","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport Chart from \"react-apexcharts\"\nimport { HelpCircle } from \"react-feather\"\n\nclass GoalOverview extends React.Component {\n  state = {\n    options: {\n      chart: {\n        sparkline: {\n          enabled: true\n        },\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      },\n      colors: [this.props.success],\n      plotOptions: {\n        radialBar: {\n          size: 110,\n          startAngle: -140,\n          endAngle: 150,\n          hollow: {\n            size: \"77%\"\n          },\n          track: {\n            background: this.props.strokeColor,\n            strokeWidth: \"50%\"\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              offsetY: 18,\n              color: this.props.strokeColor,\n              fontSize: \"4rem\"\n            }\n          }\n        }\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shade: \"dark\",\n          type: \"horizontal\",\n          shadeIntensity: 0.5,\n          gradientToColors: [\"#00b5b5\"],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        lineCap: \"round\"\n      }\n    },\n    series: [83]\n  }\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Goal Overview</CardTitle>\n          <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\n        </CardHeader>\n        <CardBody>\n          <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"radialBar\"\n            height={260}\n          />\n        </CardBody>\n        <div className=\"d-flex mt-2\">\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">Completed</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\n          </div>\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">In Progress</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\n          </div>\n        </div>\n      </Card>\n    )\n  }\n}\nexport default GoalOverview\n","import axios from \"axios\"\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\nexport const getData = params => {\n  return async dispatch => {\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n    await axios.get(\"/backendapi/nominee/list/\"+userData._id, params).then(response => {\n      console.log('aaquib  123', response.data);\n      console.log('aaquib  123',params);\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data,\n        totalPages: response.length,\n        params\n      })\n    })\n  }\n}\n\nexport const getSpendData = params => {\n  return async dispatch => {\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n    await axios.get(\"/backendapi/spend/list/\"+userData._id, params).then(response => {\n      console.log('aaquib  123', response.data);\n      console.log('aaquib  123',params);\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data,\n        totalPages: response.length,\n        params\n      })\n    })\n  }\n}\n\nexport const getInitialData = () => {\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n  return async dispatch => {\n    await axios.get(\"/backendapi/nominee/list/\"+userData._id).then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const getSpendInitialData = () => {\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n  return async dispatch => {\n    await axios.get(\"/backendapi/spend/list/\"+userData._id).then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const filterData = value => {\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\n}\n\nexport const deleteData = obj => {\n  return dispatch => {\n    axios\n      .post(\"/api/datalist/delete-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"DELETE_DATA\", obj })\n      })\n  }\n}\n\nexport const updateData = obj => {\n  console.log('Aaquib 123', obj);\n  return (dispatch, getState) => {\n    axios\n      .post(\"/api/datalist/update-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"UPDATE_DATA\", obj })\n      })\n  }\n}\n\nexport const addData = obj => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post(\"/api/datalist/add-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"ADD_DATA\", obj })\n        dispatch(getData(params))\n      })\n  }\n}\n"],"sourceRoot":""}