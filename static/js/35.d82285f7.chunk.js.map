{"version":3,"sources":["redux/actions/diary/index.js","views/Diary/DiarySidebar.js","views/Diary/DiaryList.js","views/Diary/TaskSidebar.js","views/Diary/Diary.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["axios","defaults","baseURL","getTodos","routeParams","user","JSON","parse","localStorage","getItem","_id","dispatch","a","get","params","then","result","console","log","data","type","todos","catch","err","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","DiarySidebar","Fragment","className","onClick","props","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","this","routerProps","location","pathname","React","Component","connect","filter","history","push","DiaryList","state","handleUpdateTask","currentLocation","handleOnChange","e","setState","target","searchTask","match","app","routerFilter","todosArr","length","filteredTodos","undefined","renderTodos","map","i","today","Date","createdAt","style","border","padding","key","Alert","title","tags","tag","stopPropagation","trashTask","fontSize","toLocaleDateString","weekday","year","month","day","desc","wordBreak","whiteSpace","FormGroup","display","margin","justifyContent","borderRadius","Input","width","placeholder","onChange","routeParam","todoApp","getState","post","response","val","colourOptions1","label","isFixed","TaskSidebar","audioDetails","url","blob","chunks","duration","h","m","s","ptype","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleAudioStop","handleAudioUpload","file","handleRest","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","prevState","addTaskState","icon","checked","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","updateLabel","labelColor","classNamePrefix","ref","selectAssetRef","name","isClearable","onRecordingComplete","videoBlob","record","audioURL","showUIAudio","rows","textAlign","outline","updateTask","addNewTask","disabled","ans","task","toast","success","mql","window","matchMedia","Diary","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","open","mediaQueryChanged","handleAddTask","status","handleUndoChanges","arr","addListener","removeListener","Consumer","context","sidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction","CheckBoxesVuexy","defaultChecked"],"mappings":"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","file":"static/js/35.d82285f7.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { history } from '../../../history'\r\nimport { toast } from 'react-toastify'\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nexport const getTodos = (routeParams) => {\r\n  const user = JSON.parse(localStorage.getItem('logInUserData'))._id\r\n  routeParams.user = user\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get('backendapi/diary/list', {\r\n        params: routeParams\r\n      })\r\n      .then((result) => {\r\n        //backendapi/diary/list\r\n        console.log('qqqqqqqqqqqqqqqq', routeParams)\r\n        console.log('qqqqqqqqqqqqqqqq', result.data)\r\n        dispatch({\r\n          type: 'GET_TODOS',\r\n          todos: result.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = (todo) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'COMPLETE_TASK', id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'STAR_TASK', id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'IMPORTANT_TASK', id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = (id) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post('/api/app/todo/trash-todo', id)\r\n      .then((response) => dispatch({ type: 'TRASH_TASK', id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = (todo) => {\r\n  console.log('ssssssssssssssss todo', todo)\r\n  const request = axios.post('/api/apps/todo/update-todo', todo)\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then((response) => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: 'UPDATE_TODO',\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (\r\n  id,\r\n  title,\r\n  desc,\r\n  taskToUpdate,\r\n  isCompleted,\r\n  isImportant,\r\n  isStarred,\r\n  tags\r\n) => {\r\n  const ans = {\r\n    _id: id,\r\n    title,\r\n    desc,\r\n    taskToUpdate,\r\n    isCompleted,\r\n    isImportant,\r\n    isStarred,\r\n    tags\r\n  }\r\n  const request = axios.post('/backendapi/diary/update', ans)\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'UPDATE_TASK',\r\n      id,\r\n      title,\r\n      desc,\r\n      taskToUpdate,\r\n      isCompleted,\r\n      isImportant,\r\n      isStarred,\r\n      tags\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: 'UPDATE_LABEL', label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = (task) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    const user = JSON.parse(localStorage.getItem('logInUserData'))._id\r\n    task.user = user\r\n    axios.post('/backendapi/diary/add', task).then((response) => {\r\n      dispatch({ type: 'ADD_TASK', task })\r\n      dispatch(getTodos(params))\r\n      toast.success('Note Added Successfully!!')\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchTask = (val) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'SEARCH_TASK',\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = (filter) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'CHANGE_FILTER', filter })\r\n    history.push(`/#/diary/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Layers, Star, Bookmark, Check, Trash } from 'react-feather'\r\nimport { connect } from 'react-redux'\r\nimport { changeFilter } from '../../redux/actions/diary/index'\r\nclass DiarySidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"todo-app-menu\">\r\n          <div className=\"add-task\">\r\n            <Button.Ripple\r\n              block\r\n              className=\"btn-block my-1\"\r\n              color=\"warning\"\r\n              onClick={() => {\r\n                this.props.addTask('open')\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              Add Notes\r\n            </Button.Ripple>\r\n          </div>\r\n          <PerfectScrollbar\r\n            className=\"sidebar-menu-list\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0 pt-0\"\r\n                action\r\n                onClick={() => {\r\n                  this.props.changeFilter('all')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Layers size={22} />\r\n                <span className=\"align-middle ml-1\">All</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('important')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/important'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Star size={22} />\r\n                <span className=\"align-middle ml-1\">Important</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('starred')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/starred'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Bookmark size={22} />\r\n                <span className=\"align-middle ml-1\">Bookmark</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('completed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/completed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Check size={22} />\r\n                <span className=\"align-middle ml-1\">Completed</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('trashed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/trashed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Trash size={22} />\r\n                <span className=\"align-middle ml-1\">Trashed</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('personal')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/personal'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-primary align-middle\" />\r\n                <span className=\"align-middle ml-1\">Personal</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('professional')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/professional'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-warning align-middle\" />\r\n                <span className=\"align-middle ml-1\">Professional</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('others')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/others'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-success align-middle\" />\r\n                <span className=\"align-middle ml-1\">Others</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('todo')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/todo'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-danger align-middle\" />\r\n                <span className=\"align-middle ml-1\">TO DO List</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { changeFilter })(DiarySidebar)\r\n","import React from 'react'\r\nimport { FormGroup, Input, Alert } from 'reactstrap'\r\nimport { Menu, Search, Check, Bookmark, Star, Trash } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n} from '../../redux/actions/diary/index'\r\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\r\nclass DiaryList extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.app.todo.routeParam !== state.currentLocation) {\r\n      return {\r\n        todos: props.app.todo.todos\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    todos: [],\r\n    handleUpdateTask: null,\r\n    currentLocation: this.props.routerProps.location.pathname,\r\n    value: ''\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getTodos(this.props.routerProps.match.params)\r\n    this.setState({\r\n      todos: this.props.app.todo.todos,\r\n      handleUpdateTask: this.props.handleUpdateTask\r\n    })\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchTask(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { todos, handleUpdateTask, value } = this.state\r\n    let routerFilter = this.props.routerProps.match.params.filter\r\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\r\n\r\n    if (todosArr === undefined || todosArr.length === 0) {\r\n      return (\r\n        <div className=\"fallback-spinner vh-100\">\r\n          {/* <img className=\"fallback-logo\" src={logo} alt=\"logo\" /> */}\r\n          <div className=\"loading\">\r\n            <div className=\"effect-1 effects\"></div>\r\n            <div className=\"effect-2 effects\"></div>\r\n            <div className=\"effect-3 effects\"></div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    let renderTodos =\r\n      todosArr.length > 0 ? (\r\n        todosArr.map((todo, i) => {\r\n          var options = {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n          }\r\n          var today = new Date(todo.createdAt)\r\n          return (\r\n            <li\r\n              style={{ border: 'none', padding: '0 1.6rem' }}\r\n              className={`todo-item ${todo.isCompleted ? 'completed' : ''}`}\r\n              key={i}\r\n              onClick={() => {\r\n                handleUpdateTask(todo)\r\n              }}\r\n            >\r\n              <Alert\r\n                className=\"mt-1\"\r\n                color={todo.isImportant ? 'danger' : 'primary'}\r\n              >\r\n                <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\r\n                  <div className=\"todo-title-area d-flex align-items-center\">\r\n                    <div className=\"title-wrapper d-flex\">\r\n                      {/* <Checkbox\r\n                      color=\"primary\"\r\n                      className=\"user-checkbox\"\r\n                      icon={<Check className=\"vx-icon\" size={12} />}\r\n                      label={\"\"}\r\n                      checked={todo.isCompleted}\r\n                      size=\"sm\"\r\n                      onClick={e => {\r\n                        e.stopPropagation()\r\n                        this.props.completeTask(todo)\r\n                      }}\r\n                      onChange={e => e.stopPropagation()}\r\n                    /> */}\r\n                      <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\r\n                    </div>\r\n\r\n                    {todo.tags.length > 0 ? (\r\n                      <div className=\"chip-wrapper\">\r\n                        {todo.tags.map((tag, i) => (\r\n                          <div className=\"chip mb-0\" key={i}>\r\n                            <div className=\"chip-body\">\r\n                              <span className=\"chip-text\">\r\n                                <span\r\n                                  className={`bullet bullet-${\r\n                                    tag === 'backend'\r\n                                      ? 'warning'\r\n                                      : tag === 'doc'\r\n                                      ? 'success'\r\n                                      : tag === 'bug'\r\n                                      ? 'danger'\r\n                                      : 'primary'\r\n                                  } bullet-xs`}\r\n                                />\r\n                                <span className=\"text-capitalize ml-25\">\r\n                                  {tag}\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`todo-item-action d-flex ${\r\n                      routerFilter === 'trashed' ? 'justify-content-end' : ''\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className={`todo-item-info d-inline-block ${\r\n                        routerFilter === 'trashed' ? 'mr-1' : 'mr-1 mr-sm-0'\r\n                      }`}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.importantTask(todo)\r\n                      }}\r\n                    >\r\n                      <Star\r\n                        size={17}\r\n                        className={`${todo.isImportant ? 'text-danger' : ''}`}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.starTask(todo)\r\n                      }}\r\n                    >\r\n                      <Bookmark\r\n                        size={17}\r\n                        className={`${todo.isStarred ? 'text-warning' : ''}`}\r\n                      />\r\n                    </div>\r\n                    {routerFilter !== 'trashed' ? (\r\n                      <div\r\n                        className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation()\r\n                          this.props.trashTask(todo.id)\r\n                        }}\r\n                      >\r\n                        <Trash size={17} />\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <p style={{ fontSize: '8px' }}>\r\n                  {today.toLocaleDateString('en-US', options)}\r\n                </p>\r\n                {todo.desc.length > 0 ? (\r\n                  <p\r\n                    className=\"todo-desc mb-0\"\r\n                    style={{ wordBreak: 'break-all', whiteSpace: 'normal' }}\r\n                  >\r\n                    {todo.desc}\r\n                  </p>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Alert>\r\n            </li>\r\n          )\r\n        })\r\n      ) : (\r\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\r\n          No tasks at this time\r\n        </p>\r\n      )\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"todo-app-area\">\r\n          <div className=\"todo-app-list-wrapper\">\r\n            <div className=\"todo-app-list\">\r\n              <div className=\"app-fixed-search\">\r\n                <div\r\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\r\n                  onClick={() => this.props.mainSidebar(true)}\r\n                >\r\n                  <Menu size={24} />\r\n                </div>\r\n                <FormGroup\r\n                  style={{\r\n                    display: 'flex',\r\n                    margin: 'auto',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                  className=\"position-relative has-icon-left\"\r\n                >\r\n                  <div style={{ borderRadius: '1.428rem' }}>\r\n                    <div className=\"form-control-position\">\r\n                      <Search size={15} />\r\n                    </div>\r\n                    <Input\r\n                      style={{\r\n                        width: '100%'\r\n                      }}\r\n                      type=\"text\"\r\n                      placeholder=\"Search...\"\r\n                      onChange={(e) => this.handleOnChange(e)}\r\n                      value={value}\r\n                    />\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <PerfectScrollbar\r\n                className=\"todo-task-list\"\r\n                options={{\r\n                  wheelPropagation: false\r\n                }}\r\n              >\r\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n})(DiaryList)\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport { toast } from 'react-toastify'\r\nimport Select from 'react-select'\r\nimport { X, Bookmark, Star, Tag, Check } from 'react-feather'\r\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport VideoRecorder from 'react-video-recorder'\r\nimport { Recorder } from 'react-voice-recorder'\r\nimport 'react-voice-recorder/dist/index.css'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  starTask,\r\n  completeTask,\r\n  importantTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n} from '../../redux/actions/diary/index'\r\nconst colourOptions1 = [\r\n  {\r\n    value: 'Text',\r\n    label: 'Text',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Scribble',\r\n    label: 'Scribble',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Attachment',\r\n    label: 'Attachment',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Voice',\r\n    label: 'Voice',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Video',\r\n    label: 'Video',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  }\r\n]\r\nclass TaskSidebar extends React.Component {\r\n  // static getDerivedStateFromProps (props, state){\r\n  //   if (\r\n  //    ( props.taskToUpdate !== null &&\r\n  //     props.taskToUpdate.title !== state.taskTitle) ||\r\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\r\n  //   ) {\r\n  //     let todosArr = props.app.todo.todos\r\n  //     let receivedTask =\r\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\r\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\r\n  //     let taskToUpdate, taskTitle, taskDesc\r\n  //     filteredTask.map(task => {\r\n  //       return (\r\n  //         (taskToUpdate = task),\r\n  //         (taskTitle = task.title),\r\n  //         (taskDesc = task.desc)\r\n  //       )\r\n  //     })\r\n  //     return {\r\n  //       taskToUpdate,\r\n  //       taskTitle,\r\n  //       taskDesc\r\n  //     }\r\n  //   }\r\n  //   return null\r\n  // }\r\n\r\n  state = {\r\n    audioDetails: {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n      }\r\n    },\r\n    ptype: '',\r\n    taskToUpdate: null,\r\n    taskTitle: '',\r\n    taskDesc: '',\r\n    taskStatus: false,\r\n    taskStarred: false,\r\n    taskImportant: false,\r\n    newTask: {\r\n      title: '',\r\n      desc: '',\r\n      tags: [],\r\n      isCompleted: false,\r\n      isImportant: false,\r\n      isStarred: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskToUpdate !== this.props.taskToUpdate) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskImportant !== this.props.taskToUpdate.isImportant)\r\n    ) {\r\n      this.setState({\r\n        taskToUpdate: this.props.taskToUpdate,\r\n        taskTitle: this.props.taskToUpdate.title,\r\n        taskDesc: this.props.taskToUpdate.desc,\r\n        taskStatus: this.props.taskToUpdate.isCompleted,\r\n        taskStarred: this.props.taskToUpdate.isStarred,\r\n        taskImportant: this.props.taskToUpdate.isImportant\r\n      })\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  handleAudioStop = (data) => {\r\n    console.log(data)\r\n    this.setState({ audioDetails: data })\r\n  }\r\n  handleAudioUpload = (file) => {\r\n    console.log(file)\r\n  }\r\n  handleRest = () => {\r\n    const reset = {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n      }\r\n    }\r\n    this.setState({ audioDetails: reset })\r\n  }\r\n\r\n  handleNewTaskTags = (tag) => {\r\n    let tagsArr = this.state.newTask.tags\r\n    if (tagsArr.includes(tag)) {\r\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\r\n    } else {\r\n      tagsArr.push(tag)\r\n    }\r\n    this.setState({\r\n      ...this.state.newTask,\r\n      tags: tag\r\n    })\r\n  }\r\n\r\n  renderTags = (taskArr) => {\r\n    return taskArr.map((tag, i) => (\r\n      <div className=\"chip mb-0 mr-50\" key={i}>\r\n        <div className=\"chip-body\">\r\n          <span className=\"chip-text\">\r\n            <span\r\n              className={`bullet bullet-${\r\n                tag === 'professional'\r\n                  ? 'warning'\r\n                  : tag === 'others'\r\n                  ? 'success'\r\n                  : tag === 'todo'\r\n                  ? 'danger'\r\n                  : 'primary'\r\n              } bullet-xs`}\r\n            />\r\n            <span className=\"text-capitalize ml-25\">{tag}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } =\r\n      this.state\r\n\r\n    return (\r\n      <div\r\n        className={`task-sidebar ${\r\n          this.props.addTaskState === true ? 'show' : ''\r\n        }`}\r\n      >\r\n        <div className=\"task-header\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"task-type-title text-bold-600\">\r\n              <h3 style={{ color: 'var(--warning)' }}>\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\r\n                  ? 'Update Details'\r\n                  : 'Enter Details'}\r\n              </h3>\r\n            </div>\r\n            <div className=\"close-icon\">\r\n              <X\r\n                className=\"cursor-pointer\"\r\n                size={20}\r\n                onClick={() => {\r\n                  this.props.addTask('close')\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <PerfectScrollbar>\r\n          <div className=\"task-body\">\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n              <div className=\"mark-complete\">\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && (\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    className=\"user-checkbox\"\r\n                    icon={<Check className=\"vx-icon\" size={15} />}\r\n                    label={''}\r\n                    checked={taskStatus}\r\n                    onChange={(e) => {\r\n                      this.props.completeTask(this.props.taskToUpdate)\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <Star\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskImportant) ||\r\n                    newTask.isImportant\r\n                      ? 'text-success'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.importantTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isImportant: !this.state.newTask.isImportant\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <Bookmark\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskStarred) ||\r\n                    newTask.isStarred\r\n                      ? 'text-warning'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.starTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isStarred: !this.state.newTask.isStarred\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle tag=\"span\">\r\n                    <Tag className=\"mr-50\" size={20} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu tag=\"ul\" right>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Personal'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\r\n                              'personal'\r\n                            )) ||\r\n                          newTask.tags.includes('personal')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'personal')\r\n                          else this.handleNewTaskTags('personal')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        labelColor=\"#ff9f43\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Professional'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\r\n                              'professional'\r\n                            )) ||\r\n                          newTask.tags.includes('professional')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(\r\n                              taskToUpdate.id,\r\n                              'professional'\r\n                            )\r\n                          else this.handleNewTaskTags('professional')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Others'}\r\n                        labelColor=\"#25af63\"\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('others')) ||\r\n                          newTask.tags.includes('others')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'others')\r\n                          else this.handleNewTaskTags('others')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        labelColor=\"#ea5455\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'TO DO List'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('todo')) ||\r\n                          newTask.tags.includes('todo')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'todo')\r\n                          else this.handleNewTaskTags('todo')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </div>\r\n\r\n            <FormGroup className=\"form-label-group\">\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"\r\n                // defaultValue={colourOptions1[0]}\r\n\r\n                ref={this.state.selectAssetRef}\r\n                name=\"color\"\r\n                options={colourOptions1}\r\n                isClearable={true}\r\n                placeholder=\"Select Message Type...\"\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    ptype: e ? e.value : ''\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskTitle: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        title: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            {this.state.ptype === 'Video' && (\r\n              <VideoRecorder\r\n                onRecordingComplete={(videoBlob) => {\r\n                  // Do something with the video...\r\n                  console.log('videoBlob', videoBlob)\r\n                }}\r\n              />\r\n            )}\r\n            {this.state.ptype === 'Voice' && (\r\n              <Recorder\r\n                record={true}\r\n                title={'New recording'}\r\n                audioURL={this.state.audioDetails.url}\r\n                showUIAudio\r\n                handleAudioStop={(data) => this.handleAudioStop(data)}\r\n                handleAudioUpload={(data) => this.handleAudioUpload(data)}\r\n                handleRest={() => this.handleRest()}\r\n              />\r\n            )}\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                placeholder=\"Description\"\r\n                rows=\"5\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskDesc: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        desc: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n              {this.props.taskToUpdate !== null &&\r\n              this.props.taskToUpdate.tags &&\r\n              this.props.taskToUpdate.tags.length > 0\r\n                ? this.renderTags(this.props.taskToUpdate.tags)\r\n                : null}\r\n            </div>\r\n            <div\r\n              className=\"d-flex justify-content-end\"\r\n              style={{ textAlign: 'right' }}\r\n            >\r\n              <Button.Ripple\r\n                outline\r\n                className=\"mr-1 mb-1 button-label\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  this.props.addTask('close')\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button.Ripple>{' '}\r\n              <Button.Ripple\r\n                className=\"mb-1 button-label\"\r\n                color=\"warning\"\r\n                onClick={() => {\r\n                  console.log('taskToUpdate', taskToUpdate)\r\n                  //toast.success('Note Added Successfully!!')\r\n                  const { isCompleted, isImportant, isStarred, tags } =\r\n                    taskToUpdate\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.props.updateTask(\r\n                      taskToUpdate._id,\r\n                      taskTitle,\r\n                      taskDesc,\r\n                      taskToUpdate,\r\n                      isCompleted,\r\n                      isImportant,\r\n                      isStarred,\r\n                      tags\r\n                    )\r\n                  } else {\r\n                    this.props.addNewTask(this.state.newTask)\r\n                  }\r\n                  this.props.addTask('close')\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n                disabled={\r\n                  taskTitle.length > 0 || newTask.title.length > 0\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                {taskToUpdate &&\r\n                taskToUpdate.id &&\r\n                this.props.taskToUpdate !== null\r\n                  ? 'Update'\r\n                  : 'Add'}\r\n              </Button.Ripple>\r\n            </div>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  completeTask,\r\n  importantTask,\r\n  starTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n})(TaskSidebar)\r\n","import React from 'react'\r\nimport Sidebar from 'react-sidebar'\r\nimport { ContextLayout } from '../../utility/context/Layout'\r\nimport DiarySidebar from './DiarySidebar'\r\nimport DiaryList from './DiaryList'\r\nimport TaskSidebar from './TaskSidebar'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport '../../assets/scss/plugins/extensions/toastr.scss'\r\nimport '../../assets/scss/pages/app-todo.scss'\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass Diary extends React.Component {\r\n  state = {\r\n    addTask: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    taskToUpdate: null,\r\n    prevState: null\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  onSetSidebarOpen = (open) => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleAddTask = (status) => {\r\n    status === 'open'\r\n      ? this.setState({ addTask: true })\r\n      : this.setState({ addTask: false, taskToUpdate: null })\r\n  }\r\n  handleUpdateTask = (todo) => {\r\n    if (todo !== undefined) {\r\n      this.setState({ addTask: true, taskToUpdate: todo })\r\n    } else {\r\n      this.setState({ taskToUpdate: null })\r\n    }\r\n  }\r\n\r\n  handleUndoChanges = (arr) => {\r\n    this.setState({\r\n      prevState: arr\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <h2 className=\"warning spacing\">Secret Diary</h2>\r\n        <div className=\"todo-application position-relative\">\r\n          <div\r\n            className={`app-content-overlay ${\r\n              this.state.addTask || this.state.sidebarOpen ? 'show' : ''\r\n            }`}\r\n            onClick={() => {\r\n              this.handleAddTask('close')\r\n              this.onSetSidebarOpen(false)\r\n            }}\r\n          />\r\n          <ContextLayout.Consumer>\r\n            {(context) => (\r\n              <Sidebar\r\n                sidebar={\r\n                  <DiarySidebar\r\n                    routerProps={this.props}\r\n                    addTask={this.handleAddTask}\r\n                    mainSidebar={this.onSetSidebarOpen}\r\n                  />\r\n                }\r\n                docked={this.state.sidebarDocked}\r\n                open={this.state.sidebarOpen}\r\n                sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n                touch={false}\r\n                contentClassName=\"sidebar-children d-none\"\r\n                pullRight={context.state.direction === 'rtl'}\r\n              >\r\n                \"\"\r\n              </Sidebar>\r\n            )}\r\n          </ContextLayout.Consumer>\r\n          <DiaryList\r\n            routerProps={this.props}\r\n            handleUpdateTask={this.handleUpdateTask}\r\n            mainSidebar={this.onSetSidebarOpen}\r\n            prevState={this.state.prevState}\r\n          />\r\n          <TaskSidebar\r\n            addTask={this.handleAddTask}\r\n            addTaskState={this.state.addTask}\r\n            taskToUpdate={this.state.taskToUpdate}\r\n            newTask={this.state.newTask}\r\n            mainSidebar={this.onSetSidebarOpen}\r\n            handleUndoChanges={this.handleUndoChanges}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Diary\r\n","import React from 'react'\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : ''\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : 'md'\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span style={{ color: this.props.labelColor }}>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n"],"sourceRoot":""}