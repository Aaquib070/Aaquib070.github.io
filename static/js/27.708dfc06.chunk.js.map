{"version":3,"sources":["redux/actions/diary/index.js","views/Diary/DiarySidebar.js","views/Diary/DiaryList.js","views/Diary/TaskSidebar.js","views/Diary/Diary.js"],"names":["axios","defaults","baseURL","getTodos","routeParams","JSON","parse","localStorage","getItem","userData","dispatch","a","get","_id","params","headers","Authorization","then","response","type","todos","data","catch","err","console","log","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","DiarySidebar","Fragment","className","onClick","props","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","this","routerProps","location","pathname","React","Component","connect","filter","history","push","DiaryList","state","handleUpdateTask","currentLocation","getdiaryLIst","setState","app","handleOnChange","e","target","searchTask","prevState","clearPrevState","routerFilter","match","todosArr","length","filteredTodos","undefined","renderTodos","map","i","today","Date","createdAt","style","border","padding","key","Alert","title","tags","tag","stopPropagation","trashTask","fontSize","toLocaleDateString","weekday","year","month","day","desc","wordBreak","whiteSpace","FormGroup","display","margin","justifyContent","borderRadius","Input","width","placeholder","onChange","routeParam","todoApp","getState","post","val","colourOptions1","label","isFixed","TaskSidebar","audioDetails","url","blob","chunks","duration","h","m","s","ptype","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleAudioStop","handleAudioUpload","file","handleRest","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","addTaskState","icon","checked","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","updateLabel","labelColor","classNamePrefix","ref","selectAssetRef","name","isClearable","onRecordingComplete","videoBlob","record","audioURL","showUIAudio","rows","textAlign","outline","handleUndoChanges","updateTask","addNewTask","disabled","ans","request","task","user","toast","success","mql","window","matchMedia","Diary","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","open","mediaQueryChanged","handleAddTask","status","Consumer","context","sidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction"],"mappings":"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","file":"static/js/27.708dfc06.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { history } from '../../../history'\r\nimport { toast } from 'react-toastify'\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nexport const getTodos = (routeParams) => {\r\n  const logInUserData = JSON.parse(localStorage.getItem('logInUserData'))\r\n  if (!logInUserData) return\r\n  let userData = localStorage.getItem('logInUserData')\r\n    ? JSON.parse(localStorage.getItem('logInUserData'))\r\n    : {}\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get(`backendapi/diary/list?user=${userData._id}`, {\r\n        params: routeParams,\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        // for (let data of response?.data) {\r\n        //   data.nomineeId = data?.nomineeId && decryptdata(data.nomineeId, true)\r\n        //   // data._id = data?._id && decryptdata(data._id,true)\r\n        //   // data.userId = data?.userId && decryptdata(data.userId,true)\r\n        //   data.name = data?.name && decryptdata(data.name, true)\r\n        //   data.relation = data?.relation && decryptdata(data.relation, true)\r\n        //   data.email = data?.email && decryptdata(data.email, true)\r\n        //   data.primaryContact =\r\n        //     data?.primaryContact && decryptdata(data.primaryContact, true)\r\n        //   data.secondaryContact =\r\n        //     data?.secondaryContact && decryptdata(data.secondaryContact, true)\r\n        //   data.address = data?.address && decryptdata(data.address, true)\r\n        // }\r\n        dispatch({\r\n          type: 'GET_TODOS',\r\n          todos: response.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = (todo) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'COMPLETE_TASK', id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'STAR_TASK', id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'IMPORTANT_TASK', id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = (id) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post('/api/app/todo/trash-todo', id, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => dispatch({ type: 'TRASH_TASK', id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = (todo) => {\r\n  console.log('updateTodo todo')\r\n  const request = axios.post('/api/apps/todo/update-todo', todo, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n    }\r\n  })\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then((response) => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: 'UPDATE_TODO',\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (\r\n  id,\r\n  title,\r\n  desc,\r\n  taskToUpdate,\r\n  isCompleted,\r\n  isImportant,\r\n  isStarred,\r\n  tags\r\n) => {\r\n  const ans = {\r\n    _id: id,\r\n    title,\r\n    desc,\r\n    taskToUpdate,\r\n    isCompleted,\r\n    isImportant,\r\n    isStarred,\r\n    tags\r\n  }\r\n  const request = axios.post('/backendapi/diary/update', ans, {\r\n    headers: {\r\n      Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n    }\r\n  })\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then((response) => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: 'UPDATE_TASK',\r\n          ans\r\n          // todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: 'UPDATE_LABEL', label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = (task) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    const user = JSON.parse(localStorage.getItem('logInUserData'))._id\r\n    task.user = user\r\n    axios\r\n      .post('/backendapi/diary/add', task, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        dispatch({ type: 'ADD_TASK', task })\r\n        dispatch(getTodos(params))\r\n        toast.success('Note Added Successfully!!')\r\n      })\r\n  }\r\n}\r\n\r\nexport const searchTask = (val) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'SEARCH_TASK',\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = (filter) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'CHANGE_FILTER', filter })\r\n    history.push(`/#/diary/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Layers, Star, Bookmark, Check, Trash } from 'react-feather'\r\nimport { connect } from 'react-redux'\r\nimport { changeFilter } from '../../redux/actions/diary/index'\r\nclass DiarySidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"todo-app-menu\">\r\n          <div className=\"add-task\">\r\n            <Button.Ripple\r\n              block\r\n              className=\"btn-block\"\r\n              color=\"warning\"\r\n              onClick={() => {\r\n                this.props.addTask('open')\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              Add Notes\r\n            </Button.Ripple>\r\n          </div>\r\n          <PerfectScrollbar\r\n            className=\"sidebar-menu-list\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0 pt-0\"\r\n                action\r\n                onClick={() => {\r\n                  this.props.changeFilter('all')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Layers size={22} />\r\n                <span className=\"align-middle ml-1\">All</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('important')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/important'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Star size={22} />\r\n                <span className=\"align-middle ml-1\">Important</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('starred')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/starred'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Bookmark size={22} />\r\n                <span className=\"align-middle ml-1\">Bookmark</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('completed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/completed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Check size={22} />\r\n                <span className=\"align-middle ml-1\">Completed</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('trashed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/trashed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Trash size={22} />\r\n                <span className=\"align-middle ml-1\">Trashed</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('personal')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/personal'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-primary align-middle\" />\r\n                <span className=\"align-middle ml-1\">Personal</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('professional')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname ===\r\n                  '/diary/professional'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-warning align-middle\" />\r\n                <span className=\"align-middle ml-1\">Professional</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('others')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/others'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-success align-middle\" />\r\n                <span className=\"align-middle ml-1\">Others</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('todo')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/diary/todo'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-danger align-middle\" />\r\n                <span className=\"align-middle ml-1\">TO DO List</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { changeFilter })(DiarySidebar)\r\n","import React from 'react'\r\nimport { FormGroup, Input, Alert } from 'reactstrap'\r\nimport { Menu, Search, Bookmark, Star, Trash } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n} from '../../redux/actions/diary/index'\r\nclass DiaryList extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.app.todo.routeParam !== state.currentLocation) {\r\n      return {\r\n        todos: props.app.todo.todos\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  state = {\r\n    todos: [],\r\n    handleUpdateTask: null,\r\n    currentLocation: this.props?.routerProps?.location?.pathname,\r\n    value: ''\r\n  }\r\n  getdiaryLIst = async () => {\r\n    if (!this.state.currentLocation) return\r\n    await this.props.getTodos(this.state.currentLocation)\r\n    this.setState({\r\n      todos: this.props?.app?.todo?.todos,\r\n      handleUpdateTask: this.props.handleUpdateTask\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    if (this.props.prevState) {\r\n      this.setState({ todos: props.app.todo.todos })\r\n      this.props.clearPrevState()\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getdiaryLIst()\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchTask(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { todos, handleUpdateTask, value } = this.state\r\n    let routerFilter = this.props.routerProps.match.params.filter\r\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\r\n\r\n    if (todosArr === undefined) {\r\n      return (\r\n        <div className=\"fallback-spinner vh-100\">\r\n          <div className=\"loading\">\r\n            <div className=\"effect-1 effects\"></div>\r\n            <div className=\"effect-2 effects\"></div>\r\n            <div className=\"effect-3 effects\"></div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    let renderTodos =\r\n      todosArr.length > 0 ? (\r\n        todosArr.map((todo, i) => {\r\n          var options = {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n          }\r\n          var today = new Date(todo.createdAt)\r\n          return (\r\n            <li\r\n              style={{ border: 'none', padding: '0 1.6rem' }}\r\n              className={`todo-item ${todo.isCompleted ? 'completed' : ''}`}\r\n              key={i}\r\n              onClick={() => {\r\n                handleUpdateTask(todo)\r\n              }}\r\n            >\r\n              <Alert\r\n                className=\"mt-1\"\r\n                color={todo.isImportant ? 'danger' : 'primary'}\r\n              >\r\n                <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\r\n                  <div className=\"todo-title-area d-flex align-items-center\">\r\n                    <div className=\"title-wrapper d-flex\">\r\n                      <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\r\n                    </div>\r\n\r\n                    {todo.tags.length > 0 ? (\r\n                      <div className=\"chip-wrapper\">\r\n                        {todo.tags.map((tag, i) => (\r\n                          <div className=\"chip mb-0\" key={i}>\r\n                            <div className=\"chip-body\">\r\n                              <span className=\"chip-text\">\r\n                                <span\r\n                                  className={`bullet bullet-${\r\n                                    tag === 'backend'\r\n                                      ? 'warning'\r\n                                      : tag === 'doc'\r\n                                      ? 'success'\r\n                                      : tag === 'bug'\r\n                                      ? 'danger'\r\n                                      : 'primary'\r\n                                  } bullet-xs`}\r\n                                />\r\n                                <span className=\"text-capitalize ml-25\">\r\n                                  {tag}\r\n                                </span>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  <div\r\n                    className={`todo-item-action d-flex ${\r\n                      routerFilter === 'trashed' ? 'justify-content-end' : ''\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className={`todo-item-info d-inline-block ${\r\n                        routerFilter === 'trashed' ? 'mr-1' : 'mr-1 mr-sm-0'\r\n                      }`}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.importantTask(todo)\r\n                      }}\r\n                    >\r\n                      <Star\r\n                        size={17}\r\n                        className={`${todo.isImportant ? 'text-danger' : ''}`}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.starTask(todo)\r\n                      }}\r\n                    >\r\n                      <Bookmark\r\n                        size={17}\r\n                        className={`${todo.isStarred ? 'text-warning' : ''}`}\r\n                      />\r\n                    </div>\r\n                    {routerFilter !== 'trashed' ? (\r\n                      <div\r\n                        className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation()\r\n                          this.props.trashTask(todo.id)\r\n                        }}\r\n                      >\r\n                        <Trash size={17} />\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n                <p style={{ fontSize: '8px' }}>\r\n                  {today.toLocaleDateString('en-US', options)}\r\n                </p>\r\n                {todo.desc.length > 0 ? (\r\n                  <p\r\n                    className=\"todo-desc mb-0\"\r\n                    style={{ wordBreak: 'break-all', whiteSpace: 'normal' }}\r\n                  >\r\n                    {todo.desc}\r\n                  </p>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Alert>\r\n            </li>\r\n          )\r\n        })\r\n      ) : (\r\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\r\n          No tasks at this time\r\n        </p>\r\n      )\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"todo-app-area\">\r\n          <div className=\"todo-app-list-wrapper\">\r\n            <div className=\"todo-app-list\">\r\n              <div className=\"app-fixed-search\">\r\n                <div\r\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\r\n                  onClick={() => this.props.mainSidebar(true)}\r\n                >\r\n                  <Menu size={24} />\r\n                </div>\r\n                <FormGroup\r\n                  style={{\r\n                    display: 'flex',\r\n                    margin: 'auto',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                  className=\"position-relative has-icon-left\"\r\n                >\r\n                  <div style={{ borderRadius: '1.428rem' }}>\r\n                    <div className=\"form-control-position\">\r\n                      <Search size={15} />\r\n                    </div>\r\n                    <Input\r\n                      style={{\r\n                        width: '100%'\r\n                      }}\r\n                      type=\"text\"\r\n                      placeholder=\"Search...\"\r\n                      onChange={(e) => this.handleOnChange(e)}\r\n                      value={value}\r\n                    />\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <PerfectScrollbar\r\n                className=\"todo-task-list\"\r\n                options={{\r\n                  wheelPropagation: false\r\n                }}\r\n              >\r\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n})(DiaryList)\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { X, Bookmark, Star, Tag, Check } from 'react-feather'\r\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport VideoRecorder from 'react-video-recorder'\r\nimport { Recorder } from 'react-voice-recorder'\r\nimport 'react-voice-recorder/dist/index.css'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  starTask,\r\n  completeTask,\r\n  importantTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n} from '../../redux/actions/diary/index'\r\nconst colourOptions1 = [\r\n  {\r\n    value: 'Attachment',\r\n    label: 'Attachment',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Scribble',\r\n    label: 'Scribble',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Text',\r\n    label: 'Text',\r\n    color: '#00B8D9',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Video',\r\n    label: 'Video',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  },\r\n  {\r\n    value: 'Voice',\r\n    label: 'Voice',\r\n    color: '#0052CC',\r\n    isFixed: true\r\n  }\r\n]\r\nclass TaskSidebar extends React.Component {\r\n  state = {\r\n    audioDetails: {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n      }\r\n    },\r\n    ptype: '',\r\n    taskToUpdate: null,\r\n    taskTitle: '',\r\n    taskDesc: '',\r\n    taskStatus: false,\r\n    taskStarred: false,\r\n    taskImportant: false,\r\n    newTask: {\r\n      title: '',\r\n      desc: '',\r\n      tags: [],\r\n      isCompleted: false,\r\n      isImportant: false,\r\n      isStarred: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskToUpdate !== this.props.taskToUpdate) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskImportant !== this.props.taskToUpdate.isImportant)\r\n    ) {\r\n      this.setState({\r\n        taskToUpdate: this.props.taskToUpdate,\r\n        taskTitle: this.props.taskToUpdate.title,\r\n        taskDesc: this.props.taskToUpdate.desc,\r\n        taskStatus: this.props.taskToUpdate.isCompleted,\r\n        taskStarred: this.props.taskToUpdate.isStarred,\r\n        taskImportant: this.props.taskToUpdate.isImportant\r\n      })\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n  handleAudioStop = (data) => {\r\n    console.log(data)\r\n    this.setState({ audioDetails: data })\r\n  }\r\n  handleAudioUpload = (file) => {\r\n    console.log(file)\r\n  }\r\n  handleRest = () => {\r\n    const reset = {\r\n      url: null,\r\n      blob: null,\r\n      chunks: null,\r\n      duration: {\r\n        h: 0,\r\n        m: 0,\r\n        s: 0\r\n      }\r\n    }\r\n    this.setState({ audioDetails: reset })\r\n  }\r\n\r\n  handleNewTaskTags = (tag) => {\r\n    let tagsArr = this.state.newTask.tags\r\n    if (tagsArr.includes(tag)) {\r\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\r\n    } else {\r\n      tagsArr.push(tag)\r\n    }\r\n    this.setState({\r\n      ...this.state.newTask,\r\n      tags: tag\r\n    })\r\n  }\r\n\r\n  renderTags = (taskArr) => {\r\n    return taskArr.map((tag, i) => (\r\n      <div className=\"chip mb-0 mr-50\" key={i}>\r\n        <div className=\"chip-body\">\r\n          <span className=\"chip-text\">\r\n            <span\r\n              className={`bullet bullet-${\r\n                tag === 'professional'\r\n                  ? 'warning'\r\n                  : tag === 'others'\r\n                  ? 'success'\r\n                  : tag === 'todo'\r\n                  ? 'danger'\r\n                  : 'primary'\r\n              } bullet-xs`}\r\n            />\r\n            <span className=\"text-capitalize ml-25\">{tag}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } =\r\n      this.state\r\n\r\n    return (\r\n      <div\r\n        className={`task-sidebar ${\r\n          this.props.addTaskState === true ? 'show' : ''\r\n        }`}\r\n      >\r\n        <div className=\"task-header\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"task-type-title text-bold-600\">\r\n              <h3 style={{ color: 'var(--warning)' }}>\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\r\n                  ? 'Update Details'\r\n                  : 'Enter Details'}\r\n              </h3>\r\n            </div>\r\n            <div className=\"close-icon\">\r\n              <X\r\n                className=\"cursor-pointer\"\r\n                size={20}\r\n                onClick={() => {\r\n                  this.props.addTask('close')\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <PerfectScrollbar>\r\n          <div className=\"task-body\">\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n              <div className=\"mark-complete\">\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && (\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    className=\"user-checkbox\"\r\n                    icon={<Check className=\"vx-icon\" size={15} />}\r\n                    label={''}\r\n                    checked={taskStatus}\r\n                    onChange={(e) => {\r\n                      this.props.completeTask(this.props.taskToUpdate)\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <Star\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskImportant) ||\r\n                    newTask.isImportant\r\n                      ? 'text-success'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.importantTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isImportant: !this.state.newTask.isImportant\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <Bookmark\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskStarred) ||\r\n                    newTask.isStarred\r\n                      ? 'text-warning'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.starTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isStarred: !this.state.newTask.isStarred\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle tag=\"span\">\r\n                    <Tag className=\"mr-50\" size={20} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu tag=\"ul\" right>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Personal'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\r\n                              'personal'\r\n                            )) ||\r\n                          newTask.tags.includes('personal')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'personal')\r\n                          else this.handleNewTaskTags('personal')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        labelColor=\"#ff9f43\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Professional'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\r\n                              'professional'\r\n                            )) ||\r\n                          newTask.tags.includes('professional')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(\r\n                              taskToUpdate.id,\r\n                              'professional'\r\n                            )\r\n                          else this.handleNewTaskTags('professional')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Others'}\r\n                        labelColor=\"#25af63\"\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('others')) ||\r\n                          newTask.tags.includes('others')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'others')\r\n                          else this.handleNewTaskTags('others')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        labelColor=\"#ea5455\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'TO DO List'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('todo')) ||\r\n                          newTask.tags.includes('todo')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'todo')\r\n                          else this.handleNewTaskTags('todo')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </div>\r\n\r\n            <FormGroup className=\"form-label-group\">\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"\r\n                // defaultValue={colourOptions1[0]}\r\n\r\n                ref={this.state.selectAssetRef}\r\n                name=\"color\"\r\n                options={colourOptions1}\r\n                isClearable={true}\r\n                placeholder=\"Select Message Type...\"\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    ptype: e ? e.value : ''\r\n                  })\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskTitle: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        title: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              {this.state.ptype === 'Video' && (\r\n                <VideoRecorder\r\n                  onRecordingComplete={(videoBlob) => {\r\n                    // Do something with the video...\r\n                    console.log('videoBlob', videoBlob)\r\n                  }}\r\n                />\r\n              )}\r\n              {this.state.ptype === 'Voice' && (\r\n                <Recorder\r\n                  record={true}\r\n                  title={'New recording'}\r\n                  audioURL={this.state.audioDetails.url}\r\n                  showUIAudio\r\n                  handleAudioStop={(data) => this.handleAudioStop(data)}\r\n                  handleAudioUpload={(data) => this.handleAudioUpload(data)}\r\n                  handleRest={() => this.handleRest()}\r\n                />\r\n              )}\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                placeholder=\"Description\"\r\n                rows=\"5\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskDesc: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        desc: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n              {this.props.taskToUpdate !== null &&\r\n              this.props.taskToUpdate.tags &&\r\n              this.props.taskToUpdate.tags.length > 0\r\n                ? this.renderTags(this.props.taskToUpdate.tags)\r\n                : null}\r\n            </div>\r\n            <div\r\n              className=\"d-flex justify-content-end\"\r\n              style={{ textAlign: 'right' }}\r\n            >\r\n              <Button.Ripple\r\n                outline\r\n                className=\"mr-1 mb-1 button-label\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  this.props.addTask('close')\r\n                  this.props.handleUndoChanges()\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button.Ripple>{' '}\r\n              <Button.Ripple\r\n                className=\"mb-1 button-label\"\r\n                color=\"warning\"\r\n                onClick={() => {\r\n                  console.log('taskToUpdate', taskToUpdate)\r\n                  // toast.success('Note Added Successfully!!')\r\n\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    const { isCompleted, isImportant, isStarred, tags } =\r\n                      taskToUpdate\r\n                    this.props.updateTask(\r\n                      taskToUpdate._id,\r\n                      taskTitle,\r\n                      taskDesc,\r\n                      taskToUpdate,\r\n                      isCompleted,\r\n                      isImportant,\r\n                      isStarred,\r\n                      tags\r\n                    )\r\n                  } else {\r\n                    this.props.addNewTask(this.state.newTask)\r\n                  }\r\n                  this.props.addTask('close')\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n                disabled={\r\n                  taskTitle.length > 0 || newTask.title.length > 0\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                {taskToUpdate &&\r\n                taskToUpdate.id &&\r\n                this.props.taskToUpdate !== null\r\n                  ? 'Update'\r\n                  : 'Add'}\r\n              </Button.Ripple>\r\n            </div>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  completeTask,\r\n  importantTask,\r\n  starTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n})(TaskSidebar)\r\n","import React from 'react'\r\nimport Sidebar from 'react-sidebar'\r\nimport { ContextLayout } from '../../utility/context/Layout'\r\nimport DiarySidebar from './DiarySidebar'\r\nimport DiaryList from './DiaryList'\r\nimport TaskSidebar from './TaskSidebar'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport '../../assets/scss/plugins/extensions/toastr.scss'\r\nimport '../../assets/scss/pages/app-todo.scss'\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass Diary extends React.Component {\r\n  state = {\r\n    addTask: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    taskToUpdate: null,\r\n    prevState: null\r\n  }\r\n\r\n  onSetSidebarOpen = (open) => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleAddTask = (status) => {\r\n    status === 'open'\r\n      ? this.setState({ addTask: true })\r\n      : this.setState({ addTask: false, taskToUpdate: null })\r\n  }\r\n  handleUpdateTask = (todo) => {\r\n    if (todo !== undefined) {\r\n      this.setState({ addTask: true, taskToUpdate: todo })\r\n    } else {\r\n      this.setState({ taskToUpdate: null })\r\n    }\r\n  }\r\n\r\n  handleUndoChanges = () => {\r\n    console.log('arrrrrrrrrrrrr')\r\n    this.setState({\r\n      prevState: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <h2 className=\"warning spacing nodisplay\">Secret Diary</h2>\r\n        <div className=\"todo-application position-relative\">\r\n          <div\r\n            className={`app-content-overlay ${\r\n              this.state.addTask || this.state.sidebarOpen ? 'show' : ''\r\n            }`}\r\n            onClick={() => {\r\n              this.handleAddTask('close')\r\n              this.onSetSidebarOpen(false)\r\n            }}\r\n          />\r\n          <ContextLayout.Consumer>\r\n            {(context) => (\r\n              <Sidebar\r\n                sidebar={\r\n                  <DiarySidebar\r\n                    routerProps={this.props}\r\n                    addTask={this.handleAddTask}\r\n                    mainSidebar={this.onSetSidebarOpen}\r\n                  />\r\n                }\r\n                docked={this.state.sidebarDocked}\r\n                open={this.state.sidebarOpen}\r\n                sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n                touch={false}\r\n                contentClassName=\"sidebar-children d-none\"\r\n                pullRight={context.state.direction === 'rtl'}\r\n              >\r\n                \"\"\r\n              </Sidebar>\r\n            )}\r\n          </ContextLayout.Consumer>\r\n          <DiaryList\r\n            routerProps={this.props}\r\n            handleUpdateTask={this.handleUpdateTask}\r\n            mainSidebar={this.onSetSidebarOpen}\r\n            prevState={this.state.prevState}\r\n            clearPrevState={() => {\r\n              this.setState({ prevState: false })\r\n            }}\r\n          />\r\n          <TaskSidebar\r\n            addTask={this.handleAddTask}\r\n            addTaskState={this.state.addTask}\r\n            taskToUpdate={this.state.taskToUpdate}\r\n            newTask={this.state.newTask}\r\n            mainSidebar={this.onSetSidebarOpen}\r\n            handleUndoChanges={this.handleUndoChanges}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Diary\r\n"],"sourceRoot":""}