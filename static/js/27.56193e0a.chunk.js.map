{"version":3,"sources":["views/UserAssets/AddAssets.js","views/UserAssets/Assets.js","components/@vuexy/checkbox/CheckboxesVuexy.js","views/ui-elements/cards/analytics/GoalOverview.js","redux/actions/data-list/index.js"],"names":["colourOptions1","value","label","color","isFixed","colourOptions2","AddAssets","state","assetType","selectAssetRef","React","createRef","selectNomineeRef","selectCustomRef","nomineeOption","nominees","nomineeList","selectedTemplate","template","key","val","type","changeValue","e","k","idx","findIndex","x","console","log","setState","callAddAsset","preventDefault","user","JSON","parse","localStorage","getItem","nominee","as","assetDetails","assets","push","setItem","stringify","toast","success","clearAsset","clearCustomField","axios","post","_id","then","res","catch","addfield","fname","ftype","deletable","changeNominee","event","forEach","id","name","current","select","clearValue","this","props","getData","parsedFilter","Row","Col","lg","md","sm","Card","CardHeader","CardTitle","CardBody","Form","className","FormGroup","classNamePrefix","ref","options","isClearable","placeholder","onChange","undefined","Label","for","isMulti","Object","keys","includes","map","style","zIndex","float","marginBottom","marginRight","size","Input","ev","target","Button","Ripple","disabled","length","onClick","outline","dataList","data","temp","relation","Component","connect","ProgrammaticallyDropzone","useState","files","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","thumbs","src","alt","useEffect","revokeObjectURL","Assets","active","toggle","tab","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","TabContent","activeTab","TabPane","tabId","CheckBoxesVuexy","defaultChecked","checked","icon","GoalOverview","chart","sparkline","enabled","dropShadow","blur","left","top","opacity","colors","plotOptions","radialBar","startAngle","endAngle","hollow","track","background","strokeColor","strokeWidth","dataLabels","show","offsetY","fontSize","fill","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","stroke","lineCap","series","height","defaults","baseURL","params","dispatch","a","userData","get","response","totalPages","getSpendData","getInitialData","getSpendInitialData","filterData","deleteData","obj","updateData","getState","addData"],"mappings":"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","file":"static/js/27.56193e0a.chunk.js","sourcesContent":["import React, {useRef} from \"react\"\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  FormGroup,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label\n} from \"reactstrap\"\nimport axios from \"axios\";\nimport { connect } from \"react-redux\"\nimport { toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport { ToastContainer } from \"react-toastify\"\nimport \"../../assets/scss/plugins/extensions/toastr.scss\"\nimport { getData } from \"../../redux/actions/data-list/\"\nimport { HelpCircle } from \"react-feather\"\nimport GoalOverview from \"../ui-elements/cards/analytics/GoalOverview\"\nimport Select from \"react-select\"\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\nimport { Check,Delete } from \"react-feather\"\nimport Axios from \"axios\";\n\nlet $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $primary_light = \"#9c8cfc\",\n  $warning_light = \"#FFC085\",\n  $danger_light = \"#f29292\",\n  $stroke_color = \"#b9c3cd\",\n  $label_color = \"#e7eef7\"\n\nconst colourOptions = [\n  { value: \"Aaquib\", label: \"Aaquib\", color: \"#00B8D9\", isFixed: true },\n  { value: \"Vipin\", label: \"Vipin\", color: \"#0052CC\", isFixed: true },\n  { value: \"Aqueel\", label: \"Aqueel\", color: \"#5243AA\", isFixed: true },\n  { value: \"Vatsal\", label: \"Vatsal\", color: \"#FF5630\", isFixed: false },\n  { value: \"Pritam\", label: \"Pritam\", color: \"#FF8B00\", isFixed: false },\n  \n]\nconst colourOptions1 = [\n  { value: \"Bank Details\", label: \"Bank Details\", color: \"#00B8D9\", isFixed: true },\n  { value: \"Fixed Deposit\", label: \"Fixed Deposit\", color: \"#0052CC\", isFixed: true },\n  { value: \"Notes\", label: \"Notes\", color: \"#0052CC\", isFixed: true },\n  { value: \"Custom\", label: \"Custom\", color: \"#0052CC\", isFixed: true }\n  \n  \n]\n\nconst colourOptions2 = [\n  { value: \"Text\", label: \"Text\", color: \"#00B8D9\", isFixed: true },\n  { value: \"textarea\", label: \"Text Area\", color: \"#0052CC\", isFixed: true },\n  { value: \"Date\", label: \"Date\", color: \"#0052CC\", isFixed: true },\n  { value: \"Number\", label: \"Number\", color: \"#0052CC\", isFixed: true },\n  { value: \"File\", label: \"File\", color: \"#0052CC\", isFixed: true }\n  \n  \n]\n\n    \n\nclass AddAssets extends React.Component {\n\n  state = {\n    assetType: '',\n    selectAssetRef: React.createRef(),\n    selectNomineeRef: React.createRef(),\n    selectCustomRef: React.createRef(),\n    nomineeOption: [],\n    nominees: [],\n    nomineeList: [],\n    selectedTemplate: [],\n    template : {\n      \"Custom\" : [\n        {\n          key: \"Asset Name\",\n          val:'',\n          type:\"Text\"\n        },\n\n      ],\n      \"Notes\" : [\n        {\n          key: \"Notes\",\n          val:'',\n          type:\"textarea\"\n        },\n        {\n          key: \"Notes End Date\",\n          val:'',\n          type:\"date\"\n        },\n      ],\n      \"Fixed Deposit\" : [\n        {\n          key: \"Asset Name / Alias\",\n          val:'',\n          type:\"Text\"\n        },\n        {\n          key: \"Bank Accrount No\",\n          val:'',\n          type:\"Number\"\n        },\n        {\n          key: \"IFSC\",\n          val:'',\n          type:\"text\"\n        },\n        {\n          key: \"Amount\",\n          val:'',\n          type:\"Number\"\n        },\n        {\n          key: \"FD Nominee Registered at Bank\",\n          val:'',\n          type:\"text\"\n        },\n        {\n          key: \"FD Maturity Date\",\n          val:'',\n          type:\"Date\"\n        },\n        {\n          key: \"Attachments\",\n          val:'',\n          type:\"File\"\n        }\n      ]\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.dataList.data.length !== state.nomineeList.length) {\n      const nomineeOption = state.nomineeOption;\n      props.dataList.data.forEach(e => {\n        const temp ={\n          value: e._id, label: e.name+' - '+ e.relation, color: \"#00B8D9\", isFixed: false\n        }\n        nomineeOption.push(temp);\n      });\n      \n      return {\n        nomineeList: props.dataList.data,\n        nomineeOption: nomineeOption\n      }\n    }\n\n    // Return null if the state hasn't changed\n    return null\n  }\n    componentDidMount() {\n      this.props.getData(this.props.parsedFilter)\n      // this.props.getInitialData()\n    }\n\n    changeValue = (e,k) => {\n      const selectedTemplate = this.state.selectedTemplate;\n      const idx  = selectedTemplate.findIndex(x => x.key ===k.key);\n      console.log('ZZZZZZZZZZZ', e,idx);\n      selectedTemplate[idx].val = e;\n      this.setState({selectedTemplate});\n      \n    }\n\n    callAddAsset = (e) => {\n      e.preventDefault();\n      console.log(this.state.selectedTemplate);\n      const user = JSON.parse(localStorage.getItem('logInUserData'));\n      console.log('sssssssssssssssss',this.state.nominee);\n      const as = {\n        assetType: this.state.assetType,\n        assetDetails: this.state.selectedTemplate,\n        nominees : this.state.nominees\n      }\n      user.assets.push(as)\n      localStorage.setItem('logInUserData',JSON.stringify(user));\n      toast.success(\"Asset addedd successfully!\");\n      this.clearAsset();\n      this.clearCustomField();\n      axios\n      .post(\"/backendapi/adddetails\",{_id: user._id, assets: user.assets})\n      .then(res => {}).catch()\n\n    }\n  addfield = () => {\n\n    const selectedTemplate = this.state.selectedTemplate;\n    selectedTemplate.push(\n      {\n        key: this.state.fname,\n          val:'',\n          type: this.state.ftype,\n          deletable: true\n      }\n    )\n    console.log(\"selectedTemplate\", selectedTemplate);\n    this.setState({selectedTemplate,fname:'',ftype:''});\n\n  }\n  changeNominee= (event) => {\n      const nominees = this.state.nominees;\n      event.forEach(e => {\n        nominees.push({id:e.value,name:e.label});\n        console.log('ssssssssssssssssssssss2',e);\n      })\n      this.setState({nominees});      \n    \n    \n    // console.log(event.target);\n    // console.log(event.target.value);\n}\n\n\nclearAsset = () => {\n  \n  this.state.selectAssetRef.current.select.clearValue();\n  this.state.selectNomineeRef.current.select.clearValue();\n  this.setState({assetType: '', selectedTemplate: [], nominees: []})\n}\nclearCustomField =() => {\n  this.setState({fname:'',ftype:''})\n  this.state.selectCustomRef.current.select.clearValue();\n}\n\n  render() {\n    \n    return (\n      <Row>\n        <ToastContainer  />\n        <Col lg=\"8\" md=\"6\" sm=\"12\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Add New Asset</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Form className=\"mt-2\">\n            <Row>\n            <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n               \n              <Select\n                className=\"React\"\n                classNamePrefix=\"select\"\n                //defaultValue={colourOptions1[0]}\n                \n                \n                ref={this.state.selectAssetRef}\n                name=\"color\"\n                options={colourOptions1}\n                isClearable={true}\n                placeholder=\"Select Investment Type...\"\n                onChange={(e) => {{this.setState({fname:'',ftype:'',assetType: e ? e.value : undefined, selectedTemplate: e ? this.state.template[e.value] : {}})}} }\n              />\n                  <Label for=\"nameMulti\">Asset Type</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                \n              <Select\n                //defaultValue={[colourOptions[2], colourOptions[3]]}\n                isMulti\n                name=\"nominee\"\n                options={this.state.nomineeOption}\n                ref={this.state.selectNomineeRef}\n                className=\"React\"\n                classNamePrefix=\"select\"\n                placeholder= 'Select Nominees...'\n                id=\"nominee\"\n                 onChange={this.changeNominee}\n                //onChange={(e) => {{this.setState({nominee: e ? e.value : undefined})}} }\n              />\n                  <Label >Nominee</Label>\n                </FormGroup>\n              </Col>\n              {/* {this.state.assetType  && \n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"First Name\"\n                  />\n                  <Label for=\"nameMulti\">First Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"lastname\"\n                    id=\"lastNameMulti\"\n                    placeholder=\"Last Name\"\n                  />\n                  <Label for=\"lastNameMulti\">Last Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Fixed Deposit\"  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder=\"Fixed Deposit Account Number\"\n                  />\n                  <Label for=\"cityMulti\">Fixed Deposit Account Number</Label>\n                </FormGroup>\n              </Col>} */}\n              {Object.keys(this.state.template).includes(this.state.assetType) && \n              this.state.template[this.state.assetType].map(e => {\n                return (<Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                {e.deletable && <Delete style={{zIndex:999, float: 'right', marginBottom: '-8px', marginRight: '-5px'}} className=\"primary\" size={15} />}\n                  <Input\n                    type={e.type}\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder={e.key}\n                    onChange={ ev => {this.changeValue(ev.target ? ev.target.value : ev.value,e)}}\n                  /> \n                  <Label for=\"cityMulti\">{e.key}</Label>\n                </FormGroup>\n              </Col>);\n              })\n              }\n              {/* {this.state.assetType === \"Fixed Deposit\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Bank Name\"\n                  />\n                  <Label for=\"CountryMulti\">Bank Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Bank Details\"  &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"cityMulti\"\n                    placeholder=\"Bank Account Number\"\n                  />\n                  <Label for=\"cityMulti\">Bank Account Number</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Bank Details\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Bank Name\"\n                  />\n                  <Label for=\"CountryMulti\">Bank Name</Label>\n                </FormGroup>\n              </Col>}\n              {this.state.assetType === \"Property\" &&\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"CountryMulti\"\n                    placeholder=\"Property Location\"\n                  />\n                  <Label for=\"CountryMulti\">Property Location</Label>\n                </FormGroup>\n              </Col>} */}\n              {/* <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"company\"\n                    id=\"CompanyMulti\"\n                    placeholder=\"Company\"\n                  />\n                  <Label for=\"CompanyMulti\">Company</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"email\"\n                    name=\"Email\"\n                    id=\"EmailMulti\"\n                    placeholder=\"Email\"\n                  />\n                  <Label for=\"EmailMulti\">Email</Label>\n                </FormGroup>\n              </Col> */}\n              {/* <Col sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Checkbox\n                    color=\"primary\"\n                    icon={<Check className=\"vx-icon\" size={16} />}\n                    label=\"Remember Me\"\n                    defaultChecked={false}\n                  />\n                </FormGroup>\n              </Col> */}\n              <Col sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Button.Ripple\n                    color=\"primary\"\n                    type=\"submit\"\n                    className=\"mr-1 mb-1\"\n                    disabled={this.state.nominees.length === 0}\n                    onClick={e => {this.callAddAsset(e)}}\n                  >\n                    Submit\n                  </Button.Ripple>\n                  <Button.Ripple\n                    outline\n                    color=\"warning\"\n                    type=\"reset\"\n                    className=\"mb-1\"\n                    onClick={(e)=>{this.clearAsset()}}\n                  >\n                    Reset\n                  </Button.Ripple>\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col lg=\"4\" md=\"6\" sm=\"12\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Add Custum Field</CardTitle>\n          <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\n        </CardHeader>\n        <CardBody>\n          <Row>\n        <Col sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"email\"\n                    name=\"Email\"\n                    disabled={this.state.assetType === \"\"}\n                    id=\"EmailMulti\"\n                    value={this.state.fname}\n                    placeholder=\"Enter Field Name\"\n                    onChange={(e)=>{this.setState({fname : e.target.value})}}\n                  />\n                  <Label for=\"EmailMulti\">Enter Field Name</Label>\n                </FormGroup>\n              </Col>\n              <Col sm=\"12\">\n              <FormGroup className=\"form-label-group\" disabled={this.state.assetType === undefined}>\n               \n               <Select\n                 className=\"React\"\n                 ref={this.state.selectCustomRef}\n                 disabled={this.state.assetType === undefined}\n                 classNamePrefix=\"select\"\n                 isClearable={true}\n                 //defaultValue={colourOptions1[0]}\n                 name=\"color\"\n                 options={colourOptions2}\n                 placeholder=\"Select Field Type...\"\n                 onChange={(e) => this.setState({ftype: e ? e.value : ' '}) }\n               />\n                   <Label for=\"nameMulti\">Field Type</Label>\n            \n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Button.Ripple\n                    color=\"primary\"\n                    disabled={this.state.assetType === undefined}\n                    type=\"submit\"\n                    className=\"mr-1 mb-1\"\n                    onClick={e => this.addfield()}\n                  >\n                    {\"<- Add\"}\n                  </Button.Ripple>\n                </FormGroup>\n                </Col>\n                <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Button.Ripple\n                    outline\n                    color=\"warning\"\n                    type=\"reset\"\n                    className=\"mb-1\"\n                    disabled={this.state.assetType === undefined}\n                    onClick={e => {this.clearCustomField()}}\n                    \n                  >\n                    Reset\n                  </Button.Ripple>\n                </FormGroup>\n                </Col>\n              \n              </Row>\n             \n          {/* <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"radialBar\"\n            height={260}\n          /> */}\n        </CardBody>\n        {/* <div className=\"d-flex mt-2\">\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">Completed</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\n          </div>\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">In Progress</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\n          </div>\n        </div> */}\n      </Card>\n      </Col>\n      </Row>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state.dataList\n  }\n}\n\nexport default connect(mapStateToProps, {getData})(AddAssets)\n\n//export default AddAssets\n","import React, { useState, useEffect } from \"react\"\nimport { Row, Col ,TabContent, TabPane, Nav, NavItem, NavLink,Card,\n  FormGroup,\n  Input,\n  Form,\n  Button, CardHeader, CardBody, CardTitle,Label } from \"reactstrap\"\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport classnames from \"classnames\"\nimport AddAssets from \"./AddAssets\"\nimport GoalOverview from \"../ui-elements/cards/analytics/GoalOverview\"\nimport { useDropzone } from \"react-dropzone\"\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\"\n\nlet $primary = \"#7367F0\",\n  $success = \"#28C76F\",\n  $danger = \"#EA5455\",\n  $warning = \"#FF9F43\",\n  $primary_light = \"#9c8cfc\",\n  $warning_light = \"#FFC085\",\n  $danger_light = \"#f29292\",\n  $stroke_color = \"#b9c3cd\",\n  $label_color = \"#e7eef7\"\n  \nfunction ProgrammaticallyDropzone(props) {\n  const [files, setFiles] = useState([])\n  const { getRootProps, getInputProps, open } = useDropzone({\n    //accept: \"image/*\",\n    noClick: true,\n    noKeyboard: true,\n    onDrop: acceptedFiles => {\n      setFiles(\n        acceptedFiles.map(file =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      )\n    }\n  })\n\n  const thumbs = files.map(file => (\n    <div className=\"dz-thumb\" key={file.name}>\n      <div className=\"dz-thumb-inner\">\n        <img src={file.preview} className=\"dz-img\" alt={file.name} />\n      </div>\n    </div>\n  ))\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  return (\n    <section>\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p className=\"mx-1\"  onClick={open} >\n          Drag 'n' drop some files here, or click to select files\n        </p>\n      </div>\n      <Button.Ripple color=\"primary\" outline className=\"my-1\" onClick={open}>\n        Select File\n      </Button.Ripple>\n      <aside className=\"thumb-container\">{thumbs}</aside>\n    </section>\n  )\n}\n\nclass Assets extends React.Component {\n  state = {\n    active: \"1\"\n  }\n\n  toggle = tab => {\n    if (this.state.active !== tab) {\n      this.setState({ active: tab })\n    }\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Assets\"\n          breadCrumbParent=\"Assets\"\n          breadCrumbActive=\"Add\"\n        />\n        <Row>\n          <Col sm=\"12\">\n          {/* <Nav pills>\n      <NavItem>\n        <NavLink\n          className={classnames({\n            active: this.state.active === \"1\"\n          })}\n          onClick={() => {\n            this.toggle(\"1\")\n          }}\n        >\n          Add\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classnames({\n            active: this.state.active === \"2\"\n          })}\n          onClick={() => {\n            this.toggle(\"2\")\n          }}\n        >\n          Upload Files\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled>Record Audio/Video</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink\n          className={classnames({\n            active: this.state.active === \"3\"\n          })}\n          onClick={() => {\n            this.toggle(\"3\")\n          }}\n        >\n          Bulk Upload\n        </NavLink>\n      </NavItem>\n    </Nav> */}\n    <TabContent activeTab={this.state.active}>\n      <TabPane tabId=\"1\">\n      <AddAssets />\n        {/* <Row>\n      <Col lg=\"8\" md=\"6\" sm=\"12\"><AddAssets /></Col>\n      <Col lg=\"4\" md=\"6\" sm=\"12\">\n            <GoalOverview strokeColor={$stroke_color} success={$success} />\n          </Col>\n          </Row> */}\n          \n      \n      </TabPane>\n      <TabPane tabId=\"2\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Upload any file, scans, documents</CardTitle>\n        </CardHeader>\n\n        <CardBody>\n        <Row >\n        <Col md=\"4\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"Attachment Name / Alias\"\n                  />\n                  <Label for=\"nameMulti\">Attachment Name / Alias</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"File Name\"\n                  />\n                  <Label for=\"nameMulti\">File Name</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"4\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"Date\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"Expiry Date\"\n                  />\n                  <Label for=\"nameMulti\">Expiry Date</Label>\n                </FormGroup>\n              </Col>\n              <Col md=\"6\" sm=\"12\">\n                <FormGroup className=\"form-label-group\">\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"nameMulti\"\n                    placeholder=\"Description\"\n                  />\n                  <Label for=\"nameMulti\">Description</Label>\n                </FormGroup>\n              </Col>\n        </Row>\n          <ProgrammaticallyDropzone />\n        </CardBody>\n      </Card>\n      </TabPane>\n      <TabPane tabId=\"3\">\n        Coming soon .......!\n      </TabPane>\n    </TabContent>\n            \n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\nexport default Assets\n","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React from \"react\"\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\"\nimport Chart from \"react-apexcharts\"\nimport { HelpCircle } from \"react-feather\"\n\nclass GoalOverview extends React.Component {\n  state = {\n    options: {\n      chart: {\n        sparkline: {\n          enabled: true\n        },\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      },\n      colors: [this.props.success],\n      plotOptions: {\n        radialBar: {\n          size: 110,\n          startAngle: -140,\n          endAngle: 150,\n          hollow: {\n            size: \"77%\"\n          },\n          track: {\n            background: this.props.strokeColor,\n            strokeWidth: \"50%\"\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              offsetY: 18,\n              color: this.props.strokeColor,\n              fontSize: \"4rem\"\n            }\n          }\n        }\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shade: \"dark\",\n          type: \"horizontal\",\n          shadeIntensity: 0.5,\n          gradientToColors: [\"#00b5b5\"],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        lineCap: \"round\"\n      }\n    },\n    series: [83]\n  }\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Goal Overview</CardTitle>\n          <HelpCircle size={20} className=\"cursor-pointer text-muted\" />\n        </CardHeader>\n        <CardBody>\n          <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"radialBar\"\n            height={260}\n          />\n        </CardBody>\n        <div className=\"d-flex mt-2\">\n          <div className=\"completed border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">Completed</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">786,617</p>\n          </div>\n          <div className=\"in-progress border-top border-right text-center w-50 py-1\">\n            <p className=\"mb-50\">In Progress</p>\n            <p className=\"font-large-1 text-bold-600 mb-50\">13,561</p>\n          </div>\n        </div>\n      </Card>\n    )\n  }\n}\nexport default GoalOverview\n","import axios from \"axios\"\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\nexport const getData = params => {\n  return async dispatch => {\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n    await axios.get(\"/backendapi/nominee/list/\"+userData._id, params).then(response => {\n      console.log('aaquib  123', response.data);\n      console.log('aaquib  123',params);\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data,\n        totalPages: response.length,\n        params\n      })\n    })\n  }\n}\n\nexport const getSpendData = params => {\n  return async dispatch => {\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n    await axios.get(\"/backendapi/spend/list/\"+userData._id, params).then(response => {\n      console.log('aaquib  123', response.data);\n      console.log('aaquib  123',params);\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data,\n        totalPages: response.length,\n        params\n      })\n    })\n  }\n}\n\nexport const getInitialData = () => {\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n  return async dispatch => {\n    await axios.get(\"/backendapi/nominee/list/\"+userData._id).then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const getSpendInitialData = () => {\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n  return async dispatch => {\n    await axios.get(\"/backendapi/spend/list/\"+userData._id).then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const filterData = value => {\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\n}\n\nexport const deleteData = obj => {\n  return dispatch => {\n    axios\n      .post(\"/api/datalist/delete-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"DELETE_DATA\", obj })\n      })\n  }\n}\n\nexport const updateData = obj => {\n  console.log('Aaquib 123', obj);\n  return (dispatch, getState) => {\n    axios\n      .post(\"/api/datalist/update-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"UPDATE_DATA\", obj })\n      })\n  }\n}\n\nexport const addData = obj => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post(\"/api/datalist/add-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"ADD_DATA\", obj })\n        dispatch(getData(params))\n      })\n  }\n}\n"],"sourceRoot":""}