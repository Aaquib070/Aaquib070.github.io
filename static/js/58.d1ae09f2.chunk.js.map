{"version":3,"sources":["views/Nominee/DataListSidebar.js","views/Nominee/NomineeListConfig.js","views/Nominee/NomineeList.js","components/@vuexy/checkbox/CheckboxesVuexy.js","components/@vuexy/chips/ChipComponent.js","../node_modules/reactstrap/es/Spinner.js","redux/actions/data-list/index.js"],"names":["DataListSidebar","state","isLoading","props","relation","relation1","email","address","contact1","contact2","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","obj","data","_id","usage","updateData","addData","Object","keys","dataParams","length","prevProps","prevState","console","log","this","setState","primaryContact","secondaryContact","show","handleSidebar","className","classnames","size","onClick","options","wheelPropagation","thumbView","FormGroup","src","alt","htmlFor","color","type","hidden","onChange","e","URL","createObjectURL","target","files","Button","Label","for","Input","value","placeholder","Spinner","outline","Component","axios","defaults","baseURL","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","deleteRow","CustomHeader","UncontrolledDropdown","DropdownToggle","DropdownMenu","tag","right","DropdownItem","index","total","handleRowsPerPage","handleFilter","DataListConfig","totalPages","currentPage","columns","selector","sortable","minWidth","cell","title","text","getData","parsedFilter","handleCurrentData","handleDelete","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","filterData","page","undefined","history","push","perPage","boolean","deleteData","urlPrefix","parseInt","toast","error","nominee","userId","localStorage","getItem","JSON","parse","post","then","res","success","catch","userData","handlePagination","getInitialData","height","Progress","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","icon","label","dataList","filteredData","connect","NomineeList","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","NomineeListConfig","queryString","location","search","React","CheckBoxesVuexy","defaultChecked","checked","disabled","Chip","closeChip","closest","remove","avatarImg","avatarText","avatarIcon","avatarColor","width","closable","closableIcon","propTypes","tagPropType","PropTypes","string","cssModule","object","children","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","role","defaultProps","params","dispatch","a","get","response","getState"],"mappings":"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","file":"static/js/58.d1ae09f2.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\nimport { X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport {Spinner} from \"reactstrap\"\nimport classnames from \"classnames\"\n\nclass DataListSidebar extends Component {\n  state = {\n    //isLoading: props.isLoading,\n    isLoading: this.props.isLoading,\n    relation: 'Son',\n    relation1: 'Son',\n    email: '',\n    address: '',\n    contact1: '',\n    contact2: '',\n    id: \"\",\n    name: \"\",\n    category: \"Audio\",\n    order_status: \"pending\",\n    price: \"\",\n    img: \"\",\n    popularity: {\n      popValue: \"\"\n    }\n  }\n\n  addNew = false\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('aaaaaaaaaaaaaaaaa', this.props.isLoading)\n    if (this.props.data !== null && prevProps.data === null) {\n      if (this.props.data.id !== prevState.id) {\n        this.setState({ id: this.props.data.id })\n      }\n      if (this.props.data.name !== prevState.name) {\n        this.setState({ name: this.props.data.name })\n      }\n      if (this.props.data.relation !== prevState.relation) {\n        this.setState({ relation: this.props.data.relation })\n      }\n      if (this.props.data.relation !== prevState.relation1) {\n        this.setState({ relation1: this.props.data.relation })\n      }\n      if (this.props.data.address !== prevState.address) {\n        this.setState({ address: this.props.data.address })\n      }\n      if (this.props.data.email !== prevState.email) {\n        this.setState({ email: this.props.data.email })\n      }\n      console.log('hhhhhhhhhhhhhhhhhhhhh', this.props.data,prevState )\n      if (this.props.data.primaryContact !== prevState.contact1) {\n        this.setState({ contact1: this.props.data.primaryContact })\n      }\n      if (this.props.data.secondaryContact !== prevState.contact2) {\n        this.setState({ contact2: this.props.data.secondaryContact })\n      }\n     \n      if (this.props.data.order_status !== prevState.order_status) {\n        this.setState({ order_status: this.props.data.order_status })\n      }\n      if (this.props.data.price !== prevState.price) {\n        this.setState({ price: this.props.data.price })\n      }\n      if (this.props.data.img !== prevState.img) {\n        this.setState({ img: this.props.data.img })\n      }\n    }\n    if (this.props.data === null && prevProps.data !== null) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        \n        category: \"Son\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    if (this.addNew) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        category: \"Son\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    this.addNew = false\n  }\n\n  handleSubmit = obj => {\n    if (this.props.data !== null) {\n      obj._id = this.props.data._id\n      obj.usage = this.props.data.usage\n\n      this.props.updateData(obj)\n    } else {\n      this.addNew = true\n      this.props.addData(obj)\n    }\n    let params = Object.keys(this.props.dataParams).length\n      ? this.props.dataParams\n      : { page: 1, perPage: 4 }\n    //this.props.handleSidebar(false, true)\n    //this.props.getData(params)\n  }\n\n  render() {\n    let { show, handleSidebar, data } = this.props\n    \n    let { name, relation,category, order_status, price, popularity, img } = this.state\n    return (\n      <div\n        className={classnames(\"data-list-sidebar\", {\n          show: show\n        })}>\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\n          <h4>{data !== null ? \"UPDATE NOMINEE DETAILS\" : \"ADD NEW NOMINEE\"}</h4>\n          <X size={20} onClick={() => handleSidebar(false, true)} />\n        </div>\n        {/* {this.props.isLoading && <Spinner color=\"primary\" />}\n        {!this.props.isLoading && */}\n        <PerfectScrollbar\n          className=\"data-list-fields px-2 mt-3\"\n          options={{ wheelPropagation: false }}>\n          {this.props.thumbView && img.length ? (\n            <FormGroup className=\"text-center\">\n              <img className=\"img-fluid\" src={img} alt={name} />\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\n                <label\n                  className=\"btn btn-flat-primary\"\n                  htmlFor=\"update-image\"\n                  color=\"primary\">\n                  Upload Image\n                  <input\n                    type=\"file\"\n                    id=\"update-image\"\n                    hidden\n                    onChange={e =>\n                      this.setState({\n                        img: URL.createObjectURL(e.target.files[0])\n                      })\n                    }\n                  />\n                </label>\n                <Button\n                  color=\"flat-danger\"\n                  onClick={() => this.setState({ img: \"\" })}>\n                  Remove Image\n                </Button>\n              </div>\n            </FormGroup>\n          ) : null}\n          <FormGroup>\n            <Label for=\"data-name\">Name *</Label>\n            <Input\n              type=\"text\"\n              value={name}\n              placeholder=\"Nominee Name\"\n              onChange={e => this.setState({ name: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-category\">Relation *</Label>\n            <Input\n              type=\"select\"\n              id=\"data-category\"\n              value={relation}\n              onChange={e => this.setState({ relation: e.target.value, relation1: e.target.value })}>\n              <option>Son</option>\n              <option>Daughter</option>\n              <option>Husband</option>\n              <option>Wide</option>\n              <option>Son-in-law</option>\n              <option>Daughter-in-law</option>\n              <option>Cousin</option>\n              <option>Friend</option>\n              <option>Colluege</option>\n              <option>others</option>\n            </Input>\n          </FormGroup>\n          {relation === \"others\" && <FormGroup>\n            {/* <Label for=\"data-name\">Relation </Label> */}\n            <Input\n              type=\"text\"\n              value={this.state.relation1}\n              placeholder=\"Relation Name\"\n              onChange={e => this.setState({ relation1: e.target.value })}\n              id=\"data-name\"\n            />\n            </FormGroup>}\n            <FormGroup>\n            <Label for=\"data-name\">Email *</Label>\n            <Input\n              type=\"text\"\n              value={this.state.email}\n              placeholder=\"Enter nominee email\"\n              onChange={e => this.setState({ email: e.target.value })}\n              id=\"data-name\"\n            />\n            </FormGroup>\n            <FormGroup>\n            <Label for=\"data-price\">Contact No *</Label>\n            <Input\n              type=\"number\"\n              value={this.state.contact1}\n              onChange={e => this.setState({ contact1: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"Enter primary contact No\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-price\">Secondary Contact No</Label>\n            <Input\n              type=\"number\"\n              value={this.state.contact2}\n              onChange={e => this.setState({ contact2: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"Enter secondry contact No\"\n            />\n          </FormGroup>\n            <FormGroup>\n            <Label for=\"data-name\">Address *</Label>\n            <Input\n              type=\"textarea\"\n              value={this.state.address}\n              placeholder=\"Adress\"\n              onChange={e => this.setState({ address: e.target.value })}\n              id=\"data-name\"\n            />\n            </FormGroup>\n          {/* <FormGroup>\n            <Label for=\"data-popularity\">Popularity</Label>\n            <Input\n              type=\"number\"\n              value={popularity.popValue}\n              id=\"data-popularity\"\n              placeholder=\"0 - 100%\"\n              onChange={e =>\n                this.setState({\n                  popularity: { popularity, popValue: e.target.value }\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-status\">Order Status</Label>\n            <Input\n              type=\"select\"\n              id=\"data-status\"\n              value={order_status}\n              onChange={e => this.setState({ order_status: e.target.value })}>\n              <option>pending</option>\n              <option>canceled</option>\n              <option>delivered</option>\n              <option>on hold</option>\n            </Input>\n          </FormGroup> */}\n          \n          {this.props.thumbView && img.length <= 0 ? (\n            <label\n              className=\"btn btn-primary\"\n              htmlFor=\"upload-image\"\n              color=\"primary\">\n              Upload Image\n              <input\n                type=\"file\"\n                id=\"upload-image\"\n                hidden\n                onChange={e =>\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\n                }\n              />\n            </label>\n          ) : null}\n        </PerfectScrollbar>\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\n          {this.props.isLoading && <Spinner color=\"danger\" size=\"sm\"/>} {data !== null ? (this.props.isLoading ? \"Updating...\" : \"Update\") : (this.props.isLoading ? \"Adding...\" : \"Add\")} \n          </Button>\n          <Button\n            className=\"ml-1\"\n            color=\"danger\"\n            outline\n            onClick={() => handleSidebar(false, true)}>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\nexport default DataListSidebar\n","import React, { Component } from \"react\"\nimport {\n  Button,\n  Progress,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input\n} from \"reactstrap\"\nimport { toast } from \"react-toastify\"\nimport DataTable from \"react-data-table-component\"\nimport classnames from \"classnames\"\nimport ReactPaginate from \"react-paginate\"\nimport { history } from \"../../history\"\nimport { ToastContainer } from \"react-toastify\"\nimport {\n  Edit,\n  Trash,\n  ChevronDown,\n  Plus,\n  Check,\n  ChevronLeft,\n  ChevronRight\n} from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport {\n  getData,\n  getInitialData,\n  deleteData,\n  updateData,\n  addData,\n  filterData\n} from \"../../redux/actions/data-list/\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"../../assets/scss/plugins/extensions/toastr.scss\"\nimport Sidebar from \"./DataListSidebar\"\nimport axios from \"axios\";\nimport Chip from \"../../components/@vuexy/chips/ChipComponent\"\nimport Checkbox from \"../../components/@vuexy/checkbox/CheckboxesVuexy\"\n\nimport \"../../assets/scss/plugins/extensions/react-paginate.scss\"\nimport \"../../assets/scss/pages/data-list.scss\"\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\n\nconst chipColors = {\n  \"on hold\": \"warning\",\n  delivered: \"success\",\n  pending: \"primary\",\n  canceled: \"danger\"\n}\n\nconst selectedStyle = {\n  rows: {\n    selectedHighlighStyle: {\n      backgroundColor: \"rgba(115,103,240,.05)\",\n      color: \"#7367F0 !important\",\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\n      \"&:hover\": {\n        transform: \"translateY(0px) !important\"\n      }\n    }\n  }\n}\n\nconst ActionsComponent = props => {\n  return (\n    <div className=\"data-list-action\">\n      <Edit\n        className=\"cursor-pointer mr-1\"\n        size={20}\n        onClick={() => {\n          return props.currentData(props.row)\n        }}\n      />\n      <Trash\n        className=\"cursor-pointer\"\n        size={20}\n        onClick={() => {\n          props.deleteRow(props.row)\n        }}\n      />\n    </div>\n  )\n}\n\nconst CustomHeader = props => {\n  return (\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\n      <div className=\"actions-left d-flex flex-wrap\">\n        <UncontrolledDropdown className=\"data-list-dropdown mr-1\">\n          <DropdownToggle className=\"p-1\" color=\"primary\">\n            <span className=\"align-middle mr-1\">Actions</span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\n            <DropdownItem tag=\"a\">Print</DropdownItem>\n            <DropdownItem tag=\"a\">Export</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <Button\n          className=\"add-new-btn\"\n          color=\"primary\"\n          onClick={() => props.handleSidebar(true, true)}\n          outline>\n          <Plus size={15} />\n          <span className=\"align-middle\">Add New Nominee</span>\n        </Button>\n      </div>\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\n            <span className=\"align-middle mx-50\">\n              {`${props.index[0]} - ${props.index[1]} of ${props.total}`}\n            </span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\n              4\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\n              10\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\n              15\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\n              20\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <div className=\"filter-section\">\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass DataListConfig extends Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.dataList.data.length !== state.data.length ||\n      state.currentPage !== props.parsedFilter.page\n    ) {\n      return {\n        data: props.dataList.data,\n        allData: props.dataList.filteredData,\n        //totalPages: props.dataList.totalPages,\n        totalPages: props.dataList.data.length/5,\n        currentPage: parseInt(props.parsedFilter.page) - 1,\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\n        totalRecords: props.dataList.totalRecords,\n        sortIndex: props.dataList.sortIndex\n      }\n    }\n\n    // Return null if the state hasn't changed\n    return null\n  }\n\n  state = {\n    data: [],\n    totalPages: 0,\n    currentPage: 0,\n    columns: [\n      {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n        minWidth: \"200px\",\n        cell: row => (\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n            {row.name}\n          </p>\n        )\n      },\n      {\n        name: \"Relation\",\n        selector: \"relation\",\n        sortable: true\n      },\n      {\n        name: \"Email\",\n        minWidth: \"200px\",\n        selector: \"email\",\n        sortable: true,\n        // cell: row => (\n        //   <Progress\n        //     className=\"w-100 mb-0\"\n        //     color={row.popularity.color}\n        //     value={row.popularity.popValue}\n        //   />\n        //)\n      },\n      {\n        name: \"Contact\",\n        selector: \"primaryContact\",\n        minWidth: \"150px\",\n        sortable: true,\n        //cell: row => `$${row.price}`\n      },\n      {\n        name: \" \",\n        selector: \"usage\",\n        sortable: true,\n        cell: row => (\n          <Chip\n            className=\"m-0\"\n            color={row.usage === \"Unused\" ||  !row.usage ?  \"primary\" : \"success\"}\n            text={row.usage ? row.usage : \"Unused\"}\n          />\n        )\n      },\n      \n      {\n        name: \"Actions\",\n        sortable: true,\n        cell: row => (\n          <ActionsComponent\n            row={row}\n            getData={this.props.getData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        )\n      }\n    ],\n    allData: [],\n    value: \"\",\n    rowsPerPage: 4,\n    sidebar: false,\n    currentData: null,\n    selected: [],\n    totalRecords: 0,\n    sortIndex: [],\n    addNew: \"\",\n    isLoading: false\n  }\n\n  thumbView = this.props.thumbView\n\n  componentDidMount() {\n    this.props.getData(this.props.parsedFilter)\n    this.props.getInitialData()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.thumbView) {\n      this.thumbView = false\n      let columns = [\n        {\n          name: \"Image\",\n          selector: \"img\",\n          minWidth: \"220px\",\n          cell: row => <img src={row.img} height=\"100\" alt={row.name} />\n        },\n        {\n          name: \"Name\",\n          selector: \"name\",\n          sortable: true,\n          minWidth: \"250px\",\n          cell: row => (\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n              {row.name}\n            </p>\n          )\n        },\n        {\n          name: \"Category\",\n          selector: \"category\",\n          sortable: true\n        },\n        {\n          name: \"Popularity\",\n          selector: \"popularity\",\n          sortable: true,\n          cell: row => (\n            <Progress\n              className=\"w-100 mb-0\"\n              color={row.popularity.color}\n              value={row.popularity.popValue}\n            />\n          )\n        },\n        {\n          name: \"Order Status\",\n          selector: \"order_status\",\n          sortable: true,\n          cell: row => (\n            <Chip\n              className=\"m-0\"\n              color={chipColors[row.order_status]}\n              text={row.order_status}\n            />\n          )\n        },\n        {\n          name: \"Price\",\n          selector: \"price\",\n          sortable: true,\n          cell: row => `$${row.price}`\n        },\n        {\n          name: \"Actions\",\n          sortable: true,\n          cell: row => (\n            <ActionsComponent\n              row={row}\n              getData={this.props.getData}\n              parsedFilter={this.props.parsedFilter}\n              currentData={this.handleCurrentData}\n              deleteRow={this.handleDelete}\n            />\n          )\n        }\n      ]\n      this.setState({ columns })\n    }\n  }\n\n  handleFilter = e => {\n    this.setState({ value: e.target.value })\n    this.props.filterData(e.target.value)\n  }\n\n  handleRowsPerPage = value => {\n    let { parsedFilter, getData } = this.props\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\n    history.push(`/nominee/list?page=${page}&perPage=${value}`)\n    this.setState({ rowsPerPage: value })\n    getData({ page: parsedFilter.page, perPage: value })\n  }\n\n  handleSidebar = (boolean, addNew = false) => {\n    this.setState({ sidebar: boolean })\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\n  }\n\n  handleDelete = row => {\n    this.props.deleteData(row)\n    this.props.getData(this.props.parsedFilter)\n    if (this.state.data.length - 1 === 0) {\n      let urlPrefix = this.props.thumbView\n        ? \"/data-list/thumb-view/\"\n        : \"/nominee/list/\"\n      history.push(\n        `${urlPrefix}list-view?page=${parseInt(\n          this.props.parsedFilter.page - 1\n        )}&perPage=${this.props.parsedFilter.perPage}`\n      )\n      this.props.getData({\n        page: this.props.parsedFilter.page - 1,\n        perPage: this.props.parsedFilter.perPage\n      })\n    }\n  }\n//  addData = async (obj) => {\n  addData = (obj) => {\n    if(obj.name === \"\" || obj.relation1 === \"\" ||obj.email === \"\" ||obj.contact1 === \"\" || obj.address === \"\" ) {\n      toast.error(\"Please Fill All Mandatory Details\");\n    } else {\n    this.setState({isLoading: true})\n    console.log('aaquib', obj)\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {}    \n    const nominee = {\n    userId: userData._id,\n    name: obj.name,\n    relation: obj.relation1,\n    email: obj.email,\n    primaryContact: obj.contact1,\n    secondaryContact: obj.contact2,\n    address: obj.address,\n    usage: \"Unused\"\n    }\n    axios\n      .post(\"/backendapi/nominee/add\",nominee)\n      .then(res => {\n        this.setState({isLoading: false});\n        toast.success(\"Nominee Added Successfully\");\n        this.handleSidebar(false,true);\n        \n        this.props.getData(this.props.parsedFilter)\n        \n      }).catch(e=>{\n        this.setState({isLoading: false});\n        toast.error(\"Add Nominee Failed! Please contact admin\");\n      })\n\n    console.log('aaquib', nominee);}\n\n  }\n  updateData = obj => {\n    if(obj.name === \"\" || obj.relation1 === \"\" ||obj.email === \"\" ||obj.contact1 === \"\" || obj.address === \"\" ) {\n      toast.error(\"Please Fill All Mandatory Details\");\n    } else {\n    this.setState({isLoading: true})\n    console.log('aaquib', obj)\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {}    \n    const nominee = {\n    _id: obj._id,\n    usage: obj.usage ? obj.usage : \"Unused\",\n    userId: userData._id,\n    name: obj.name,\n    relation: obj.relation1,\n    email: obj.email,\n    primaryContact: obj.contact1,\n    secondaryContact: obj.contact2,\n    address: obj.address,\n    }\n    axios\n      .post(\"/backendapi/nominee/update\",nominee)\n      .then(res => {\n        this.setState({isLoading: false});\n        toast.success(\"Nominee Updated Successfully\");\n        this.handleSidebar(false,true);\n        \n        this.props.getData(this.props.parsedFilter)\n        \n      }).catch(e=>{\n        this.setState({isLoading: false});\n        toast.error(\"Add Nominee Failed! Please contact admin\");\n      })\n\n    console.log('aaquib', nominee);}\n  }\n  handleCurrentData = obj => {\n    this.setState({ currentData: obj })\n    this.handleSidebar(true)\n  }\n\n  handlePagination = page => {\n    let { parsedFilter, getData } = this.props\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\n    let urlPrefix = this.props.thumbView\n      ? \"/nominee/list/\"\n      : \"/nominee/list/\"\n    history.push(\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\n    )\n    getData({ page: page.selected + 1, perPage: perPage })\n    this.setState({ currentPage: page.selected })\n  }\n\n  render() {\n    let {\n      columns,\n      data,\n      allData,\n      totalPages,\n      value,\n      rowsPerPage,\n      currentData,\n      sidebar,\n      totalRecords,\n      sortIndex\n    } = this.state\n    return (\n      <div\n        className={`data-list ${\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\n        }`}>\n        <DataTable\n          columns={columns}\n          data={value.length ? allData : data}\n          pagination\n          paginationServer\n          paginationComponent={() => (\n            <ReactPaginate\n              previousLabel={<ChevronLeft size={15} />}\n              nextLabel={<ChevronRight size={15} />}\n              breakLabel=\"...\"\n              breakClassName=\"break-me\"\n              pageCount={totalPages}\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\n              activeClassName=\"active\"\n              forcePage={\n                this.props.parsedFilter.page\n                  ? parseInt(this.props.parsedFilter.page - 1)\n                  : 0\n              }\n              onPageChange={page => this.handlePagination(page)}\n            />\n          )}\n          noHeader\n          subHeader\n          selectableRows\n          responsive\n          pointerOnHover\n          selectableRowsHighlight\n          onSelectedRowsChange={data =>\n            this.setState({ selected: data.selectedRows })\n          }\n          customStyles={selectedStyle}\n          subHeaderComponent={\n            <CustomHeader\n              handleSidebar={this.handleSidebar}\n              handleFilter={this.handleFilter}\n              handleRowsPerPage={this.handleRowsPerPage}\n              rowsPerPage={rowsPerPage}\n              total={totalRecords}\n              index={sortIndex}\n            />\n          }\n          sortIcon={<ChevronDown />}\n          selectableRowsComponent={Checkbox}\n          selectableRowsComponentProps={{\n            color: \"primary\",\n            icon: <Check className=\"vx-icon\" size={12} />,\n            label: \"\",\n            size: \"sm\"\n          }}\n        />\n        <Sidebar\n          show={sidebar}\n          data={currentData}\n          updateData={this.updateData}\n          addData={this.addData}\n          isLoading={this.state.isLoading}\n          handleSidebar={this.handleSidebar}\n          thumbView={this.props.thumbView}\n          getData={this.props.getData}\n          dataParams={this.props.parsedFilter}\n          addNew={this.state.addNew}\n        />\n        <div\n          className={classnames(\"data-list-overlay\", {\n            show: sidebar\n          })}\n          onClick={() => this.handleSidebar(false, true)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state.dataList\n  }\n}\n\nexport default connect(mapStateToProps, {\n  getData,\n  deleteData,\n  updateData,\n  addData,\n  getInitialData,\n  filterData\n})(DataListConfig)\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\"\nimport NomineeListConfig from \"./NomineeListConfig\"\nimport queryString from \"query-string\"\nimport { ToastContainer } from \"react-toastify\"\nclass NomineeList extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Manage Nominees\"\n          breadCrumbParent=\"Nominee\"\n          breadCrumbActive=\"List\"\n        />\n        <Row>\n          \n        <ToastContainer />\n          <Col sm=\"12\">\n            <NomineeListConfig parsedFilter={queryString.parse(this.props.location.search)}/>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default NomineeList\n","import React from \"react\"\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : \"\"\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : \"md\"\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import React from \"react\"\nimport { X } from \"react-feather\"\nclass Chip extends React.Component {\n  closeChip = e => {\n    e.target.closest(\".chip\").remove()\n  }\n\n  render() {\n    return (\n      <div\n        className={`chip ${this.props.className} ${\n          this.props.color ? `chip-${this.props.color}` : null\n        }`}\n      >\n        <div className=\"chip-body\">\n          {(!this.props.avatarImg && this.props.avatarText) ||\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\n            <div\n              className={`avatar ${\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\n              }`}\n            >\n              <div className=\"avatar-content\">\n                {this.props.avatarText ? this.props.avatarText : null}\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\n              </div>\n            </div>\n          ) : this.props.avatarImg ? (\n            <div className=\"avatar\">\n              <img\n                src={this.props.avatarImg}\n                alt=\"chipImg\"\n                height=\"20\"\n                width=\"20\"\n              />\n            </div>\n          ) : null}\n          <div className=\"chip-text\">{this.props.text}</div>\n          {this.props.closable ? (\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Chip\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import axios from \"axios\"\naxios.defaults.baseURL = \"https://lastarzi2.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\nexport const getData = params => {\n  return async dispatch => {\n    let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n    await axios.get(\"/backendapi/nominee/list/\"+userData._id, params).then(response => {\n      console.log('aaquib  123', response.data);\n      console.log('aaquib  123',params);\n      dispatch({\n        type: \"GET_DATA\",\n        data: response.data,\n        totalPages: response.length,\n        params\n      })\n    })\n  }\n}\n\nexport const getInitialData = () => {\n  let userData = localStorage.getItem('logInUserData') ? JSON.parse(localStorage.getItem('logInUserData')) : {} \n  return async dispatch => {\n    await axios.get(\"/backendapi/nominee/list/\"+userData._id).then(response => {\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\n    })\n  }\n}\n\nexport const filterData = value => {\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\n}\n\nexport const deleteData = obj => {\n  return dispatch => {\n    axios\n      .post(\"/api/datalist/delete-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"DELETE_DATA\", obj })\n      })\n  }\n}\n\nexport const updateData = obj => {\n  console.log('Aaquib 123', obj);\n  return (dispatch, getState) => {\n    axios\n      .post(\"/api/datalist/update-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"UPDATE_DATA\", obj })\n      })\n  }\n}\n\nexport const addData = obj => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post(\"/api/datalist/add-data\", {\n        obj\n      })\n      .then(response => {\n        dispatch({ type: \"ADD_DATA\", obj })\n        dispatch(getData(params))\n      })\n  }\n}\n"],"sourceRoot":""}