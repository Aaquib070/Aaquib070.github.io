{"version":3,"sources":["redux/actions/data-list/index.js","components/@vuexy/chips/ChipComponent.js","views/Nominee/DataListSidebar.js","views/Nominee/NomineeListConfig.js","views/Nominee/NomineeList.js"],"names":["axios","defaults","baseURL","decryptDiary","response","data","spendId","decryptdata","item","label","amount","desc","getData","params","dispatch","a","userData","localStorage","getItem","JSON","parse","get","_id","headers","Authorization","then","console","log","nomineeId","name","relation","email","primaryContact","secondaryContact","address","type","totalPages","length","getSpendData","getInitialData","getSpendInitialData","filterData","value","deleteData","obj","post","updateData","getState","addData","dataList","Chip","closeChip","e","target","closest","remove","className","this","props","color","avatarImg","avatarText","avatarIcon","avatarColor","src","alt","height","width","text","closable","onClick","closableIcon","React","Component","DataListSidebar","state","isLoading","relation1","contact1","contact2","id","addNew","handleSubmit","usage","Object","keys","dataParams","page","perPage","nullData","setState","prevProps","prevState","show","handleSidebar","img","classnames","style","size","options","wheelPropagation","FormGroup","Input","placeholder","onChange","Label","themeConfig","theme","for","thumbView","htmlFor","hidden","URL","createObjectURL","files","Button","Ripple","outline","Spinner","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","DeleteComponent","window","screen","deleteRow","row","ActionsComponent","currentData","EditComponent","CustomHeader","fontWeight","borderRadius","fontSize","handleFilter","total","DataListConfig","currentPage","columns","sortable","cell","parsedFilter","handleCurrentData","selector","minWidth","title","handleDelete","mobilecolumns","maxWidth","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","dataLoading","handleRowsPerPage","undefined","history","push","boolean","urlPrefix","parseInt","toast","error","nominee","userId","encryptdata","res","success","catch","handlePagination","Progress","popularity","popValue","order_status","price","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","index","sortIcon","filteredData","connect","NomineeList","Fragment","Row","Col","sm","NomineeListConfig","queryString","location","search"],"mappings":"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","file":"static/js/19.b77fe0f4.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { decryptdata } from '../../../utility/context/SecurityTool'\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nconst decryptDiary = (response) => {\r\n  for (let data of response?.data) {\r\n    if (data?.spendId) {\r\n      data.spendId = decryptdata(data?.spendId)\r\n    }\r\n    // if (data?._id) {\r\n    //   data._id = decryptdata(data?._id)\r\n    // }\r\n    // if (data?.userId) {\r\n    //   data.userId = decryptdata(data?.userId)\r\n    // }\r\n    if (data?.item) {\r\n      data.item = decryptdata(data?.item)\r\n    }\r\n    if (data?.label) {\r\n      data.label = decryptdata(data?.label)\r\n    }\r\n    if (data?.amount) {\r\n      data.amount = decryptdata(data?.amount)\r\n    }\r\n    if (data?.desc) {\r\n      data.desc = decryptdata(data?.desc)\r\n    }\r\n  }\r\n  return response\r\n}\r\n\r\nexport const getData = (params) => {\r\n  return async (dispatch) => {\r\n    let userData = localStorage.getItem('logInUserData')\r\n      ? JSON.parse(localStorage.getItem('logInUserData'))\r\n      : {}\r\n    await axios\r\n      .get('/backendapi/nominee/list/' + userData._id, {\r\n        params,\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log('aaquib  123', response.data)\r\n        console.log('aaquib  123', params)\r\n        for (let data of response?.data) {\r\n          data.nomineeId = data?.nomineeId && decryptdata(data.nomineeId, true)\r\n          // data._id = data?._id && decryptdata(data._id,true)\r\n          // data.userId = data?.userId && decryptdata(data.userId,true)\r\n          data.name = data?.name && decryptdata(data.name, true)\r\n          data.relation = data?.relation && decryptdata(data.relation, true)\r\n          data.email = data?.email && decryptdata(data.email, true)\r\n          data.primaryContact =\r\n            data?.primaryContact && decryptdata(data.primaryContact, true)\r\n          data.secondaryContact =\r\n            data?.secondaryContact && decryptdata(data.secondaryContact, true)\r\n          data.address = data?.address && decryptdata(data.address, true)\r\n        }\r\n        dispatch({\r\n          type: 'GET_DATA',\r\n          data: response.data,\r\n          totalPages: response.length,\r\n          params\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getSpendData = (params) => {\r\n  return async (dispatch) => {\r\n    let userData = localStorage.getItem('logInUserData')\r\n      ? JSON.parse(localStorage.getItem('logInUserData'))\r\n      : {}\r\n    await axios\r\n      .get('/backendapi/spend/list/' + userData._id, {\r\n        params,\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        console.log('aaquib  123', response.data)\r\n        console.log('aaquib  123', params)\r\n        dispatch({\r\n          type: 'GET_DATA',\r\n          data: decryptDiary(response)?.data,\r\n          totalPages: response.length,\r\n          params\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  let userData = localStorage.getItem('logInUserData')\r\n    ? JSON.parse(localStorage.getItem('logInUserData'))\r\n    : {}\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get('/backendapi/nominee/list/' + userData._id, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        dispatch({ type: 'GET_ALL_DATA', data: response.data })\r\n      })\r\n  }\r\n}\r\n\r\nexport const getSpendInitialData = () => {\r\n  let userData = localStorage.getItem('logInUserData')\r\n    ? JSON.parse(localStorage.getItem('logInUserData'))\r\n    : {}\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get('/backendapi/spend/list/' + userData._id, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        dispatch({ type: 'GET_ALL_DATA', data: decryptDiary(response)?.data })\r\n      })\r\n  }\r\n}\r\n\r\nexport const filterData = (value) => {\r\n  return (dispatch) => dispatch({ type: 'FILTER_DATA', value })\r\n}\r\n\r\nexport const deleteData = (obj) => {\r\n  return (dispatch) => {\r\n    console.log('DELETE DATA :', obj)\r\n    axios\r\n      .post('/backendapi/nominee/delete', obj, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((response) => {\r\n        dispatch({ type: 'DELETE_DATA', obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateData = (obj) => {\r\n  console.log('Aaquib 123', obj)\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .post(\r\n        '/api/datalist/update-data',\r\n        {\r\n          obj\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n          }\r\n        }\r\n      )\r\n      .then((response) => {\r\n        dispatch({ type: 'UPDATE_DATA', obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const addData = (obj) => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().dataList.params\r\n    axios\r\n      .post(\r\n        '/api/datalist/add-data',\r\n        {\r\n          obj\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n          }\r\n        }\r\n      )\r\n      .then((response) => {\r\n        dispatch({ type: 'ADD_DATA', obj })\r\n        dispatch(getData(params))\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { X } from 'react-feather'\r\nclass Chip extends React.Component {\r\n  closeChip = (e) => {\r\n    e.target.closest('.chip').remove()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`chip ${this.props.className} ${\r\n          this.props.color ? `chip-${this.props.color}` : null\r\n        }`}\r\n      >\r\n        <div className=\"chip-body\">\r\n          {(!this.props.avatarImg && this.props.avatarText) ||\r\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\r\n            <div\r\n              className={`avatar ${\r\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\r\n              }`}\r\n            >\r\n              <div className=\"avatar-content\">\r\n                {this.props.avatarText ? this.props.avatarText : null}\r\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\r\n              </div>\r\n            </div>\r\n          ) : this.props.avatarImg ? (\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={this.props.avatarImg}\r\n                alt=\"chipImg\"\r\n                height=\"20\"\r\n                width=\"20\"\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"chip-text\">{this.props.text}</div>\r\n          {this.props.closable ? (\r\n            <div className=\"chip-closable\" onClick={(e) => this.closeChip(e)}>\r\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chip\r\n","import React, { Component } from 'react'\r\nimport { Label, Input, FormGroup, Button } from 'reactstrap'\r\nimport { X } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { Spinner } from 'reactstrap'\r\nimport classnames from 'classnames'\r\nimport themeConfig from '../../configs/themeConfig'\r\n\r\nclass DataListSidebar extends Component {\r\n  state = {\r\n    //isLoading: props.isLoading,\r\n    isLoading: this.props.isLoading,\r\n    relation: 'Son',\r\n    relation1: '',\r\n    email: '',\r\n    address: '',\r\n    contact1: '',\r\n    contact2: '',\r\n    id: '',\r\n    name: ''\r\n  }\r\n\r\n  addNew = false\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log('ADD NEW NOMINEE', this.props.isLoading)\r\n    if (this.props.data !== null && prevProps.data === null) {\r\n      if (this.props.data.id !== prevState.id) {\r\n        this.setState({ id: this.props.data.id })\r\n      }\r\n      if (this.props.data.name !== prevState.name) {\r\n        this.setState({ name: this.props.data.name })\r\n      }\r\n      if (this.props.data.relation !== prevState.relation) {\r\n        this.setState({ relation: this.props.data.relation })\r\n      }\r\n      if (this.props.data.relation !== prevState.relation1) {\r\n        this.setState({ relation1: this.props.data.relation })\r\n      }\r\n      if (this.props.data.address !== prevState.address) {\r\n        this.setState({ address: this.props.data.address })\r\n      }\r\n      if (this.props.data.email !== prevState.email) {\r\n        this.setState({ email: this.props.data.email })\r\n      }\r\n      if (this.props.data.primaryContact !== prevState.contact1) {\r\n        this.setState({ contact1: this.props.data.primaryContact })\r\n      }\r\n      if (this.props.data.secondaryContact !== prevState.contact2) {\r\n        this.setState({ contact2: this.props.data.secondaryContact })\r\n      }\r\n    }\r\n    if (this.props.data === null && prevProps.data !== null) {\r\n      this.setState({\r\n        id: '',\r\n        name: '',\r\n        relation: '',\r\n        relation1: '',\r\n        email: '',\r\n        address: '',\r\n        contact1: '',\r\n        contact2: ''\r\n      })\r\n    }\r\n    if (this.addNew) {\r\n      this.setState({\r\n        id: '',\r\n        name: '',\r\n        relation: '',\r\n        relation1: '',\r\n        email: '',\r\n        address: '',\r\n        contact1: '',\r\n        contact2: ''\r\n      })\r\n    }\r\n    this.addNew = false\r\n  }\r\n\r\n  handleSubmit = (obj) => {\r\n    if (this.props.data !== null) {\r\n      obj._id = this.props.data._id\r\n      obj.usage = this.props.data.usage\r\n\r\n      this.props.updateData(obj)\r\n    } else {\r\n      this.addNew = true\r\n      this.props.addData(obj)\r\n    }\r\n    let params = Object.keys(this.props.dataParams).length\r\n      ? this.props.dataParams\r\n      : { page: 1, perPage: 4 }\r\n    //this.props.handleSidebar(false, true)\r\n    this.props.getData(params)\r\n  }\r\n\r\n  nullData = () => {\r\n    this.setState({\r\n      name: '',\r\n      relation: '',\r\n      relation1: '',\r\n      email: '',\r\n      address: '',\r\n      contact1: '',\r\n      contact2: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { show, handleSidebar, data } = this.props\r\n\r\n    let { name, relation, img } = this.state\r\n    return (\r\n      <div\r\n        className={classnames('data-list-sidebar', {\r\n          show: show\r\n        })}\r\n      >\r\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\r\n          <h4 style={{ color: 'var(--warning)' }}>\r\n            {data !== null ? 'UPDATE NOMINEE DETAILS' : 'ADD NEW NOMINEE'}\r\n          </h4>\r\n          <X\r\n            size={20}\r\n            onClick={() => {\r\n              handleSidebar(false, true)\r\n              this.nullData()\r\n            }}\r\n          />\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"data-list-fields px-2 pt-2\"\r\n          options={{ wheelPropagation: false }}\r\n        >\r\n          <FormGroup className=\"form-label-group mb-2\">\r\n            <Input\r\n              className=\"input-label\"\r\n              type=\"text\"\r\n              value={name}\r\n              placeholder=\"Nominee Name\"\r\n              onChange={(e) => this.setState({ name: e.target.value })}\r\n              id=\"data-name\"\r\n            />\r\n            <Label\r\n              className={\r\n                themeConfig.theme === 'dark' ? 'dark-label' : 'light-label'\r\n              }\r\n              for=\"data-name\"\r\n            >\r\n              Name *\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"select\"\r\n              id=\"data-category\"\r\n              value={relation}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  relation: e.target.value\r\n                })\r\n              }\r\n            >\r\n              <option>Son</option>\r\n              <option>Daughter</option>\r\n              <option>Husband</option>\r\n              <option>Wife</option>\r\n              <option>Son-in-law</option>\r\n              <option>Daughter-in-law</option>\r\n              <option>Cousin</option>\r\n              <option>Friend</option>\r\n              <option>Colluege</option>\r\n              <option>others</option>\r\n            </Input>\r\n            <Label\r\n              className={\r\n                themeConfig.theme === 'dark'\r\n                  ? 'dark-label select-label'\r\n                  : 'light-label select-label'\r\n              }\r\n              for=\"data-category\"\r\n            >\r\n              Relation *\r\n            </Label>\r\n          </FormGroup>\r\n          {relation === 'others' && (\r\n            <FormGroup className=\"form-label-group mb-2\">\r\n              {/* <Label for=\"data-name\">Relation </Label> */}\r\n              <Input\r\n                type=\"text\"\r\n                value={this.state.relation1}\r\n                placeholder=\"Relation Name\"\r\n                onChange={(e) => this.setState({ relation1: e.target.value })}\r\n                id=\"data-name\"\r\n              />\r\n            </FormGroup>\r\n          )}\r\n          <FormGroup className=\"form-label-group mb-2\">\r\n            <Input\r\n              className=\"input-label\"\r\n              type=\"text\"\r\n              value={this.state.email}\r\n              placeholder=\"Enter nominee email\"\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n              id=\"data-name\"\r\n            />\r\n            <Label\r\n              className={\r\n                themeConfig.theme === 'dark' ? 'dark-label' : 'light-label'\r\n              }\r\n              for=\"data-name\"\r\n            >\r\n              Email *\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup className=\"form-label-group mb-2\">\r\n            <Input\r\n              className=\"input-label\"\r\n              type=\"number\"\r\n              value={this.state.contact1}\r\n              onChange={(e) => this.setState({ contact1: e.target.value })}\r\n              id=\"data-price\"\r\n              placeholder=\"Enter primary contact No\"\r\n            />\r\n            <Label\r\n              className={\r\n                themeConfig.theme === 'dark' ? 'dark-label' : 'light-label'\r\n              }\r\n              for=\"data-price\"\r\n            >\r\n              Contact No *\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup className=\"form-label-group mb-2\">\r\n            <Input\r\n              className=\"input-label\"\r\n              type=\"number\"\r\n              value={this.state.contact2}\r\n              onChange={(e) => this.setState({ contact2: e.target.value })}\r\n              id=\"data-price\"\r\n              placeholder=\"Enter secondry contact No\"\r\n            />\r\n            <Label\r\n              className={\r\n                themeConfig.theme === 'dark' ? 'dark-label' : 'light-label'\r\n              }\r\n              for=\"data-price\"\r\n            >\r\n              Secondary Contact No\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup className=\"form-label-group mb-2\">\r\n            <Input\r\n              className=\"input-label\"\r\n              type=\"textarea\"\r\n              value={this.state.address}\r\n              placeholder=\"Address\"\r\n              onChange={(e) => this.setState({ address: e.target.value })}\r\n              id=\"data-name\"\r\n            />\r\n            <Label\r\n              className={\r\n                themeConfig.theme === 'dark' ? 'dark-label' : 'light-label'\r\n              }\r\n              for=\"data-name\"\r\n            >\r\n              Address *\r\n            </Label>\r\n          </FormGroup>\r\n\r\n          {this.props.thumbView && img.length <= 0 ? (\r\n            <label\r\n              className=\"btn btn-primary\"\r\n              htmlFor=\"upload-image\"\r\n              color=\"primary\"\r\n            >\r\n              Upload Image\r\n              <input\r\n                type=\"file\"\r\n                id=\"upload-image\"\r\n                hidden\r\n                onChange={(e) =>\r\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\r\n                }\r\n              />\r\n            </label>\r\n          ) : null}\r\n        </PerfectScrollbar>\r\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\r\n          <Button.Ripple\r\n            // className=\"ml-1\"\r\n            className=\"button-label\"\r\n            color=\"secondary\"\r\n            outline\r\n            onClick={() => {\r\n              // handleSidebar(false, true)\r\n              this.nullData()\r\n            }}\r\n          >\r\n            Reset\r\n          </Button.Ripple>\r\n          <Button.Ripple\r\n            color=\"warning\"\r\n            type=\"reset\"\r\n            className=\"button-label\"\r\n            onClick={() => this.handleSubmit(this.state)}\r\n          >\r\n            {this.props.isLoading && <Spinner color=\"danger\" size=\"sm\" />}\r\n            {data !== null\r\n              ? this.props.isLoading\r\n                ? 'Updating...'\r\n                : 'Update'\r\n              : this.props.isLoading\r\n              ? 'Adding...'\r\n              : 'Add'}\r\n          </Button.Ripple>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default DataListSidebar\r\n","import React, { Component } from 'react'\r\nimport { Progress, Button, Input } from 'reactstrap'\r\nimport { toast } from 'react-toastify'\r\nimport DataTable from 'react-data-table-component'\r\nimport classnames from 'classnames'\r\nimport { history } from '../../history'\r\nimport { encryptdata } from '../../utility/context/SecurityTool'\r\nimport { Edit, Info, Trash, ChevronDown } from 'react-feather'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getData,\r\n  getInitialData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  filterData\r\n} from '../../redux/actions/data-list/'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport '../../assets/scss/plugins/extensions/toastr.scss'\r\nimport Sidebar from './DataListSidebar'\r\nimport axios from 'axios'\r\nimport Chip from '../../components/@vuexy/chips/ChipComponent'\r\n\r\nimport '../../assets/scss/plugins/extensions/react-paginate.scss'\r\nimport '../../assets/scss/pages/data-list.scss'\r\nimport '../../assets/scss/components/app-loader.scss'\r\n\r\naxios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\r\n//axios.defaults.baseURL = \"http://localhost:5000\";\r\n\r\nconst chipColors = {\r\n  'on hold': 'warning',\r\n  delivered: 'success',\r\n  pending: 'primary',\r\n  canceled: 'danger'\r\n}\r\n\r\nconst selectedStyle = {\r\n  rows: {\r\n    selectedHighlighStyle: {\r\n      backgroundColor: 'rgba(115,103,240,.05)',\r\n      color: '#7367F0 !important',\r\n      boxShadow: '0 0 1px 0 #7367F0 !important',\r\n      '&:hover': {\r\n        transform: 'translateY(0px) !important'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst DeleteComponent = (props) => {\r\n  return (\r\n    <div className=\"data-list-action\">\r\n      <Trash\r\n        className=\"cursor-pointer\"\r\n        size={window.screen.width < 600 ? 13 : 20}\r\n        onClick={() => {\r\n          props.deleteRow(props.row)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ActionsComponent = (props) => {\r\n  return (\r\n    <div className=\"data-list-action\">\r\n      <Edit\r\n        className=\"cursor-pointer mr-1\"\r\n        size={window.screen.width < 600 ? 13 : 20}\r\n        onClick={() => {\r\n          return props.currentData(props.row)\r\n        }}\r\n      />\r\n      {window.screen.width > 600 && (\r\n        <Trash\r\n          className=\"cursor-pointer\"\r\n          size={window.screen.width < 600 ? 13 : 20}\r\n          onClick={() => {\r\n            props.deleteRow(props.row)\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst EditComponent = (props) => {\r\n  return (\r\n    <div className=\"data-list-action\">\r\n      {window.screen.width > 600 ? (\r\n        <Edit\r\n          className=\"cursor-pointer mr-1\"\r\n          size=\"13\"\r\n          onClick={() => {\r\n            return props.currentData(props.row)\r\n          }}\r\n        />\r\n      ) : (\r\n        <Info\r\n          className=\"cursor-pointer mr-1\"\r\n          size=\"20\"\r\n          onClick={() => {\r\n            return props.currentData(props.row)\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CustomHeader = (props) => {\r\n  return (\r\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\r\n      <div className=\"actions-left d-flex\">\r\n        <Button.Ripple\r\n          color=\"white\"\r\n          className=\"sort-dropdown mx-50\"\r\n          style={{\r\n            height: '75%',\r\n            backgroundColor: 'var(--warning)',\r\n            fontWeight: 'bold'\r\n          }}\r\n          outline\r\n          onClick={() => props.handleSidebar(true, true)}\r\n        >\r\n          {/* <Plus size={15} /> */}\r\n          <span className=\"align-middle\">Add</span>\r\n        </Button.Ripple>\r\n      </div>\r\n      <div className=\"actions-right d-flex flex-wrap\">\r\n        <div className=\"filter-section\">\r\n          <Input\r\n            type=\"text\"\r\n            style={{ height: '75%', borderRadius: '5rem', fontSize: '1rem' }}\r\n            onChange={(e) => props.handleFilter(e)}\r\n            placeholder=\"Find Nominee\"\r\n            className=\"placeholder\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"\">\r\n        <div className=\"data-list-rows-dropdown mr-1 d-none\">\r\n          <Button.Ripple\r\n            color=\"\"\r\n            className=\"sort-dropdown\"\r\n            style={{ height: '75%' }}\r\n          >\r\n            <span className=\"align-middle mx-50\">Count : {props.total}</span>\r\n          </Button.Ripple>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass DataListConfig extends Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.dataList.data.length !== state.data.length ||\r\n      state.currentPage !== props.parsedFilter.page\r\n    ) {\r\n      return {\r\n        data: props.dataList.data,\r\n        allData: props.dataList.filteredData,\r\n        //totalPages: props.dataList.totalPages,\r\n        totalPages: props.dataList.data.length / 5,\r\n        currentPage: parseInt(props.parsedFilter.page) - 1,\r\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\r\n        totalRecords: props.dataList.totalRecords,\r\n        sortIndex: props.dataList.sortIndex,\r\n        dataLoading: false\r\n      }\r\n    }\r\n\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    data: [],\r\n    totalPages: 0,\r\n    currentPage: 0,\r\n    columns: [\r\n      {\r\n        name: '',\r\n        // name: 'Edit',\r\n        sortable: false,\r\n        width: '80px',\r\n        cell: (row) => (\r\n          <EditComponent\r\n            row={row}\r\n            getData={this.props.getData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: 'Name',\r\n        selector: 'name',\r\n        sortable: true,\r\n        minWidth: '200px',\r\n        cell: (row) => (\r\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n            {row.name}\r\n          </p>\r\n        )\r\n      },\r\n      {\r\n        name: 'Relation',\r\n        selector: 'relation',\r\n        sortable: true,\r\n        width: '170px'\r\n      },\r\n      {\r\n        name: 'Email',\r\n        minWidth: '200px',\r\n        selector: 'email',\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'Contact',\r\n        selector: 'primaryContact',\r\n        minWidth: '150px',\r\n        sortable: true\r\n      },\r\n      {\r\n        name: 'Status',\r\n        width: '120px',\r\n        selector: 'unused',\r\n        sortable: true,\r\n        cell: (row) => (\r\n          <Chip\r\n            className=\"m-0\"\r\n            color={row.usage === 'Unused' || !row.usage ? 'primary' : 'success'}\r\n            text={row.usage ? row.usage : 'Unused'}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: '',\r\n        // name: 'Delete',\r\n        sortable: false,\r\n        width: '110px',\r\n        cell: (row) => (\r\n          <DeleteComponent\r\n            row={row}\r\n            getData={this.props.getData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            deleteRow={this.handleDelete}\r\n          />\r\n        )\r\n      }\r\n    ],\r\n    mobilecolumns: [\r\n      {\r\n        name: 'Info',\r\n        sortable: true,\r\n        width: '50px',\r\n        cell: (row) => (\r\n          <EditComponent\r\n            row={row}\r\n            getData={this.props.getData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n            deleteRow={this.handleDelete}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: 'Name',\r\n        selector: 'name',\r\n        sortable: true,\r\n        minWidth: '50px',\r\n        cell: (row) => (\r\n          <p\r\n            style={{ fontSize: '10px' }}\r\n            title={row.name}\r\n            className=\"text-truncate text-bold-500 mb-0\"\r\n          >\r\n            {row.name}\r\n          </p>\r\n        )\r\n      },\r\n      {\r\n        name: 'Relation',\r\n        selector: 'relation',\r\n        maxWidth: '50px',\r\n        sortable: true,\r\n        cell: (row) => (\r\n          <p\r\n            style={{ fontSize: '10px' }}\r\n            title={row.relation}\r\n            className=\"text-truncate text-bold-500 mb-0\"\r\n          >\r\n            {row.relation}\r\n          </p>\r\n        )\r\n      },\r\n      {\r\n        name: 'Trash',\r\n        sortable: true,\r\n        width: '50px',\r\n        cell: (row) => (\r\n          <DeleteComponent\r\n            row={row}\r\n            getData={this.props.getData}\r\n            parsedFilter={this.props.parsedFilter}\r\n            currentData={this.handleCurrentData}\r\n            deleteRow={this.handleDelete}\r\n          />\r\n        )\r\n      }\r\n    ],\r\n    allData: [],\r\n    value: '',\r\n    rowsPerPage: 4,\r\n    sidebar: false,\r\n    currentData: null,\r\n    selected: [],\r\n    totalRecords: 0,\r\n    sortIndex: [],\r\n    addNew: '',\r\n    isLoading: false,\r\n    dataLoading: true\r\n  }\r\n\r\n  thumbView = this.props.thumbView\r\n\r\n  componentDidMount() {\r\n    this.props.getData(this.props.parsedFilter)\r\n    this.props.getInitialData()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.thumbView) {\r\n      this.thumbView = false\r\n      let columns = [\r\n        {\r\n          name: 'Image',\r\n          selector: 'img',\r\n          minWidth: '220px',\r\n          cell: (row) => <img src={row.img} height=\"100\" alt={row.name} />\r\n        },\r\n        {\r\n          name: 'Name',\r\n          selector: 'name',\r\n          sortable: true,\r\n          minWidth: '250px',\r\n          cell: (row) => (\r\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\r\n              {row.name}\r\n            </p>\r\n          )\r\n        },\r\n        {\r\n          name: 'Category',\r\n          selector: 'category',\r\n          sortable: true\r\n        },\r\n        {\r\n          name: 'Popularity',\r\n          selector: 'popularity',\r\n          sortable: true,\r\n          cell: (row) => (\r\n            <Progress\r\n              className=\"w-100 mb-0\"\r\n              color={row.popularity.color}\r\n              value={row.popularity.popValue}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'Order Status',\r\n          selector: 'order_status',\r\n          sortable: true,\r\n          cell: (row) => (\r\n            <Chip\r\n              className=\"m-0\"\r\n              color={chipColors[row.order_status]}\r\n              text={row.order_status}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'Price',\r\n          selector: 'price',\r\n          sortable: true,\r\n          cell: (row) => `$${row.price}`\r\n        },\r\n        {\r\n          name: 'Actions',\r\n          sortable: true,\r\n          cell: (row) => (\r\n            <ActionsComponent\r\n              row={row}\r\n              getData={this.props.getData}\r\n              parsedFilter={this.props.parsedFilter}\r\n              currentData={this.handleCurrentData}\r\n              deleteRow={this.handleDelete}\r\n            />\r\n          )\r\n        }\r\n      ]\r\n      this.setState({ columns })\r\n    }\r\n  }\r\n\r\n  handleFilter = (e) => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.filterData(e.target.value)\r\n  }\r\n\r\n  handleRowsPerPage = (value) => {\r\n    let { parsedFilter, getData } = this.props\r\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\r\n    history.push(`/nominee/list?page=${page}&perPage=${value}`)\r\n    this.setState({ rowsPerPage: value })\r\n    getData({ page: parsedFilter.page, perPage: value })\r\n  }\r\n\r\n  handleSidebar = (boolean, addNew = false) => {\r\n    this.setState({ sidebar: boolean })\r\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\r\n  }\r\n\r\n  handleDelete = (row) => {\r\n    this.props.deleteData(row)\r\n    this.props.getData(this.props.parsedFilter)\r\n    if (this.state.data.length - 1 === 0) {\r\n      let urlPrefix = this.props.thumbView\r\n        ? '/data-list/thumb-view/'\r\n        : '/#/nominee/list/'\r\n      history.push(\r\n        `${urlPrefix}list-view?page=${parseInt(\r\n          this.props.parsedFilter.page - 1\r\n        )}&perPage=${this.props.parsedFilter.perPage}`\r\n      )\r\n      this.props.getData({\r\n        page: this.props.parsedFilter.page - 1,\r\n        perPage: this.props.parsedFilter.perPage\r\n      })\r\n    }\r\n  }\r\n  addData = (obj) => {\r\n    if (\r\n      obj.name === '' ||\r\n      obj.relation === '' ||\r\n      obj.email === '' ||\r\n      obj.contact1 === '' ||\r\n      obj.address === ''\r\n    ) {\r\n      toast.error('Please Fill All Mandatory Details')\r\n    } else {\r\n      this.setState({ isLoading: true })\r\n      console.log('aaquib', obj)\r\n      let userData = localStorage.getItem('logInUserData')\r\n        ? JSON.parse(localStorage.getItem('logInUserData'))\r\n        : {}\r\n      const nominee = {\r\n        userId: userData._id,\r\n        name: encryptdata(obj.name, true),\r\n        relation: encryptdata(obj.relation, true),\r\n        email: encryptdata(obj.email, true),\r\n        primaryContact: encryptdata(obj.contact1, true),\r\n        secondaryContact: encryptdata(obj.contact2, true),\r\n        address: encryptdata(obj.address, true),\r\n        usage: 'Unused'\r\n      }\r\n      if (obj.relation === 'others' && obj.relation1)\r\n        nominee.relation = encryptdata(obj.relation1, true)\r\n      axios\r\n        .post('/backendapi/nominee/add', nominee, {\r\n          headers: {\r\n            Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n          }\r\n        })\r\n        .then((res) => {\r\n          this.setState({ isLoading: false })\r\n          toast.success('Nominee Added Successfully')\r\n          this.handleSidebar(false, true)\r\n\r\n          this.props.getData(this.props.parsedFilter)\r\n        })\r\n        .catch((e) => {\r\n          this.setState({ isLoading: false })\r\n          toast.error('Add Nominee Failed! Please contact admin')\r\n        })\r\n\r\n      console.log('aaquib', nominee)\r\n    }\r\n  }\r\n  updateData = (obj) => {\r\n    if (\r\n      obj.name === '' ||\r\n      obj.relation === '' ||\r\n      obj.email === '' ||\r\n      obj.contact1 === '' ||\r\n      obj.address === ''\r\n    ) {\r\n      toast.error('Please Fill All Mandatory Details')\r\n    } else {\r\n      this.setState({ isLoading: true })\r\n      console.log('aaquib', obj)\r\n      let userData = localStorage.getItem('logInUserData')\r\n        ? JSON.parse(localStorage.getItem('logInUserData'))\r\n        : {}\r\n      const nominee = {\r\n        _id: obj._id,\r\n        usage: obj.usage ? obj.usage : 'Unused',\r\n        userId: userData._id,\r\n        name: encryptdata(obj.name, true),\r\n        relation: encryptdata(obj.relation1, true),\r\n        email: encryptdata(obj.email, true),\r\n        primaryContact: encryptdata(obj.contact1, true),\r\n        secondaryContact: encryptdata(obj.contact2, true),\r\n        address: encryptdata(obj.address, true)\r\n      }\r\n      axios\r\n        .post('/backendapi/nominee/update', nominee, {\r\n          headers: {\r\n            Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n          }\r\n        })\r\n        .then((res) => {\r\n          this.setState({ isLoading: false })\r\n          toast.success('Nominee Updated Successfully')\r\n          this.handleSidebar(false, true)\r\n\r\n          this.props.getData(this.props.parsedFilter)\r\n        })\r\n        .catch((e) => {\r\n          this.setState({ isLoading: false })\r\n          toast.error('Add Nominee Failed! Please contact admin')\r\n        })\r\n\r\n      console.log('aaquib', nominee)\r\n    }\r\n  }\r\n  handleCurrentData = (obj) => {\r\n    this.setState({ currentData: obj })\r\n    this.handleSidebar(true)\r\n  }\r\n\r\n  handlePagination = (page) => {\r\n    let { parsedFilter, getData } = this.props\r\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\r\n    let urlPrefix = this.props.thumbView\r\n      ? '/#/nominee/list/'\r\n      : '/#/nominee/list/'\r\n    history.push(\r\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\r\n    )\r\n    getData({ page: page.selected + 1, perPage: perPage })\r\n    this.setState({ currentPage: page.selected })\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      columns,\r\n      data,\r\n      allData,\r\n      value,\r\n      rowsPerPage,\r\n      currentData,\r\n      sidebar,\r\n      totalRecords,\r\n      sortIndex\r\n    } = this.state\r\n    // if (data.length === 0 && allData.length === 0) {\r\n    //   return (\r\n    //     <div className=\"fallback-spinner vh-100\">\r\n    //       {/* <img className=\"fallback-logo\" src={logo} alt=\"logo\" /> */}\r\n    //       <div className=\"loading\">\r\n    //         <div className=\"effect-1 effects\"></div>\r\n    //         <div className=\"effect-2 effects\"></div>\r\n    //         <div className=\"effect-3 effects\"></div>\r\n    //       </div>\r\n    //     </div>\r\n    //   )\r\n    // }\r\n    return (\r\n      <div\r\n        className={`data-list ${\r\n          this.props.thumbView ? 'thumb-view' : 'list-view'\r\n        }`}\r\n      >\r\n        <DataTable\r\n          width=\"200\"\r\n          columns={\r\n            window.screen.width < 600 ? this.state.mobilecolumns : columns\r\n          }\r\n          data={value.length ? allData : data}\r\n          noHeader\r\n          subHeader\r\n          selectableRows={window.screen.width < 600 ? false : false}\r\n          responsive\r\n          pointerOnHover\r\n          selectableRowsHighlight\r\n          onSelectedRowsChange={(data) =>\r\n            this.setState({ selected: data.selectedRows })\r\n          }\r\n          customStyles={selectedStyle}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              className=\"data-table\"\r\n              handleSidebar={this.handleSidebar}\r\n              handleFilter={this.handleFilter}\r\n              handleRowsPerPage={this.handleRowsPerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              total={totalRecords}\r\n              index={sortIndex}\r\n            />\r\n          }\r\n          sortIcon={<ChevronDown />}\r\n        />\r\n        <Sidebar\r\n          show={sidebar}\r\n          data={currentData}\r\n          updateData={this.updateData}\r\n          addData={this.addData}\r\n          isLoading={this.state.isLoading}\r\n          handleSidebar={this.handleSidebar}\r\n          thumbView={this.props.thumbView}\r\n          getData={this.props.getData}\r\n          dataParams={this.props.parsedFilter}\r\n          addNew={this.state.addNew}\r\n        />\r\n        <div\r\n          className={classnames('data-list-overlay', {\r\n            show: sidebar\r\n          })}\r\n          onClick={() => this.handleSidebar(false, true)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //decrypt the data here\r\n  return {\r\n    dataList: state.dataList\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getData,\r\n  deleteData,\r\n  updateData,\r\n  addData,\r\n  getInitialData,\r\n  filterData\r\n})(DataListConfig)\r\n","import React from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport NomineeListConfig from './NomineeListConfig'\r\nimport queryString from 'query-string'\r\nimport { ToastContainer } from 'react-toastify'\r\nclass NomineeList extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h2 className=\"warning spacing nodisplay\">Nominees</h2>\r\n        <Row>\r\n          <ToastContainer />\r\n          <Col sm=\"12\">\r\n            <NomineeListConfig\r\n              parsedFilter={queryString.parse(this.props.location.search)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NomineeList\r\n"],"sourceRoot":""}