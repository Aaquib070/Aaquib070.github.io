{"version":3,"sources":["redux/actions/todo/index.js","views/apps/todo/TodoSidebar.js","views/apps/todo/TodoList.js","views/apps/todo/TaskSidebar.js","views/apps/todo/Todo.js","components/@vuexy/checkbox/CheckboxesVuexy.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js"],"names":["getTodos","routeParams","dispatch","a","axios","get","params","then","result","type","todos","data","catch","err","console","log","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","TodoSidebar","Fragment","className","onClick","props","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","this","routerProps","location","pathname","React","Component","connect","filter","history","push","TodoList","state","handleUpdateTask","currentLocation","handleOnChange","e","setState","target","searchTask","match","app","routerFilter","todosArr","length","filteredTodos","renderTodos","map","i","key","icon","label","checked","stopPropagation","onChange","title","tags","tag","trashTask","desc","FormGroup","Input","placeholder","routeParam","todoApp","getState","post","response","val","TaskSidebar","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","prevState","addTaskState","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","updateLabel","rows","updateTask","addNewTask","disabled","outline","task","mql","window","matchMedia","TODO","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","open","mediaQueryChanged","handleAddTask","status","undefined","handleUndoChanges","arr","addListener","removeListener","Consumer","context","sidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction","CheckBoxesVuexy","defaultChecked","style","labelColor","propTypes","children","PropTypes","node","string","bsSize","valid","bool","invalid","tagPropType","innerRef","oneOfType","object","func","plaintext","addon","cssModule","_React$Component","_this","call","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","row","check","inline","defaultStyles","position","top","left","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","componentDidMount","isIos","navigator","userAgent","saveSidebarWidth","componentDidUpdate","isTouching","ev","targetTouches","identifier","clientX","ind","touchWidth","touchSidebarWidth","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","Math","abs","width","offsetWidth","innerWidth","min","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","root","role","rootId","hasBoxShadow","shadow","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","sidebarId","overlayClassName","overlayId","contentId","defineProperty","module","exports","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","enumerable","forEach"],"mappings":"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","file":"static/js/30.c03882e5.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { history } from '../../../history'\r\n\r\nexport const getTodos = (routeParams) => {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .get('api/apps/todo', {\r\n        params: routeParams\r\n      })\r\n      .then((result) => {\r\n        dispatch({\r\n          type: 'GET_TODOS',\r\n          todos: result.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n}\r\nexport const completeTask = (todo) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'COMPLETE_TASK', id: todo.id, value: todo.isCompleted })\r\n  }\r\n}\r\n\r\nexport const starTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'STAR_TASK', id: todo.id, value: todo.isStarred })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const importantTask = (todo) => {\r\n  return (dispatch) => {\r\n    Promise.all([\r\n      dispatch({ type: 'IMPORTANT_TASK', id: todo.id, value: todo.isImportant })\r\n    ])\r\n  }\r\n}\r\n\r\nexport const trashTask = (id) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios\r\n      .post('/api/app/todo/trash-todo', id)\r\n      .then((response) => dispatch({ type: 'TRASH_TASK', id }))\r\n      .then(dispatch(getTodos(params)))\r\n  }\r\n}\r\n\r\nexport const updateTodo = (todo) => {\r\n  const request = axios.post('/api/apps/todo/update-todo', todo)\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    request.then((response) => {\r\n      Promise.all([\r\n        dispatch({\r\n          type: 'UPDATE_TODO',\r\n          todos: response.data\r\n        })\r\n      ]).then(() => dispatch(getTodos(params)))\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateTask = (id, title, desc) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'UPDATE_TASK', id, title, desc })\r\n  }\r\n}\r\n\r\nexport const updateLabel = (id, label) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: 'UPDATE_LABEL', label, id })\r\n  }\r\n}\r\n\r\nexport const addNewTask = (task) => {\r\n  return (dispatch, getState) => {\r\n    const params = getState().todoApp.todo.routeParam\r\n    axios.post('/api/apps/todo/new-task', { task }).then((response) => {\r\n      dispatch({ type: 'ADD_TASK', task })\r\n      dispatch(getTodos(params))\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchTask = (val) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: 'SEARCH_TASK',\r\n      val\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilter = (filter) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'CHANGE_FILTER', filter })\r\n    history.push(`/diary/${filter}`)\r\n    dispatch(getTodos({ filter }))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Layers, Star, Info, Check, Trash } from 'react-feather'\r\nimport { connect } from 'react-redux'\r\nimport { changeFilter } from '../../../redux/actions/todo/index'\r\nclass TodoSidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <span\r\n          className=\"sidebar-close-icon\"\r\n          onClick={() => this.props.mainSidebar(false)}\r\n        >\r\n          <X size={15} />\r\n        </span>\r\n        <div className=\"todo-app-menu\">\r\n          <div className=\"add-task\">\r\n            <Button.Ripple\r\n              block\r\n              className=\"btn-block my-1\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.props.addTask('open')\r\n                this.props.mainSidebar(false)\r\n              }}\r\n            >\r\n              Add Note\r\n            </Button.Ripple>\r\n          </div>\r\n          <PerfectScrollbar\r\n            className=\"sidebar-menu-list\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0 pt-0\"\r\n                action\r\n                onClick={() => {\r\n                  this.props.changeFilter('all')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/todo/all'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Layers size={22} />\r\n                <span className=\"align-middle ml-1\">All</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('starred')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/todo/starred'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Star size={22} />\r\n                <span className=\"align-middle ml-1\">Starred</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('important')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/todo/important'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Info size={22} />\r\n                <span className=\"align-middle ml-1\">Important</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('completed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/todo/completed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Check size={22} />\r\n                <span className=\"align-middle ml-1\">Completed</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('trashed')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/todo/trashed'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <Trash size={22} />\r\n                <span className=\"align-middle ml-1\">Trashed</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <hr />\r\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\r\n            <ListGroup className=\"font-medium-1\">\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('frontend')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/todo/frontend'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-primary align-middle\" />\r\n                <span className=\"align-middle ml-1\">Frontend</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('backend')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/todo/backend'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-warning align-middle\" />\r\n                <span className=\"align-middle ml-1\">Backend</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('doc')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/todo/doc'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-success align-middle\" />\r\n                <span className=\"align-middle ml-1\">Doc</span>\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                className=\"border-0\"\r\n                onClick={() => {\r\n                  this.props.changeFilter('bug')\r\n                }}\r\n                active={\r\n                  this.props.routerProps.location.pathname === '/todo/bug'\r\n                    ? true\r\n                    : false\r\n                }\r\n              >\r\n                <span className=\"bullet bullet-danger align-middle\" />\r\n                <span className=\"align-middle ml-1\">Bug</span>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { changeFilter })(TodoSidebar)\r\n","import React from 'react'\r\nimport { FormGroup, Input } from 'reactstrap'\r\nimport { Menu, Search, Check, Info, Star, Trash } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n} from '../../../redux/actions/todo/index'\r\nimport Checkbox from '../../../components/@vuexy/checkbox/CheckboxesVuexy'\r\nclass TodoList extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.app.todo.routeParam !== state.currentLocation) {\r\n      return {\r\n        todos: props.app.todo.todos\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    todos: [],\r\n    handleUpdateTask: null,\r\n    currentLocation: this.props.routerProps.location.pathname,\r\n    value: ''\r\n  }\r\n  async componentDidMount() {\r\n    await this.props.getTodos(this.props.routerProps.match.params)\r\n    this.setState({\r\n      todos: this.props.app.todo.todos,\r\n      handleUpdateTask: this.props.handleUpdateTask\r\n    })\r\n  }\r\n\r\n  handleOnChange = (e) => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchTask(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const { todos, handleUpdateTask, value } = this.state\r\n    let routerFilter = this.props.routerProps.match.params.filter\r\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\r\n    let renderTodos =\r\n      todosArr.length > 0 ? (\r\n        todosArr.map((todo, i) => {\r\n          return (\r\n            <li\r\n              className={`todo-item ${todo.isCompleted ? 'completed' : ''}`}\r\n              key={i}\r\n              onClick={() => {\r\n                handleUpdateTask(todo)\r\n              }}\r\n            >\r\n              <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\r\n                <div className=\"todo-title-area d-flex align-items-center\">\r\n                  <div className=\"title-wrapper d-flex\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      className=\"user-checkbox\"\r\n                      icon={<Check className=\"vx-icon\" size={12} />}\r\n                      label={''}\r\n                      checked={todo.isCompleted}\r\n                      size=\"sm\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.completeTask(todo)\r\n                      }}\r\n                      onChange={(e) => e.stopPropagation()}\r\n                    />\r\n                    <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\r\n                  </div>\r\n                  {todo.tags.length > 0 ? (\r\n                    <div className=\"chip-wrapper\">\r\n                      {todo.tags.map((tag, i) => (\r\n                        <div className=\"chip mb-0\" key={i}>\r\n                          <div className=\"chip-body\">\r\n                            <span className=\"chip-text\">\r\n                              <span\r\n                                className={`bullet bullet-${\r\n                                  tag === 'backend'\r\n                                    ? 'warning'\r\n                                    : tag === 'doc'\r\n                                    ? 'success'\r\n                                    : tag === 'bug'\r\n                                    ? 'danger'\r\n                                    : 'primary'\r\n                                } bullet-xs`}\r\n                              />\r\n                              <span className=\"text-capitalize ml-25\">\r\n                                {tag}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div\r\n                  className={`todo-item-action d-flex ${\r\n                    routerFilter === 'trashed' ? 'justify-content-end' : ''\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`todo-item-info d-inline-block ${\r\n                      routerFilter === 'trashed' ? 'mr-1' : 'mr-1 mr-sm-0'\r\n                    }`}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation()\r\n                      this.props.importantTask(todo)\r\n                    }}\r\n                  >\r\n                    <Info\r\n                      size={17}\r\n                      className={`${todo.isImportant ? 'text-success' : ''}`}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation()\r\n                      this.props.starTask(todo)\r\n                    }}\r\n                  >\r\n                    <Star\r\n                      size={17}\r\n                      className={`${todo.isStarred ? 'text-warning' : ''}`}\r\n                    />\r\n                  </div>\r\n                  {routerFilter !== 'trashed' ? (\r\n                    <div\r\n                      className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        this.props.trashTask(todo.id)\r\n                      }}\r\n                    >\r\n                      <Trash size={17} />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              {todo.desc.length > 0 ? (\r\n                <p className=\"todo-desc truncate mb-0\">{todo.desc}</p>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n          )\r\n        })\r\n      ) : (\r\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\r\n          No tasks at this time\r\n        </p>\r\n      )\r\n\r\n    return (\r\n      <div className=\"content-right\">\r\n        <div className=\"todo-app-area\">\r\n          <div className=\"todo-app-list-wrapper\">\r\n            <div className=\"todo-app-list\">\r\n              <div className=\"app-fixed-search\">\r\n                <div\r\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\r\n                  onClick={() => this.props.mainSidebar(true)}\r\n                >\r\n                  <Menu size={24} />\r\n                </div>\r\n                <FormGroup className=\"position-relative has-icon-left m-0 d-inline-block d-lg-block\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={(e) => this.handleOnChange(e)}\r\n                    value={value}\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <Search size={15} />\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <PerfectScrollbar\r\n                className=\"todo-task-list\"\r\n                options={{\r\n                  wheelPropagation: false\r\n                }}\r\n              >\r\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getTodos,\r\n  completeTask,\r\n  starTask,\r\n  importantTask,\r\n  trashTask,\r\n  searchTask\r\n})(TodoList)\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  FormGroup,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\nimport { X, Info, Star, Tag, Check } from 'react-feather'\r\nimport Checkbox from '../../../components/@vuexy/checkbox/CheckboxesVuexy'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  starTask,\r\n  completeTask,\r\n  importantTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n} from '../../../redux/actions/todo/index'\r\nclass TaskSidebar extends React.Component {\r\n  // static getDerivedStateFromProps (props, state){\r\n  //   if (\r\n  //    ( props.taskToUpdate !== null &&\r\n  //     props.taskToUpdate.title !== state.taskTitle) ||\r\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\r\n  //   ) {\r\n  //     let todosArr = props.app.todo.todos\r\n  //     let receivedTask =\r\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\r\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\r\n  //     let taskToUpdate, taskTitle, taskDesc\r\n  //     filteredTask.map(task => {\r\n  //       return (\r\n  //         (taskToUpdate = task),\r\n  //         (taskTitle = task.title),\r\n  //         (taskDesc = task.desc)\r\n  //       )\r\n  //     })\r\n  //     return {\r\n  //       taskToUpdate,\r\n  //       taskTitle,\r\n  //       taskDesc\r\n  //     }\r\n  //   }\r\n  //   return null\r\n  // }\r\n\r\n  state = {\r\n    taskToUpdate: null,\r\n    taskTitle: '',\r\n    taskDesc: '',\r\n    taskStatus: false,\r\n    taskStarred: false,\r\n    taskImportant: false,\r\n    newTask: {\r\n      title: '',\r\n      desc: '',\r\n      tags: [],\r\n      isCompleted: false,\r\n      isImportant: false,\r\n      isStarred: false\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskToUpdate !== this.props.taskToUpdate) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\r\n      (this.props.taskToUpdate !== null &&\r\n        this.state.taskImportant !== this.props.taskToUpdate.isImportant)\r\n    ) {\r\n      this.setState({\r\n        taskToUpdate: this.props.taskToUpdate,\r\n        taskTitle: this.props.taskToUpdate.title,\r\n        taskDesc: this.props.taskToUpdate.desc,\r\n        taskStatus: this.props.taskToUpdate.isCompleted,\r\n        taskStarred: this.props.taskToUpdate.isStarred,\r\n        taskImportant: this.props.taskToUpdate.isImportant\r\n      })\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  handleNewTaskTags = (tag) => {\r\n    let tagsArr = this.state.newTask.tags\r\n    if (tagsArr.includes(tag)) {\r\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\r\n    } else {\r\n      tagsArr.push(tag)\r\n    }\r\n    this.setState({\r\n      ...this.state.newTask,\r\n      tags: tag\r\n    })\r\n  }\r\n\r\n  renderTags = (taskArr) => {\r\n    return taskArr.map((tag, i) => (\r\n      <div className=\"chip mb-0 mr-50\" key={i}>\r\n        <div className=\"chip-body\">\r\n          <span className=\"chip-text\">\r\n            <span\r\n              className={`bullet bullet-${\r\n                tag === 'backend'\r\n                  ? 'warning'\r\n                  : tag === 'doc'\r\n                  ? 'success'\r\n                  : tag === 'bug'\r\n                  ? 'danger'\r\n                  : 'primary'\r\n              } bullet-xs`}\r\n            />\r\n            <span className=\"text-capitalize ml-25\">{tag}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } =\r\n      this.state\r\n\r\n    return (\r\n      <div\r\n        className={`task-sidebar ${\r\n          this.props.addTaskState === true ? 'show' : ''\r\n        }`}\r\n      >\r\n        <div className=\"task-header\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"task-type-title text-bold-600\">\r\n              <h3>\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\r\n                  ? 'Update Note'\r\n                  : 'Add Note'}\r\n              </h3>\r\n            </div>\r\n            <div className=\"close-icon\">\r\n              <X\r\n                className=\"cursor-pointer\"\r\n                size={20}\r\n                onClick={() => this.props.addTask('close')}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar>\r\n          <div className=\"task-body\">\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n              <div className=\"mark-complete\">\r\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && (\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    className=\"user-checkbox\"\r\n                    icon={<Check className=\"vx-icon\" size={15} />}\r\n                    label={''}\r\n                    checked={taskStatus}\r\n                    onChange={(e) => {\r\n                      this.props.completeTask(this.props.taskToUpdate)\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"task-actions\">\r\n                <Info\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskImportant) ||\r\n                    newTask.isImportant\r\n                      ? 'text-success'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.importantTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isImportant: !this.state.newTask.isImportant\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <Star\r\n                  size={20}\r\n                  className={`mr-50 ${\r\n                    (this.props.taskToUpdate !== null &&\r\n                      this.state.taskStarred) ||\r\n                    newTask.isStarred\r\n                      ? 'text-warning'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (this.props.taskToUpdate !== null) {\r\n                      this.props.starTask(this.props.taskToUpdate)\r\n                    } else {\r\n                      this.setState({\r\n                        newTask: {\r\n                          ...this.state.newTask,\r\n                          isStarred: !this.state.newTask.isStarred\r\n                        }\r\n                      })\r\n                    }\r\n                  }}\r\n                />\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle tag=\"span\">\r\n                    <Tag className=\"mr-50\" size={20} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu tag=\"ul\" right>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Frontend'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes(\r\n                              'frontend'\r\n                            )) ||\r\n                          newTask.tags.includes('frontend')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'frontend')\r\n                          else this.handleNewTaskTags('frontend')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Backend'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('backend')) ||\r\n                          newTask.tags.includes('backend')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'backend')\r\n                          else this.handleNewTaskTags('backend')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Doc'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('doc')) ||\r\n                          newTask.tags.includes('doc')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'doc')\r\n                          else this.handleNewTaskTags('doc')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                    <DropdownItem tag=\"li\">\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        className=\"user-checkbox\"\r\n                        icon={<Check className=\"vx-icon\" size={12} />}\r\n                        label={'Bug'}\r\n                        checked={\r\n                          (this.props.taskToUpdate !== null &&\r\n                            this.props.taskToUpdate.tags.includes('bug')) ||\r\n                          newTask.tags.includes('bug')\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        size=\"sm\"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation()\r\n                          if (this.props.taskToUpdate !== null)\r\n                            this.props.updateLabel(taskToUpdate.id, 'bug')\r\n                          else this.handleNewTaskTags('bug')\r\n                        }}\r\n                      />\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </div>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskTitle: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        title: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"textarea\"\r\n                placeholder=\"Description\"\r\n                rows=\"5\"\r\n                value={\r\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\r\n                }\r\n                onChange={(e) => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.setState({\r\n                      taskDesc: e.target.value\r\n                    })\r\n                  } else {\r\n                    this.setState({\r\n                      newTask: {\r\n                        ...this.state.newTask,\r\n                        desc: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                }}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\r\n              {this.props.taskToUpdate !== null &&\r\n              this.props.taskToUpdate.tags &&\r\n              this.props.taskToUpdate.tags.length > 0\r\n                ? this.renderTags(this.props.taskToUpdate.tags)\r\n                : null}\r\n            </div>\r\n\r\n            <hr className=\"my-2\" />\r\n            <div className=\"d-flex justify-content-end\">\r\n              <Button.Ripple\r\n                className=\"mr-50\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  if (this.props.taskToUpdate !== null) {\r\n                    this.props.updateTask(taskToUpdate.id, taskTitle, taskDesc)\r\n                  } else {\r\n                    this.props.addNewTask(this.state.newTask)\r\n                  }\r\n                  this.props.addTask('close')\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n                disabled={\r\n                  taskTitle.length > 0 || newTask.title.length > 0\r\n                    ? false\r\n                    : true\r\n                }\r\n              >\r\n                {taskToUpdate &&\r\n                taskToUpdate.id &&\r\n                this.props.taskToUpdate !== null\r\n                  ? 'Update'\r\n                  : 'Add'}\r\n              </Button.Ripple>\r\n              <Button.Ripple\r\n                color=\"light\"\r\n                outline\r\n                onClick={() => {\r\n                  this.props.addTask('close')\r\n                  this.setState({\r\n                    newTask: {\r\n                      title: '',\r\n                      desc: '',\r\n                      tags: [],\r\n                      isCompleted: false,\r\n                      isImportant: false,\r\n                      isStarred: false\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button.Ripple>\r\n            </div>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.todoApp\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  completeTask,\r\n  importantTask,\r\n  starTask,\r\n  updateTask,\r\n  updateLabel,\r\n  addNewTask\r\n})(TaskSidebar)\r\n","import React from 'react'\r\nimport Sidebar from 'react-sidebar'\r\nimport { ContextLayout } from '../../../utility/context/Layout'\r\nimport TodoSidebar from './TodoSidebar'\r\nimport TodoList from './TodoList'\r\nimport TaskSidebar from './TaskSidebar'\r\nimport '../../../assets/scss/pages/app-todo.scss'\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass TODO extends React.Component {\r\n  state = {\r\n    addTask: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    taskToUpdate: null,\r\n    prevState: null\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  onSetSidebarOpen = (open) => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleAddTask = (status) => {\r\n    status === 'open'\r\n      ? this.setState({ addTask: true })\r\n      : this.setState({ addTask: false, taskToUpdate: null })\r\n  }\r\n  handleUpdateTask = (todo) => {\r\n    if (todo !== undefined) {\r\n      this.setState({ addTask: true, taskToUpdate: todo })\r\n    } else {\r\n      this.setState({ taskToUpdate: null })\r\n    }\r\n  }\r\n\r\n  handleUndoChanges = (arr) => {\r\n    this.setState({\r\n      prevState: arr\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-application position-relative\">\r\n        <div\r\n          className={`app-content-overlay ${\r\n            this.state.addTask || this.state.sidebarOpen ? 'show' : ''\r\n          }`}\r\n          onClick={() => {\r\n            this.handleAddTask('close')\r\n            this.onSetSidebarOpen(false)\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {(context) => (\r\n            <Sidebar\r\n              sidebar={\r\n                <TodoSidebar\r\n                  routerProps={this.props}\r\n                  addTask={this.handleAddTask}\r\n                  mainSidebar={this.onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={this.state.sidebarDocked}\r\n              open={this.state.sidebarOpen}\r\n              sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\r\n              touch={false}\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === 'rtl'}\r\n            >\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <TodoList\r\n          routerProps={this.props}\r\n          handleUpdateTask={this.handleUpdateTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          prevState={this.state.prevState}\r\n        />\r\n        <TaskSidebar\r\n          addTask={this.handleAddTask}\r\n          addTaskState={this.state.addTask}\r\n          taskToUpdate={this.state.taskToUpdate}\r\n          newTask={this.state.newTask}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          handleUndoChanges={this.handleUndoChanges}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TODO\r\n","import React from 'react'\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : ''\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : 'md'\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span style={{ color: this.props.labelColor }}>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;"],"sourceRoot":""}