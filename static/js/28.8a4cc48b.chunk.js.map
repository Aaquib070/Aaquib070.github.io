{"version":3,"sources":["assets/img/slider/banner-25.jpg","views/DocumentVault/DocumentVault.js"],"names":["module","exports","ProgrammaticallyDropzone","props","useState","files","setFiles","useDropzone","noClick","noKeyboard","onDrop","acceptedFiles","setfilesOndrop","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","open","thumbs","className","key","name","src","onError","e","target","img5","alt","useEffect","forEach","revokeObjectURL","resetDropzone","onClick","length","axios","defaults","baseURL","Assets","state","user","JSON","parse","localStorage","getItem","active","reset","activeTab","collapseID","status","collapseItems","id","title","content","md","sm","componentDidMount","get","_id","headers","Authorization","then","res","console","log","data","resp","l","desc","decryptdata","attname","alias","blobName","filename","setState","catch","showDocument","d","show","toggle","tab","toggleCollapse","prevState","submitDropzone","formData","FormData","append","post","type","expiry","encryptdata","onEntered","onEntering","onExited","onExiting","accordionMarginItems","this","collapseItem","idx","classnames","closing","opening","size","isOpen","Fragment","Math","random","tabId","placeholder","onChange","value","themeConfig","theme","for","style","textAlign","Ripple","outline","color","React","Component"],"mappings":"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","file":"static/js/28.8a4cc48b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-25.a47593fc.jpg\";","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Row,\r\n  Col,\r\n  TabContent,\r\n  TabPane,\r\n  Card,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  CardHeader,\r\n  Collapse,\r\n  CardBody,\r\n  CardTitle,\r\n  Label\r\n} from 'reactstrap'\r\nimport { encryptdata, decryptdata } from '../../utility/context/SecurityTool'\r\nimport { ChevronDown } from 'react-feather'\r\nimport classnames from 'classnames'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport img5 from '../../assets/img/slider/banner-25.jpg'\r\nimport '../../assets/scss/plugins/extensions/dropzone.scss'\r\nimport themeConfig from '../../configs/themeConfig'\r\nimport axios from 'axios'\r\naxios.defaults.baseURL = 'http://localhost:5000'\r\n\r\nfunction ProgrammaticallyDropzone(props) {\r\n  const [files, setFiles] = useState([])\r\n  const { getRootProps, getInputProps, open } = useDropzone({\r\n    //accept: \"image/*\",\r\n    noClick: true,\r\n    noKeyboard: true,\r\n    onDrop: (acceptedFiles) => {\r\n      props.setfilesOndrop(acceptedFiles)\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n          })\r\n        )\r\n      )\r\n    }\r\n  })\r\n\r\n  const thumbs = files.map((file) => (\r\n    // <div style={{display: 'flex', flexDirection: 'column'}}>\r\n    //   <div>\r\n    //   <span> {file.name}</span>\r\n    //   </div>\r\n    <div className=\"dz-thumb\" key={file.name}>\r\n      <div className=\"dz-thumb-inner\">\r\n        <img\r\n          src={file.preview}\r\n          className=\"dz-img\"\r\n          onError={(e) => {\r\n            e.target.src = img5\r\n          }}\r\n          alt={file.name}\r\n        />\r\n        <br />\r\n        <span> {file.name}</span>\r\n      </div>\r\n    </div>\r\n    // </div>\r\n  ))\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview))\r\n    },\r\n    [files]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (props.resetDropzone) {\r\n      setFiles([])\r\n    }\r\n  }, [props.resetDropzone])\r\n\r\n  return (\r\n    <section>\r\n      <div {...getRootProps({ className: 'dropzone' })}>\r\n        <input {...getInputProps()} />\r\n        <p className=\"mx-1\" onClick={open}>\r\n          Drag 'n' drop some files here, or Click to Select files\r\n        </p>\r\n      </div>\r\n      {/* <br />\r\n      <Button.Ripple\r\n        color=\"warning\"\r\n        outline\r\n        className=\"mr-1 mb-1 btn-block\"\r\n        size=\"lg\"\r\n        block\r\n        onClick={open}\r\n      >\r\n        Select File\r\n      </Button.Ripple> */}\r\n      {thumbs.length ? (\r\n        <aside className=\"thumb-container-documents\">{thumbs}</aside>\r\n      ) : (\r\n        <div {...getRootProps({ className: 'dropzone-dummy' })}>\r\n          <p className=\"mx-1\">Preview Selected files</p>\r\n        </div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nclass Assets extends React.Component {\r\n  state = {\r\n    user: JSON.parse(localStorage.getItem('logInUserData')),\r\n    active: '2',\r\n    files: [],\r\n    reset: false,\r\n    activeTab: '1',\r\n    collapseID: '',\r\n    status: 'Closed',\r\n    collapseItems: [\r\n      {\r\n        id: 1,\r\n        title: '10th Marksheet',\r\n        content: (\r\n          <div>\r\n            <Row>\r\n              <Col md=\"6\" sm=\"12\">\r\n                >Hey 1\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                >Hey 2\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Girlfiends pics',\r\n        content:\r\n          'Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.'\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Driving License',\r\n        content:\r\n          'Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.'\r\n      },\r\n      {\r\n        id: 4,\r\n        title: 'Mutual Fund',\r\n        content:\r\n          'Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.'\r\n      }\r\n    ]\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    axios\r\n      .get('/backendapi/documents/' + this.state.user._id, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((res) => {\r\n        //window.location.reload()\r\n        console.log('eeeeeeeeeeeeeeeeeeeee', res.data)\r\n        const resp = res.data\r\n        for (let l = 0; l < resp.length; l = l + 1) {\r\n          //resp[l].expiry = decryptdata(resp[l].expiry);\r\n          resp[l].desc = decryptdata(resp[l].desc)\r\n          resp[l].attname = decryptdata(resp[l].attname)\r\n          resp[l].alias = decryptdata(resp[l].alias)\r\n          resp[l].blobName = decryptdata(resp[l].blobName)\r\n          resp[l].filename = decryptdata(resp[l].filename)\r\n        }\r\n        this.setState({ collapseItems: resp })\r\n      })\r\n      .catch()\r\n  }\r\n\r\n  showDocument = (d) => {\r\n    //alert(d);\r\n    const { collapseItems } = this.state\r\n    collapseItems[d].show = true\r\n    this.setState({ collapseItems })\r\n  }\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.active !== tab) {\r\n      this.setState({ active: tab })\r\n    }\r\n  }\r\n  openacc: []\r\n\r\n  toggleCollapse = (collapseID) => {\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n    }))\r\n  }\r\n\r\n  setfilesOndrop = (data) => {\r\n    this.setState({ reset: false })\r\n    this.setState({\r\n      files: data.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })\r\n      )\r\n    })\r\n  }\r\n\r\n  resetDropzone = () => {\r\n    this.setState({ reset: true })\r\n  }\r\n  onError = (e) => {\r\n    console.log(e, 'error in file-viewer')\r\n  }\r\n\r\n  submitDropzone = () => {\r\n    console.log('files', this.state.files)\r\n    const formData = new FormData()\r\n    //formData.append('file', encrypted)\r\n    formData.append('file', this.state.files[0])\r\n    axios\r\n      .post('/upload/api', formData, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n        }\r\n      })\r\n      .then((res) => {\r\n        //window.location.reload()\r\n        console.log('eeeeeeeeeeeeeeeeeeeee', res.data)\r\n        const data = res.data\r\n        //aaquib\r\n        console.log('state1111111', this.state)\r\n        data.user = this.state.user._id\r\n        data.type = 'Vault'\r\n        data.expiry = this.state.expiry\r\n        data.desc = encryptdata(this.state.desc)\r\n        data.attname = encryptdata(this.state.attname)\r\n        data.alias = encryptdata(this.state.alias)\r\n        data.blobName = encryptdata(data.blobName)\r\n        data.filename = encryptdata(data.filename)\r\n        axios\r\n          .post('/backendapi/documents/add', data, {\r\n            headers: {\r\n              Authorization: 'Bearer ' + localStorage.getItem('authtoken')\r\n            }\r\n          })\r\n          .then((res) => {\r\n            //window.location.reload()\r\n            console.log('eeeeeeeeeeeeeeeeeeeee', res.data)\r\n          })\r\n          .catch()\r\n      })\r\n      .catch()\r\n  }\r\n\r\n  onEntered = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: 'Opened' })\r\n  }\r\n\r\n  onEntering = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: 'Opening...' })\r\n  }\r\n\r\n  onExited = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: 'Closed' })\r\n  }\r\n\r\n  onExiting = (id) => {\r\n    if (id === this.state.collapseID) this.setState({ status: 'Closing...' })\r\n  }\r\n\r\n  render() {\r\n    const accordionMarginItems = this.state.collapseItems.map(\r\n      (collapseItem, idx) => {\r\n        return (\r\n          <div className=\"collapse-margin\" key={collapseItem.id}>\r\n            <Card\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n              className={classnames({\r\n                'collapse-collapsed':\r\n                  this.state.status === 'Closed' &&\r\n                  this.state.collapseID === collapseItem.id,\r\n                'collapse-shown':\r\n                  this.state.status === 'Opened' &&\r\n                  this.state.collapseID === collapseItem.id,\r\n                closing:\r\n                  this.state.status === 'Closing...' &&\r\n                  this.state.collapseID === collapseItem.id,\r\n                opening:\r\n                  this.state.status === 'Opening...' &&\r\n                  this.state.collapseID === collapseItem.id\r\n              })}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n                <ChevronDown size={15} className=\"collapse-icon\" />\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={() => this.onEntering(collapseItem.id)}\r\n                onEntered={() => this.onEntered(collapseItem.id)}\r\n                onExiting={() => this.onExiting(collapseItem.id)}\r\n                onExited={() => this.onExited(collapseItem.id)}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          </div>\r\n        )\r\n      }\r\n    )\r\n\r\n    // const file = './esic.pdf'\r\n    // const type = 'pdf'\r\n    return (\r\n      <React.Fragment>\r\n        <h2 className=\"warning spacing nodisplay\">My Documents</h2>\r\n        <div key={Math.random()}>\r\n          {/* <FileViewer\r\n fileType={type}\r\n filePath={file}\r\n\r\nonError={this.onError}/> */}\r\n        </div>\r\n        {/* <Breadcrumbs\r\n          breadCrumbTitle=\"My Vault\"\r\n          breadCrumbParent=\"Document\"\r\n          breadCrumbActive=\"Vault\"\r\n        /> */}\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            {/* <Nav pills>\r\n      <NavItem>\r\n        <NavLink\r\n          className={classnames({\r\n            active: this.state.active === \"1\"\r\n          })}\r\n          onClick={() => {\r\n            this.toggle(\"1\")\r\n          }}\r\n        >\r\n          Add\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink\r\n          className={classnames({\r\n            active: this.state.active === \"2\"\r\n          })}\r\n          onClick={() => {\r\n            this.toggle(\"2\")\r\n          }}\r\n        >\r\n          Upload Files\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink disabled>Record Audio/Video</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink\r\n          className={classnames({\r\n            active: this.state.active === \"3\"\r\n          })}\r\n          onClick={() => {\r\n            this.toggle(\"3\")\r\n          }}\r\n        >\r\n          Bulk Upload\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav> */}\r\n            <TabContent activeTab={this.state.active}>\r\n              <TabPane tabId=\"1\">\r\n                {/* <AddAssets /> */}\r\n                {/* <Row>\r\n      <Col lg=\"8\" md=\"6\" sm=\"12\"><AddAssets /></Col>\r\n      <Col lg=\"4\" md=\"6\" sm=\"12\">\r\n            <GoalOverview strokeColor={$stroke_color} success={$success} />\r\n          </Col>\r\n          </Row> */}\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Upload any file, scans, documents</CardTitle>\r\n                  </CardHeader>\r\n\r\n                  <CardBody>\r\n                    <Row>\r\n                      <Col md=\"6\" sm=\"12\">\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"nameMultiname\"\r\n                            placeholder=\"Attachment Name / Alias\"\r\n                            onChange={(e) => {\r\n                              this.setState({ alias: e.target.value })\r\n                            }}\r\n                          />\r\n                          <Label\r\n                            className={\r\n                              themeConfig.theme === 'dark'\r\n                                ? 'dark-label'\r\n                                : 'light-label'\r\n                            }\r\n                            for=\"nameMultiname\"\r\n                          >\r\n                            Attachment Name / Alias\r\n                          </Label>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            className=\"input-label\"\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"nameMultiFile\"\r\n                            placeholder=\"File Name\"\r\n                          />\r\n                          <Label\r\n                            className={\r\n                              themeConfig.theme === 'dark'\r\n                                ? 'dark-label'\r\n                                : 'light-label'\r\n                            }\r\n                            for=\"nameMultiFile\"\r\n                          >\r\n                            File Name\r\n                          </Label>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            className=\"input-label\"\r\n                            type=\"Date\"\r\n                            name=\"name\"\r\n                            id=\"nameMultiExpiry\"\r\n                            placeholder=\"Expiry Date\"\r\n                          />\r\n                          <Label\r\n                            className={\r\n                              themeConfig.theme === 'dark'\r\n                                ? 'dark-label'\r\n                                : 'light-label'\r\n                            }\r\n                            for=\"nameMultiExpiry\"\r\n                          >\r\n                            Expiry Date\r\n                          </Label>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"form-label-group\">\r\n                          <Input\r\n                            className=\"input-label\"\r\n                            type=\"textarea\"\r\n                            name=\"name\"\r\n                            id=\"nameMultiDescription\"\r\n                            placeholder=\"Description\"\r\n                          />\r\n                          <Label\r\n                            className={\r\n                              themeConfig.theme === 'dark'\r\n                                ? 'dark-label'\r\n                                : 'light-label'\r\n                            }\r\n                            for=\"nameMultiDescription\"\r\n                          >\r\n                            Description\r\n                          </Label>\r\n                        </FormGroup>\r\n                        <FormGroup\r\n                          className=\"form-label-group last-row-form\"\r\n                          style={{ textAlign: 'right' }}\r\n                        >\r\n                          <Button.Ripple\r\n                            outline\r\n                            color=\"secondary\"\r\n                            type=\"reset\"\r\n                            className=\"button-label\"\r\n                            onClick={(e) => {\r\n                              this.resetDropzone()\r\n                            }}\r\n                          >\r\n                            Reset\r\n                          </Button.Ripple>{' '}\r\n                          <Button.Ripple\r\n                            color=\"warning\"\r\n                            // disabled={this.state.nominees.length === 0}\r\n                            type=\"reset\"\r\n                            className=\"button-label\"\r\n                            onClick={(e) => {\r\n                              this.submitDropzone(e)\r\n                            }}\r\n                          >\r\n                            {'  Add  '}\r\n                          </Button.Ripple>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\" sm=\"12\">\r\n                        <ProgrammaticallyDropzone\r\n                          setfilesOndrop={this.setfilesOndrop}\r\n                          resetDropzone={this.state.reset}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col sm=\"12\">\r\n                        <Card>\r\n                          <CardHeader>\r\n                            <CardTitle>My Documents</CardTitle>\r\n                          </CardHeader>\r\n                          <CardBody>\r\n                            <TabContent activeTab={this.state.activeTab}>\r\n                              <TabPane tabId=\"1\">\r\n                                <div className=\"vx-collapse\">\r\n                                  {accordionMarginItems}\r\n                                </div>\r\n                              </TabPane>\r\n                              <TabPane className=\"component-code\" tabId=\"2\">\r\n                                hey\r\n                              </TabPane>\r\n                            </TabContent>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </TabPane>\r\n              <TabPane tabId=\"3\">Coming soon .......!</TabPane>\r\n            </TabContent>\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Assets\r\n"],"sourceRoot":""}